"r04945025","10","0.072","104608","@549328fb7690e435c7ee9616358721b6@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.HashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            HashSet<String> hash = new HashSet<String>();
            String[] data = br.readLine().split("","");
            int count = 0;
            int set = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            boolean[][] bingo = new boolean[num][num];
            boolean[][] result = new boolean[2 * num + 2][num];
            boolean[] cmp = new boolean[num];

            data = br.readLine().split("","");
            for(int i = 0; i < set; i++){
                if(!hash.contains(data[i])) hash.add(data[i]);
            }

            for(int i = 0; i < num; i++){
                data = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    if(hash.contains(data[j])) bingo[i][j] = true;
                }
            }

            for(int i = 0; i < num; i++){
                result[i] = bingo[i];
                for(int j = 0; j < num; j++) {
                    result[num + j][i] = bingo[i][j];
                    if(i == j){
                        result[2 * num][i] = bingo[i][i];
                    }
                    if(i + j == num - 1){
                        result[2 * num + 1][j] = bingo[i][j];
                    }
                }
            }

            /*for(int i = 0; i < 2 * num + 2; i++){
                if(i == num || i == 2*num){
                    System.err.printf(""-----------------------------------\n"");
                }
                for(int j = 0; j < num; j++){
                    System.err.printf(""%b\t"", result[i][j]);
                }
                System.err.printf(""\n"");
            }*/

            for(int i = 0; i < num; i++){
                cmp[i] = true;
            }

            for(int i = 0; i < num * 2 + 2; i++){
                if(Arrays.equals(cmp, result[i])) count++;
            }
            System.out.printf(""%d\n"", count);
        }
    }
}

@549328fb7690e435c7ee9616358721b6@"
"r04945025","10","0.091","106848","@549328fb7690e435c7ee9616358721b6@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.HashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            HashSet<String> hash = new HashSet<String>();
            String[] data = br.readLine().split("","");
            int count = 0;
            int set = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            boolean[][] bingo = new boolean[num][num];
            boolean[][] result = new boolean[2 * num + 2][num];
            boolean[] cmp = new boolean[num];

            data = br.readLine().split("","");
            for(int i = 0; i < set; i++){
                if(!hash.contains(data[i])) hash.add(data[i]);
            }

            for(int i = 0; i < num; i++){
                data = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    if(hash.contains(data[j])) bingo[i][j] = true;
                }
            }

            for(int i = 0; i < num; i++){
                result[i] = bingo[i];
                for(int j = 0; j < num; j++) {
                    result[num + j][i] = bingo[i][j];
                    if(i == j){
                        result[2 * num][i] = bingo[i][i];
                    }
                    if(i + j == num - 1){
                        result[2 * num + 1][j] = bingo[i][j];
                    }
                }
            }

            /*for(int i = 0; i < 2 * num + 2; i++){
                if(i == num || i == 2*num){
                    System.err.printf(""-----------------------------------\n"");
                }
                for(int j = 0; j < num; j++){
                    System.err.printf(""%b\t"", result[i][j]);
                }
                System.err.printf(""\n"");
            }*/

            for(int i = 0; i < num; i++){
                cmp[i] = true;
            }

            for(int i = 0; i < num * 2 + 2; i++){
                if(Arrays.equals(cmp, result[i])) count++;
            }
            System.out.printf(""%d\n"", count);
        }
    }
}

@549328fb7690e435c7ee9616358721b6@"
"r04945025","10","0.09","106624","@549328fb7690e435c7ee9616358721b6@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.HashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            HashSet<String> hash = new HashSet<String>();
            String[] data = br.readLine().split("","");
            int count = 0;
            int set = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            boolean[][] bingo = new boolean[num][num];
            boolean[][] result = new boolean[2 * num + 2][num];
            boolean[] cmp = new boolean[num];

            data = br.readLine().split("","");
            for(int i = 0; i < set; i++){
                if(!hash.contains(data[i])) hash.add(data[i]);
            }

            for(int i = 0; i < num; i++){
                data = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    if(hash.contains(data[j])) bingo[i][j] = true;
                }
            }

            for(int i = 0; i < num; i++){
                result[i] = bingo[i];
                for(int j = 0; j < num; j++) {
                    result[num + j][i] = bingo[i][j];
                    if(i == j){
                        result[2 * num][i] = bingo[i][i];
                    }
                    if(i + j == num - 1){
                        result[2 * num + 1][j] = bingo[i][j];
                    }
                }
            }

            /*for(int i = 0; i < 2 * num + 2; i++){
                if(i == num || i == 2*num){
                    System.err.printf(""-----------------------------------\n"");
                }
                for(int j = 0; j < num; j++){
                    System.err.printf(""%b\t"", result[i][j]);
                }
                System.err.printf(""\n"");
            }*/

            for(int i = 0; i < num; i++){
                cmp[i] = true;
            }

            for(int i = 0; i < num * 2 + 2; i++){
                if(Arrays.equals(cmp, result[i])) count++;
            }
            System.out.printf(""%d\n"", count);
        }
    }
}

@549328fb7690e435c7ee9616358721b6@"
"r04447001","0","0.86","104512","@2f410230769f5f019a77b77fe04d76a8@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            int[][] resultmatrix = new int[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data2 = br.readLine().split("","");
            for(int i =0; i < stringCount; i++){
            announce[i] = data2[i];
            }//build the announce
            int current = 0;
            for(int i = 0; i < num; i++){
                String[] data3 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                resultmatrix[i][j] = compareString(data3[j],announce);
                current++;
                }
            }//build the countmatrix
            
            int result = 0;
            result = Matchedline(resultmatrix,num);
            System.out.println(result);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
        }
    }
    private static int compareString(String sub,String[] obj){
        int result = 0;
        for(int i = 0; i < obj.length; i++){
            if(obj[i].equalsIgnoreCase(sub)){
                result = 1;
                break;
            }
        }
        return result;
    }
    private static int Matchedline(int[][] matrix, int num){
        int finalcount = 0;
        for (int i = 0; i < num; i++) {
            int totalcount = 0;
            for (int j = 0; j < num; j++) {
                totalcount += matrix[i][j];
            }
            if (totalcount == num) {
                finalcount++;
            }
        }// row count
        for (int i = 0; i < num; i++) {
            int totalcount = 0;
            for (int j = 0; j < num; j++) {
                totalcount += matrix[j][i];
            }
            if (totalcount == num) {
                finalcount++;
            }
        }//column count
            int diagcount = 0;
        for (int i = 0; i < num; i++) {
                diagcount += matrix[i][i];
            if (diagcount == num) {
                finalcount++;
            }//diagonal site
        }
            diagcount = 0;//re-initialize
        for (int i = 0; i < num ; i++) {
                diagcount += matrix[(num-1-i)][i];
            if (diagcount == num) {
                finalcount++;
            }//another diagonal site
        }
        return finalcount;
    }
}

@2f410230769f5f019a77b77fe04d76a8@"
"r04921115","0","0","0","@12675c855f36bf4d6d1db36f57f4c738@package hw0;
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""C:\\Users\\Wen\\Desktop\\hw0\\input.txt""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
//            matrix = br.readLine().split("","");            
            int i,j;
            String[] temp = new String[num];
            for(i=0; i<num; i++){
            	temp = br.readLine().split("","");
            	for(j=0; j<num; j++){
            		matrix[i][j] = temp[j];
            		if(j!=num && j!=0){
            			//System.out.printf("", "");
            		}
            		//System.out.printf(""%s"", matrix[i][j]);
            	}
            	//System.out.printf(""\n"");
            }
            //System.out.printf(""ann: %s %s\n"", announce[0], announce[1]);
           
            //System.out.printf(""hahhaha %s %s %s\n"", matrix[0][0], matrix[0][1], matrix[0][2]);
            
            int straight_line = 0;
            int flag;
            for(i=0; i<num; i++){
            	flag = 0;
            	for(j=0; j<num; j++){
            		if ( matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])){
            			flag ++;
            		}else{
            			break;
            		}
            	}
            	if(flag==num){
            		straight_line++;
            	}
            }
            
            for(j=0; j<num; j++){
            	flag = 0;
            	for(i=0; i<num; i++){
            		if ( matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])){
            			flag ++;
            		}else{
            			break;
            		}
            	}
            	if(flag==num){
            		straight_line++;
            	}
            }
            
            for(i=0; i<num; i++){
            	flag = 0;
        		if ( matrix[i][i].equals(announce[0]) || matrix[i][i].equals(announce[1])){
        			flag ++;
        		}else{
        			break;
        		}
            	if(flag==num){
            		straight_line++;
            	}
            }
            
            for(i=0; i<num; i++){
            	flag = 0;
        		if ( matrix[i][num-1-i].equals(announce[0]) || matrix[i][num-1-i].equals(announce[1])){
        			flag ++;
        		}else{
        			break;
        		}
            	if(flag==num){
            		straight_line++;
            	}
            }
            System.out.printf(""%d\n"", straight_line);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@12675c855f36bf4d6d1db36f57f4c738@"
"r04921115","0","0.9","106880","@7ab123b5f2cbe701f3492401ec2d6854@//package hw0;
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
//            matrix = br.readLine().split("","");            
            int i,j;
            String[] temp = new String[num];
            for(i=0; i<num; i++){
            	temp = br.readLine().split("","");
            	for(j=0; j<num; j++){
            		matrix[i][j] = temp[j];
            		if(j!=num && j!=0){
            			//System.out.printf("", "");
            		}
            		//System.out.printf(""%s"", matrix[i][j]);
            	}
            	//System.out.printf(""\n"");
            }
            //System.out.printf(""ann: %s %s\n"", announce[0], announce[1]);
           
            //System.out.printf(""hahhaha %s %s %s\n"", matrix[0][0], matrix[0][1], matrix[0][2]);
            
            int straight_line = 0;
            int flag;
            for(i=0; i<num; i++){
            	flag = 0;
            	for(j=0; j<num; j++){
            		if ( matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])){
            			flag ++;
            		}else{
            			break;
            		}
            	}
            	if(flag==num){
            		straight_line++;
            	}
            }
            
            for(j=0; j<num; j++){
            	flag = 0;
            	for(i=0; i<num; i++){
            		if ( matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])){
            			flag ++;
            		}else{
            			break;
            		}
            	}
            	if(flag==num){
            		straight_line++;
            	}
            }
            
            for(i=0; i<num; i++){
            	flag = 0;
        		if ( matrix[i][i].equals(announce[0]) || matrix[i][i].equals(announce[1])){
        			flag ++;
        		}else{
        			break;
        		}
            	if(flag==num){
            		straight_line++;
            	}
            }
            
            for(i=0; i<num; i++){
            	flag = 0;
        		if ( matrix[i][num-1-i].equals(announce[0]) || matrix[i][num-1-i].equals(announce[1])){
        			flag ++;
        		}else{
        			break;
        		}
            	if(flag==num){
            		straight_line++;
            	}
            }
            System.out.printf(""%d\n"", straight_line);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@7ab123b5f2cbe701f3492401ec2d6854@"
"r04447001","0","0.8","103824","@c515e7a2eae0f53822ea6d5c992d2788@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] resultmatrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data2 = br.readLine().split("","");
            for(int i =0; i < stringCount; i++){
            announce[i] = data2[i];
            }//build the announce
            for(int i = 0; i < num; i++){
                String[] data3 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                resultmatrix[i][j] = data3[j];
                }
            }//build the countmatrix
            
            int result = 0;
            result = Matchedline(resultmatrix,announce,num);
            System.out.println(result);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
        }
    }
    private static int compareString(String sub[], String[] announce) {
        int result = 1;
        int[] counttable = new int[announce.length];
        for (int i = 0; i < announce.length; i++) {
            for (int j = 0; j < sub.length; j++) {
                if (announce[i].equalsIgnoreCase(sub[j])) {
                    counttable[i] = 1;
                }
            }
        }
        int test = 1;
        for (int i = 0; i < announce.length; i++) {
          if(counttable[i] == 0){result = 0;
          }
        }
        return result;
    }
    
    private static int Matchedline(String[][] matrix, String[] announce, int num){
        int finalcount = 0;
        String[] current = new String[num];
        for (int i = 0; i < num; i++) {
            for (int j = 0; j < num; j++) {
                current[j] =  matrix[i][j];
            }
            int temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }
        }// row count
        for (int i = 0; i < num; i++) {
            for (int j = 0; j < num; j++) {
                current[j] =  matrix[j][i];
            }
            int temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }
        }//column count
        for (int i = 0; i < num; i++) {
                current[i] = matrix[i][i];}
            int temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }//diagonal site

        for (int i = 0; i < num ; i++) {
                current[i] = matrix[(num-1-i)][i];
        }
            temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }//another diagonal site
        return finalcount;
    }
}


@c515e7a2eae0f53822ea6d5c992d2788@"
"r04921115","0","0.91","105456","@b70bbc58c90e70a80d20c9572cfa41d6@//package hw0;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.io.File;
import java.util.*;

public class Bingo {
    public static void main(String[] args) throws Exception {
    	File inFile = null;
    	if (0 < args.length) {
    	   inFile = new File(args[0]);
    	}
        // read file from args[0] in Java 7 style
        //try(BufferedReader br = new BufferedReader(new FileReader(""C:\\Users\\Wen\\Desktop\\hw0\\input.txt""))){
        try(BufferedReader br = new BufferedReader(new FileReader(inFile))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
//            matrix = br.readLine().split("","");            
            int i,j;
            String[] temp = new String[num];
            for(i=0; i<num; i++){
            	temp = br.readLine().split("","");
            	for(j=0; j<num; j++){
            		matrix[i][j] = temp[j];
            		if(j!=num && j!=0){
            			//System.out.printf("", "");
            		}
            		//System.out.printf(""%s"", matrix[i][j]);
            	}
            	//System.out.printf(""\n"");
            }
            //System.out.printf(""ann: %s %s\n"", announce[0], announce[1]);
           
            //System.out.printf(""hahhaha %s %s %s\n"", matrix[0][0], matrix[0][1], matrix[0][2]);
            
            int straight_line = 0;
            int flag;
            for(i=0; i<num; i++){
            	flag = 0;
            	for(j=0; j<num; j++){
            		if ( matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])){
            			flag ++;
            		}else{
            			break;
            		}
            	}
            	if(flag==num){
            		straight_line++;
            	}
            }
            
            for(j=0; j<num; j++){
            	flag = 0;
            	for(i=0; i<num; i++){
            		if ( matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])){
            			flag ++;
            		}else{
            			break;
            		}
            	}
            	if(flag==num){
            		straight_line++;
            	}
            }
            
            for(i=0; i<num; i++){
            	flag = 0;
        		if ( matrix[i][i].equals(announce[0]) || matrix[i][i].equals(announce[1])){
        			flag ++;
        		}else{
        			break;
        		}
            	if(flag==num){
            		straight_line++;
            	}
            }
            
            for(i=0; i<num; i++){
            	flag = 0;
        		if ( matrix[i][num-1-i].equals(announce[0]) || matrix[i][num-1-i].equals(announce[1])){
        			flag ++;
        		}else{
        			break;
        		}
            	if(flag==num){
            		straight_line++;
            	}
            }
            System.out.printf(""%d\n"", straight_line);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@b70bbc58c90e70a80d20c9572cfa41d6@"
"r04447001","0","0.92","106944","@5143828961bee77bd4de695d6ca1624e@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] resultmatrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data2 = br.readLine().split("","");
            for(int i =0; i < stringCount; i++){
            announce[i] = data2[i];
            }//build the announce
            for(int i = 0; i < num; i++){
                String[] data3 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                resultmatrix[i][j] = data3[j];
                }
            }//build the countmatrix
            
            int result = 0;
            result = Matchedline(resultmatrix,announce,num);
            System.out.println(result);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
        }
    }
    private static int compareString(String sub[], String[] announce) {
        int result = 1;
        int[] counttable = new int[(announce.length+1)];
        for (int i = 0; i < announce.length; i++) {
            for (int j = 0; j < sub.length; j++) {
                if (announce[i].equalsIgnoreCase(sub[j])) {
                    counttable[i] += 1;
                }
                else{counttable[announce.length] +=1;}
            }
        }
        int test = 1;
        int sum = 0;
        for (int i = 0; i < announce.length; i++) {
          if(counttable[i] == 0){result = 0;
            
          }
          sum += counttable[i];
        }
        if(sum != sub.length){result = 0;}
        return result;
    }
    
    private static int Matchedline(String[][] matrix, String[] announce, int num){
        int finalcount = 0;
        String[] current = new String[num];
        for (int i = 0; i < num; i++) {
            for (int j = 0; j < num; j++) {
                current[j] =  matrix[i][j];
            }
            int temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }
        }// row count
        for (int i = 0; i < num; i++) {
            for (int j = 0; j < num; j++) {
                current[j] =  matrix[j][i];
            }
            int temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }
        }//column count
        for (int i = 0; i < num; i++) {
                current[i] = matrix[i][i];}
            int temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }//diagonal site

        for (int i = 0; i < num ; i++) {
                current[i] = matrix[(num-1-i)][i];
        }
            temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }//another diagonal site
        return finalcount;
    }
}


@5143828961bee77bd4de695d6ca1624e@"
"r04447001","0","0.85","104000","@1b29f85788a0c15862f3b6e70509f750@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] resultmatrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data2 = br.readLine().split("","");
            for(int i =0; i < stringCount; i++){
            announce[i] = data2[i];
            }//build the announce
            for(int i = 0; i < num; i++){
                String[] data3 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                resultmatrix[i][j] = data3[j];
                }
            }//build the countmatrix
            
            int result = 0;
            result = Matchedline(resultmatrix,announce,num);
            System.out.println(result);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
        }
    }
    private static int compareString(String sub[], String[] announce) {
        int result = 1;
        int[] counttable = new int[(announce.length+1)];
        for (int i = 0; i < announce.length; i++) {
            for (int j = 0; j < sub.length; j++) {
                if (announce[i].equalsIgnoreCase(sub[j])) {
                    counttable[i] += 1;
                }
                else{counttable[announce.length] +=1;}
            }
        }
        int test = 1;
        int sum = 0;
        for (int i = 0; i < announce.length; i++) {
         //if(counttable[i] == 0){result = 0;
          //}          
         sum += counttable[i];}
        if(sum != sub.length){result = 0;}
        return result;
    }
    
    private static int Matchedline(String[][] matrix, String[] announce, int num){
        int finalcount = 0;
        String[] current = new String[num];
        for (int i = 0; i < num; i++) {
            for (int j = 0; j < num; j++) {
                current[j] =  matrix[i][j];
            }
            int temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }
        }// row count
        for (int i = 0; i < num; i++) {
            for (int j = 0; j < num; j++) {
                current[j] =  matrix[j][i];
            }
            int temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }
        }//column count
        for (int i = 0; i < num; i++) {
                current[i] = matrix[i][i];}
            int temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }//diagonal site

        for (int i = 0; i < num ; i++) {
                current[i] = matrix[(num-1-i)][i];
        }
            temp = compareString(current,announce);
            if (temp == 1) {
                finalcount++;
            }//another diagonal site
        return finalcount;
    }
}


@1b29f85788a0c15862f3b6e70509f750@"
"r04447001","10","0.083","104960","@e55edcaf8cd6f68ac19cafa5386093e1@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            int[][] resultmatrix = new int[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            String[] data2 = br.readLine().split("","");
            for(int i =0; i < stringCount; i++){
            announce[i] = data2[i];
            }//build the announce
            int current = 0;
            for(int i = 0; i < num; i++){
                String[] data3 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                resultmatrix[i][j] = compareString(data3[j],announce);
                current++;
                }
            }//build the countmatrix
            
            int result = 0;
            result = Matchedline(resultmatrix,num);
            System.out.println(result);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
        }
    }
    private static int compareString(String sub,String[] obj){
        int result = 0;
        for(int i = 0; i < obj.length; i++){
            if(obj[i].equalsIgnoreCase(sub)){
                result = 1;
                break;
            }
        }
        return result;
    }
    private static int Matchedline(int[][] matrix, int num){
        int finalcount = 0;
        for (int i = 0; i < num; i++) {
            int totalcount = 0;
            for (int j = 0; j < num; j++) {
                totalcount += matrix[i][j];
            }
            if (totalcount == num) {
                finalcount++;
            }
        }// row count
        for (int i = 0; i < num; i++) {
            int totalcount = 0;
            for (int j = 0; j < num; j++) {
                totalcount += matrix[j][i];
            }
            if (totalcount == num) {
                finalcount++;
            }
        }//column count
            int diagcount = 0;
        for (int i = 0; i < num; i++) {
                diagcount += matrix[i][i];
            if (diagcount == num) {
                finalcount++;
            }//diagonal site
        }
            diagcount = 0;//re-initialize
        for (int i = 0; i < num ; i++) {
                diagcount += matrix[(num-1-i)][i];
            if (diagcount == num) {
                finalcount++;
            }//another diagonal site
        }
        return finalcount;
    }
}
@e55edcaf8cd6f68ac19cafa5386093e1@"
"r04921115","0","0","0","@76abc880c8277a20a1c72b560d20bc63@package hw0;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.*;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(inFile))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
            //matrix = br.readLine().split("","");

            int i,j;
            
            /*Print announce Strings*/
            //System.out.printf(""announce:"");
            for(i=0; i<announce.length; i++){
            	//System.out.printf("" %s"", announce[i]);
            }
        	//System.out.printf(""\n"");
        	
            /*Print matrix*/
            String[] temp = new String[num];
            for(i=0; i<num; i++){
            	temp = br.readLine().split("","");
            	for(j=0; j<num; j++){
            		matrix[i][j] = temp[j];
            		if(j!=num && j!=0){
            			//System.out.printf("", "");
            		}
            		//System.out.printf(""%s"", matrix[i][j]);
            	}
            	//System.out.printf(""\n"");
            }
            
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            int k;
            
            /*calculate row line*/
            for(i=0; i<num; i++){
            	flag = 0;
            	for(j=0; j<num; j++){
            		for(k=0; k<announce.length; k++){
	            		if (matrix[i][j].equals(announce[k])){
	            			flag ++;
	            		}
            		}
            	}
            	if(flag==num){
            		row_line++;
            	}
            }
            
            /*calculate column line*/
            for(j=0; j<num; j++){
            	flag = 0;
            	for(i=0; i<num; i++){
            		for(k=0; k<announce.length; k++){
            			if ( matrix[i][j].equals(announce[k])){
	            			flag ++;
	            		}
            		}
            	}
            	if(flag==num){
            		column_line++;
            	}
            }  
            
            /*calculate l diagonal line*/
            flag = 0;
            for(i=0; i<num; i++){
        		for(k=0; k<announce.length; k++){
	        		if ( matrix[i][i].equals(announce[k])){
	        			flag ++;
	        		}
        		}
            	if(flag==num){
            		l_diag_line++;
            	}
            }
            
            /*calculate r diagonal line*/
            flag = 0;
            for(i=0; i<num; i++){
        		for(k=0; k<announce.length; k++){
	        		if ( matrix[i][num-1-i].equals(announce[k])){
	        			flag ++;
	        		}
        		}
            	if(flag==num){
            		r_diag_line++;
            	}
            }
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@76abc880c8277a20a1c72b560d20bc63@"
"r04921115","0","0","0","@18c7accdb8b837fcacea961e037cf255@//package hw0;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.*;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""C:\\Users\\Wen\\Desktop\\hw0\\input.txt""))){
        //try(BufferedReader br = new BufferedReader(new FileReader(inFile))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
            //matrix = br.readLine().split("","");

            int i,j;
            
            /*Print announce Strings*/
            //System.out.printf(""announce:"");
            for(i=0; i<announce.length; i++){
            	//System.out.printf("" %s"", announce[i]);
            }
        	//System.out.printf(""\n"");
        	
            /*Print matrix*/
            String[] temp = new String[num];
            for(i=0; i<num; i++){
            	temp = br.readLine().split("","");
            	for(j=0; j<num; j++){
            		matrix[i][j] = temp[j];
            		if(j!=num && j!=0){
            			//System.out.printf("", "");
            		}
            		//System.out.printf(""%s"", matrix[i][j]);
            	}
            	//System.out.printf(""\n"");
            }
            
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            int k;
            
            /*calculate row line*/
            for(i=0; i<num; i++){
            	flag = 0;
            	for(j=0; j<num; j++){
            		for(k=0; k<announce.length; k++){
	            		if (matrix[i][j].equals(announce[k])){
	            			flag ++;
	            		}
            		}
            	}
            	if(flag==num){
            		row_line++;
            	}
            }
            
            /*calculate column line*/
            for(j=0; j<num; j++){
            	flag = 0;
            	for(i=0; i<num; i++){
            		for(k=0; k<announce.length; k++){
            			if ( matrix[i][j].equals(announce[k])){
	            			flag ++;
	            		}
            		}
            	}
            	if(flag==num){
            		column_line++;
            	}
            }  
            
            /*calculate l diagonal line*/
            flag = 0;
            for(i=0; i<num; i++){
        		for(k=0; k<announce.length; k++){
	        		if ( matrix[i][i].equals(announce[k])){
	        			flag ++;
	        		}
        		}
            	if(flag==num){
            		l_diag_line++;
            	}
            }
            
            /*calculate r diagonal line*/
            flag = 0;
            for(i=0; i<num; i++){
        		for(k=0; k<announce.length; k++){
	        		if ( matrix[i][num-1-i].equals(announce[k])){
	        			flag ++;
	        		}
        		}
            	if(flag==num){
            		r_diag_line++;
            	}
            }
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@18c7accdb8b837fcacea961e037cf255@"
"r04921115","0","0","0","@a114cd5df5363277e08f65c3a9da4953@package hw0;
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.*;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        //try(BufferedReader br = new BufferedReader(new FileReader(""C:\\Users\\Wen\\Desktop\\hw0\\input.txt""))){
        //try(BufferedReader br = new BufferedReader(new FileReader(inFile))){
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
            //matrix = br.readLine().split("","");

            int i,j;
            
            /*Print announce Strings*/
            //System.out.printf(""announce:"");
            for(i=0; i<announce.length; i++){
            	//System.out.printf("" %s"", announce[i]);
            }
        	//System.out.printf(""\n"");
        	
            /*Print matrix*/
            String[] temp = new String[num];
            for(i=0; i<num; i++){
            	temp = br.readLine().split("","");
            	for(j=0; j<num; j++){
            		matrix[i][j] = temp[j];
            		if(j!=num && j!=0){
            			//System.out.printf("", "");
            		}
            		//System.out.printf(""%s"", matrix[i][j]);
            	}
            	//System.out.printf(""\n"");
            }
            
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            int k;
            
            /*calculate row line*/
            for(i=0; i<num; i++){
            	flag = 0;
            	for(j=0; j<num; j++){
            		for(k=0; k<announce.length; k++){
	            		if (matrix[i][j].equals(announce[k])){
	            			flag ++;
	            		}
            		}
            	}
            	if(flag==num){
            		row_line++;
            	}
            }
            
            /*calculate column line*/
            for(j=0; j<num; j++){
            	flag = 0;
            	for(i=0; i<num; i++){
            		for(k=0; k<announce.length; k++){
            			if ( matrix[i][j].equals(announce[k])){
	            			flag ++;
	            		}
            		}
            	}
            	if(flag==num){
            		column_line++;
            	}
            }  
            
            /*calculate l diagonal line*/
            flag = 0;
            for(i=0; i<num; i++){
        		for(k=0; k<announce.length; k++){
	        		if ( matrix[i][i].equals(announce[k])){
	        			flag ++;
	        		}
        		}
            	if(flag==num){
            		l_diag_line++;
            	}
            }
            
            /*calculate r diagonal line*/
            flag = 0;
            for(i=0; i<num; i++){
        		for(k=0; k<announce.length; k++){
	        		if ( matrix[i][num-1-i].equals(announce[k])){
	        			flag ++;
	        		}
        		}
            	if(flag==num){
            		r_diag_line++;
            	}
            }
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@a114cd5df5363277e08f65c3a9da4953@"
"r04921115","0","0.92","106160","@d38870ef846553db739c0ded3648f8a8@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@d38870ef846553db739c0ded3648f8a8@"
"r04921115","0","0","0","@266719d37866e452e9e96317de33be71@package hw0;
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.*;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        //try(BufferedReader br = new BufferedReader(new FileReader(""C:\\Users\\Wen\\Desktop\\hw0\\input.txt""))){
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
            //matrix = br.readLine().split("","");

            int i,j;
            
            /*Print announce Strings*/
            /*
            System.out.printf(""announce:"");
            for(i=0; i<announce.length; i++){
            	System.out.printf("" %s"", announce[i]);
            }
        	System.out.printf(""\n"");
        	*/
            
            /*Print matrix*/
            String[] temp = new String[num];
            for(i=0; i<num; i++){
            	temp = br.readLine().split("","");
            	for(j=0; j<num; j++){
            		matrix[i][j] = temp[j];
            		//if(j!=num && j!=0){
            			//System.out.printf("", "");
            		//}
            		//System.out.printf(""%s"", matrix[i][j]);
            	}
            	//System.out.printf(""\n"");
            }
            
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            int k;
            
            /*calculate row line*/
            for(i=0; i<num; i++){
            	flag = 0;
            	for(j=0; j<num; j++){
            		for(k=0; k<announce.length; k++){
	            		if (matrix[i][j].equals(announce[k])){
	            			flag ++;
	            		}
            		}
            	}
            	if(flag==num){
            		row_line++;
            	}
            }
            
            /*calculate column line*/
            for(j=0; j<num; j++){
            	flag = 0;
            	for(i=0; i<num; i++){
            		for(k=0; k<announce.length; k++){
            			if (matrix[i][j].equals(announce[k])){
	            			flag ++;
	            		}
            		}
            	}
            	if(flag==num){
            		column_line++;
            	}
            }
            
            /*calculate l diagonal line*/
            flag = 0;
            for(i=0; i<num; i++){
        		for(k=0; k<announce.length; k++){
	        		if (matrix[i][i].equals(announce[k])){
	        			flag ++;
	        		}
        		}
            	if(flag==num){
            		l_diag_line++;
            	}
            }
            
            /*calculate r diagonal line*/
            flag = 0;
            for(i=0; i<num; i++){
        		for(k=0; k<announce.length; k++){
	        		if (matrix[i][num-1-i].equals(announce[k])){
	        			flag ++;
	        		}
        		}
            	if(flag==num){
            		r_diag_line++;
            	}
            }
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@266719d37866e452e9e96317de33be71@"
"b02611023","0","0","0","@655ba47c4666b0c5ece44e2b884fd6f9@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	if(matrix[j][j].equals(announce[0]) | matrix[j][j].equals(announce[1])){
            		dot = dot + 1;
            	}
            	if(matrix[num-j-1][j].equals(announce[0]) | matrix[num-j-1][j].equals(announce[1])){
            		dot1 = dot1 + 1;
            	}
            	for(int k = 0; k < num; k ++){
            		if(matrix[j][k].equals(announce[0]) | matrix[j][k].equals(announce[1])){
            			dot2 = dot2 + 1;
            		}
            		if(matrix[k][j].equals(announce[0]) | matrix[k][j].equals(announce[1])){
            			dot3 = dot3 + 1;
            		}
            	}
            	if(dot == num){
            		line = line + 1;
            	}
            	if(dot1 == num){
            		line = line + 1;
            	}
            	if(dot2 == num){
            		line = line + 1;
            		dot2 = 0;
            	}
            	else{
            		dot2 = 0;
            	}
            	if(dot3 == num){
            		line = line + 1;
            		dot3 = 0;
            	}
            	else{
            		dot3 = 0;
            	}
            }

            System.out.println(line);
        }
    }
}

@655ba47c4666b0c5ece44e2b884fd6f9@"
"b02611023","5","0.88","105280","@f879f1c8242359ccc9c321c0da740de4@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	if(matrix[j][j].equals(announce[0]) | matrix[j][j].equals(announce[1])){
            		dot = dot + 1;
            	}
            	if(matrix[num-j-1][j].equals(announce[0]) | matrix[num-j-1][j].equals(announce[1])){
            		dot1 = dot1 + 1;
            	}
            	for(int k = 0; k < num; k ++){
            		if(matrix[j][k].equals(announce[0]) | matrix[j][k].equals(announce[1])){
            			dot2 = dot2 + 1;
            		}
            		if(matrix[k][j].equals(announce[0]) | matrix[k][j].equals(announce[1])){
            			dot3 = dot3 + 1;
            		}
            	}
            	if(dot == num){
            		line = line + 1;
            	}
            	if(dot1 == num){
            		line = line + 1;
            	}
            	if(dot2 == num){
            		line = line + 1;
            		dot2 = 0;
            	}
            	else{
            		dot2 = 0;
            	}
            	if(dot3 == num){
            		line = line + 1;
            		dot3 = 0;
            	}
            	else{
            		dot3 = 0;
            	}
            }

            System.out.println(line);
        }
    }
}

@f879f1c8242359ccc9c321c0da740de4@"
"b02611023","5","0.82","103456","@21abe931865b2ae93f66bfa2b4be7a9f@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int count = 0;
            int count1 = 0;
            int count2 = 0;
            int count3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		if(matrix[j][k].equals(announce[0]) | matrix[j][k].equals(announce[1])){
            			dot = dot + 1;
            			if(matrix[j][k].equals(announce[0])){
            				count = count + 1;
            			}
            		}
            		if(matrix[k][j].equals(announce[0]) | matrix[k][j].equals(announce[1])){
            			dot1 = dot1 + 1;
            			if(matrix[j][k].equals(announce[0])){
            				count1 = count1 + 1;
            			}
            		}
            	}
            	if(matrix[j][j].equals(announce[0]) | matrix[j][j].equals(announce[1])){
            		dot2 = dot2 + 1;
            		if(matrix[j][j].equals(announce[0])){
            				count2 = count2 + 1;
            			}
            	}
            	if(matrix[num-j-1][j].equals(announce[0]) | matrix[num-j-1][j].equals(announce[1])){
            		dot3 = dot3 + 1;
            		if(matrix[num-j-1][j].equals(announce[0])){
            				count3 = count3 + 1;
            			}
            	}

            	if(dot == num & count != num){
            		line = line + 1;
            		dot = 0;
            	}
            	else{
            		dot = 0;
            	}
            	if(dot1 == num & count1 != num){
            		line = line + 1;
            		dot1 = 0;
            	}
            	else{
            		dot1 = 0;
            	}
            	if(dot2 == num & count2 != num){
            		line = line + 1;
            	}
            	if(dot3 == num & count3 != num){
            		line = line + 1;
            	}
            }

            System.out.println(line);
        }
    }
}

@21abe931865b2ae93f66bfa2b4be7a9f@"
"r04921115","0","0","0","@2f76c088a24d39cd55f105c2e39521ff@package hw0;
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.*;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
            //matrix = br.readLine().split("","");

            int i,j;
            
            /*Print announce Strings*/
            /*
            System.out.printf(""announce:"");
            for(i=0; i<announce.length; i++){
            	System.out.printf("" %s"", announce[i]);
            }
        	System.out.printf(""\n"");
        	*/
            
            /*Print matrix*/
            String[] temp = new String[num];
            for(i=0; i<num; i++){
            	temp = br.readLine().split("","");
            	for(j=0; j<num; j++){
            		matrix[i][j] = temp[j];
            		//if(j!=num && j!=0){
            			//System.out.printf("", "");
            		//}
            		//System.out.printf(""%s"", matrix[i][j]);
            	}
            	//System.out.printf(""\n"");
            }
            
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            int k;
            
            /*calculate row line*/
            for(i=0; i<num; i++){
            	flag = 0;
            	for(j=0; j<num; j++){
            		for(k=0; k<announce.length; k++){
	            		if (matrix[i][j].equals(announce[k])){
	            			flag ++;
	            			break;
	            		}
            		}
            	}
            	if(flag==num){
            		row_line++;
            	}
            }
            
            /*calculate column line*/
            for(j=0; j<num; j++){
            	flag = 0;
            	for(i=0; i<num; i++){
            		for(k=0; k<announce.length; k++){
            			if (matrix[i][j].equals(announce[k])){
	            			flag ++;
	            			break;
	            		}
            		}
            	}
            	if(flag==num){
            		column_line++;
            	}
            }
            
            /*calculate l diagonal line*/
            flag = 0;
            for(i=0; i<num; i++){
        		for(k=0; k<announce.length; k++){
	        		if (matrix[i][i].equals(announce[k])){
	        			flag ++;
	        			break;
	        		}
        		}
            	if(flag==num){
            		l_diag_line++;
            	}
            }
            
            /*calculate r diagonal line*/
            flag = 0;
            for(i=0; i<num; i++){
        		for(k=0; k<announce.length; k++){
	        		if (matrix[i][num-1-i].equals(announce[k])){
	        			flag ++;
	        			break;
	        		}
        		}
            	if(flag==num){
            		r_diag_line++;
            	}
            }
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@2f76c088a24d39cd55f105c2e39521ff@"
"r04921115","0","0","0","@76f78fa5ed01aa6f28c44894e33f0357@package hw0;
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.*;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
            //matrix = br.readLine().split("","");

            int i,j;
            
            /*Print announce Strings*/
            /*
            System.out.printf(""announce:"");
            for(i=0; i<announce.length; i++){
            	System.out.printf("" %s"", announce[i]);
            }
        	System.out.printf(""\n"");
        	*/
            
            /*Print matrix*/
            String[] temp = new String[num];
            for(i=0; i<num; i++){
            	temp = br.readLine().split("","");
            	for(j=0; j<num; j++){
            		matrix[i][j] = temp[j];
            		//if(j!=num && j!=0){
            			//System.out.printf("", "");
            		//}
            		//System.out.printf(""%s"", matrix[i][j]);
            	}
            	//System.out.printf(""\n"");
            }
            
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            int k;
            
            /*calculate row line*/
            for(i=0; i<num; i++){
            	flag = 0;
            	for(j=0; j<num; j++){
            		for(k=0; k<announce.length; k++){
	            		if (matrix[i][j].equals(announce[k])){
	            			flag++;
	            			break;
	            		}
            		}
            	}
            	if(flag==num){
            		row_line++;
            	}
            }
            
            /*calculate column line*/
            for(j=0; j<num; j++){
            	flag = 0;
            	for(i=0; i<num; i++){
            		for(k=0; k<announce.length; k++){
            			if (matrix[i][j].equals(announce[k])){
	            			flag++;
	            			break;
	            		}
            		}
            	}
            	if(flag==num){
            		column_line++;
            	}
            }
            
            /*calculate l diagonal line*/
//            flag = 0;
//            for(i=0; i<num; i++){
//        		for(k=0; k<announce.length; k++){
//	        		if (matrix[i][i].equals(announce[k])){
//	        			flag++;
//	        			break;
//	        		}
//        		}
//            	if(flag==num){
//            		l_diag_line++;
//            	}
//            }
//            
//            /*calculate r diagonal line*/
//            flag = 0;
//            for(i=0; i<num; i++){
//        		for(k=0; k<announce.length; k++){
//	        		if (matrix[i][num-1-i].equals(announce[k])){
//	        			flag++;
//	        			break;
//	        		}
//        		}
//            	if(flag==num){
//            		r_diag_line++;
//            	}
//            }
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@76f78fa5ed01aa6f28c44894e33f0357@"
"b02611023","5","0.84","104432","@9f8f833ef5bfedffe05a4b9a9e23c122@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int count = 0;
            int count1 = 0;
            int count2 = 0;
            int count3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		if(matrix[j][k].equals(announce[0]) | matrix[j][k].equals(announce[1])){
            			dot = dot + 1;
            			if(matrix[j][k].equals(announce[0])){
            				count = count + 1;
            			}
            		}
            		if(matrix[k][j].equals(announce[0]) | matrix[k][j].equals(announce[1])){
            			dot1 = dot1 + 1;
            			if(matrix[k][j].equals(announce[0])){
            				count1 = count1 + 1;
            			}
            		}
            	}
            	if(matrix[j][j].equals(announce[0]) | matrix[j][j].equals(announce[1])){
            		dot2 = dot2 + 1;
            		if(matrix[j][j].equals(announce[0])){
            				count2 = count2 + 1;
            			}
            	}
            	if(matrix[num-j-1][j].equals(announce[0]) | matrix[num-j-1][j].equals(announce[1])){
            		dot3 = dot3 + 1;
            		if(matrix[num-j-1][j].equals(announce[0])){
            				count3 = count3 + 1;
            			}
            	}

            	if(dot == num & (count != num & count > 0)){
            		line = line + 1;
            		dot = 0;
            		count = 0;
            	}
            	else{
            		dot = 0;
            		count = 0;
            	}
            	if(dot1 == num & (count1 != num & count1 > 0)){
            		line = line + 1;
            		dot1 = 0;
            		count1 = 0;
            	}
            	else{
            		dot1 = 0;
            		count1 = 0;
            	}
            	if(dot2 == num & (count2 != num & count2 > 0)){
            		line = line + 1;
            	}
            	if(dot3 == num & (count3 != num & count3 > 0)){
            		line = line + 1;
            	}
            }

            System.out.println(line);
        }
    }
}

@9f8f833ef5bfedffe05a4b9a9e23c122@"
"r04921094","0","0","0","@3298344207af76434338b2314da92ced@package homework0;

import java.io.BufferedReader;
import java.io.FileReader;

public class Bingo {

	public static void main(String[] args) throws Exception {					// exception for BufferedReader
		// TODO Auto-generated method stub
		String[] numberData;				// register for number data
		String[] bingoString;			// bingo input string
		String[][] bingoMapString;		// bingo map string
		int numOfString;					// for bingo input string size 
		int sizeOfMatrix;				// for bingo map string size
		BingoMap bingoMap;
		
		BufferedReader br = new BufferedReader(new FileReader(args[0]));		// get the filename from args
		numberData = br.readLine().split("","");
		numOfString = Integer.valueOf(numberData[0]);
		sizeOfMatrix = Integer.valueOf(numberData[1]);
		bingoString = new String[numOfString];
		bingoString = br.readLine().split("","");
		/*for(int i = 0; i < numOfString; i++){
			System.out.print(bingoString[i] + "" "");
		}*/
		bingoMapString = new String[sizeOfMatrix][sizeOfMatrix];
		
		// TODO BingoMapString input format check
		for(int i = 0; i < sizeOfMatrix; i++){
			bingoMapString[i] = br.readLine().split("","");
			/*for(int j = 0; j < sizeOfMatrix; j++){
				System.out.print(bingoMapString[i][j] + "" "");
			}
			System.out.println();*/
		}
		
		bingoMap = new BingoMap(bingoMapString, sizeOfMatrix);
		bingoMap.inputString(bingoString, numOfString);
		System.out.println(bingoMap.result());
	}
}

class BingoMap{
	String[][] mapString;
	String[] inputString;
	int numOfString;
	int sizeOfMap;
	
	public BingoMap(String[][] mapString, int sizeOfMap){
		this.mapString = mapString;
		this.sizeOfMap = sizeOfMap;
	}
	
	void inputString(String[] inputString, int numOfString){
		this.inputString = inputString;
		this.numOfString = numOfString;
	}
	
	int result(){
		// TODO algorithm for output right answer
		return this.bingoAlg(digitallize());
	}
	
	boolean[][] digitallize (){
		boolean[][] booleanMap = new boolean[sizeOfMap][sizeOfMap];
		
		for(int i=0; i < sizeOfMap; i++){
			for(int j=0; j < sizeOfMap; j++){
				for(int k=0; k< numOfString; k++){
					if(booleanMap[i][j] == false)
						booleanMap[i][j] = mapString[i][j].equals(inputString[k]);
				}
			}
		}
		/*
		for(int i = 0; i<sizeOfMap; i++){
			for(int j = 0; j<sizeOfMap; j++)
				System.out.print(booleanMap[i][j]);
			System.out.println();
		}*/
		
		return booleanMap;
	}
	
	int bingoAlg(boolean[][] booleanMap){	
		int result = 0;
		boolean[][] resultMapFlag = new boolean[3][];		// flags for all map
		resultMapFlag[0] = new boolean[sizeOfMap];			// flags for column
		resultMapFlag[1] = new boolean[sizeOfMap];			// flags for row
		resultMapFlag[2] = new boolean[2];					// flags for diagonal
		
		for(int i=0; i<sizeOfMap; i++){
			for(int j=0; j<sizeOfMap; j++){
				if(booleanMap[i][j] == false){
					resultMapFlag[0][i] = true;
					resultMapFlag[1][j] = true;
					if(i == j){
						resultMapFlag[2][0] = true;
					}
					else if(i == sizeOfMap - j){
						resultMapFlag[2][1] = true;
					}
				}
			}
		}
		
		for(boolean[] resultMapFlagRow: resultMapFlag){
			for(boolean resultFlag: resultMapFlagRow){
				if(resultFlag == false){
					result++;
				}
			}
		}
		
		return result;
	}
}

@3298344207af76434338b2314da92ced@"
"r04921094","8","0.95","106624","@078107a9ce8846a1a58e229c82d087b4@

import java.io.BufferedReader;
import java.io.FileReader;

public class Bingo {

	public static void main(String[] args) throws Exception {					// exception for BufferedReader
		// TODO Auto-generated method stub
		String[] numberData;				// register for number data
		String[] bingoString;			// bingo input string
		String[][] bingoMapString;		// bingo map string
		int numOfString;					// for bingo input string size 
		int sizeOfMatrix;				// for bingo map string size
		BingoMap bingoMap;
		
		BufferedReader br = new BufferedReader(new FileReader(args[0]));		// get the filename from args
		numberData = br.readLine().split("","");
		numOfString = Integer.valueOf(numberData[0]);
		sizeOfMatrix = Integer.valueOf(numberData[1]);
		bingoString = new String[numOfString];
		bingoString = br.readLine().split("","");
		/*for(int i = 0; i < numOfString; i++){
			System.out.print(bingoString[i] + "" "");
		}*/
		bingoMapString = new String[sizeOfMatrix][sizeOfMatrix];
		
		// TODO BingoMapString input format check
		for(int i = 0; i < sizeOfMatrix; i++){
			bingoMapString[i] = br.readLine().split("","");
			/*for(int j = 0; j < sizeOfMatrix; j++){
				System.out.print(bingoMapString[i][j] + "" "");
			}
			System.out.println();*/
		}
		
		bingoMap = new BingoMap(bingoMapString, sizeOfMatrix);
		bingoMap.inputString(bingoString, numOfString);
		System.out.println(bingoMap.result());
	}
}

class BingoMap{
	String[][] mapString;
	String[] inputString;
	int numOfString;
	int sizeOfMap;
	
	public BingoMap(String[][] mapString, int sizeOfMap){
		this.mapString = mapString;
		this.sizeOfMap = sizeOfMap;
	}
	
	void inputString(String[] inputString, int numOfString){
		this.inputString = inputString;
		this.numOfString = numOfString;
	}
	
	int result(){
		// TODO algorithm for output right answer
		return this.bingoAlg(digitallize());
	}
	
	boolean[][] digitallize (){
		boolean[][] booleanMap = new boolean[sizeOfMap][sizeOfMap];
		
		for(int i=0; i < sizeOfMap; i++){
			for(int j=0; j < sizeOfMap; j++){
				for(int k=0; k< numOfString; k++){
					if(booleanMap[i][j] == false)
						booleanMap[i][j] = mapString[i][j].equals(inputString[k]);
				}
			}
		}
		/*
		for(int i = 0; i<sizeOfMap; i++){
			for(int j = 0; j<sizeOfMap; j++)
				System.out.print(booleanMap[i][j]);
			System.out.println();
		}*/
		
		return booleanMap;
	}
	
	int bingoAlg(boolean[][] booleanMap){	
		int result = 0;
		boolean[][] resultMapFlag = new boolean[3][];		// flags for all map
		resultMapFlag[0] = new boolean[sizeOfMap];			// flags for column
		resultMapFlag[1] = new boolean[sizeOfMap];			// flags for row
		resultMapFlag[2] = new boolean[2];					// flags for diagonal
		
		for(int i=0; i<sizeOfMap; i++){
			for(int j=0; j<sizeOfMap; j++){
				if(booleanMap[i][j] == false){
					resultMapFlag[0][i] = true;
					resultMapFlag[1][j] = true;
					if(i == j){
						resultMapFlag[2][0] = true;
					}
					else if(i == sizeOfMap - j){
						resultMapFlag[2][1] = true;
					}
				}
			}
		}
		
		for(boolean[] resultMapFlagRow: resultMapFlag){
			for(boolean resultFlag: resultMapFlagRow){
				if(resultFlag == false){
					result++;
				}
			}
		}
		
		return result;
	}
}

@078107a9ce8846a1a58e229c82d087b4@"
"r04921094","0","0","0","@ee85c3e75517fc099ed63ad9769414ee@package homework0;

import java.io.BufferedReader;
import java.io.FileReader;

public class Bingo {

	public static void main(String[] args) throws Exception {					// exception for BufferedReader
		// TODO Auto-generated method stub
		String[] numberData;				// register for number data
		String[] bingoString;			// bingo input string
		String[][] bingoMapString;		// bingo map string
		int numOfString;					// for bingo input string size 
		int sizeOfMatrix;				// for bingo map string size
		BingoMap bingoMap;
		
		BufferedReader br = new BufferedReader(new FileReader(args[0]));		// get the filename from args
		numberData = br.readLine().split("","");
		numOfString = Integer.valueOf(numberData[0]);
		sizeOfMatrix = Integer.valueOf(numberData[1]);
		bingoString = new String[numOfString];
		bingoString = br.readLine().split("","");
		/*for(int i = 0; i < numOfString; i++){
			System.out.print(bingoString[i] + "" "");
		}*/
		bingoMapString = new String[sizeOfMatrix][sizeOfMatrix];
		
		// TODO BingoMapString input format check
		for(int i = 0; i < sizeOfMatrix; i++){
			bingoMapString[i] = br.readLine().split("","");
			/*for(int j = 0; j < sizeOfMatrix; j++){
				System.out.print(bingoMapString[i][j] + "" "");
			}
			System.out.println();*/
		}
		
		bingoMap = new BingoMap(bingoMapString, sizeOfMatrix);
		bingoMap.inputString(bingoString, numOfString);
		System.out.println(bingoMap.result());
	}
}

class BingoMap{
	String[][] mapString;
	String[] inputString;
	int numOfString;
	int sizeOfMap;
	
	public BingoMap(String[][] mapString, int sizeOfMap){
		this.mapString = mapString;
		this.sizeOfMap = sizeOfMap;
	}
	
	void inputString(String[] inputString, int numOfString){
		this.inputString = inputString;
		this.numOfString = numOfString;
	}
	
	int result(){
		// TODO algorithm for output right answer
		return this.bingoAlg(digitallize());
	}
	
	boolean[][] digitallize (){
		boolean[][] booleanMap = new boolean[sizeOfMap][sizeOfMap];
		
		for(int i=0; i < sizeOfMap; i++){
			for(int j=0; j < sizeOfMap; j++){
				for(int k=0; k< numOfString; k++){
					if(booleanMap[i][j] == false)
						booleanMap[i][j] = mapString[i][j].equals(inputString[k]);
				}
			}
		}
		
		for(int i = 0; i<sizeOfMap; i++){
			for(int j = 0; j<sizeOfMap; j++)
				System.out.print(booleanMap[i][j]);
			System.out.println();
		}
		
		return booleanMap;
	}
	
	int bingoAlg(boolean[][] booleanMap){	
		int result = 0;
		boolean[][] resultMapFlag = new boolean[3][];		// flags for all map
		resultMapFlag[0] = new boolean[sizeOfMap];			// flags for column
		resultMapFlag[1] = new boolean[sizeOfMap];			// flags for row
		resultMapFlag[2] = new boolean[2];					// flags for diagonal
		
		for(int i=0; i<sizeOfMap; i++){
			for(int j=0; j<sizeOfMap; j++){
				if(booleanMap[i][j] == false){
					resultMapFlag[0][i] = true;
					resultMapFlag[1][j] = true;
					if(i == j){
						resultMapFlag[2][0] = true;
					}
					else if(i == sizeOfMap - j + 1){
						resultMapFlag[2][1] = true;
						System.out.println(""x:"" + i + ""; y:"" + j);
					}
				}
			}
		}
		
		for(boolean[] resultMapFlagRow: resultMapFlag){
			for(boolean resultFlag: resultMapFlagRow){
				if(resultFlag == false){
					result++;
				}
			}
		}
		
		return result;
	}
}

@ee85c3e75517fc099ed63ad9769414ee@"
"r04921094","0","0.95","102496","@6e8d1c35a5db020a3ef0ea9ea961bb84@import java.io.BufferedReader;
import java.io.FileReader;

public class Bingo {

	public static void main(String[] args) throws Exception {					// exception for BufferedReader
		// TODO Auto-generated method stub
		String[] numberData;				// register for number data
		String[] bingoString;			// bingo input string
		String[][] bingoMapString;		// bingo map string
		int numOfString;					// for bingo input string size 
		int sizeOfMatrix;				// for bingo map string size
		BingoMap bingoMap;
		
		BufferedReader br = new BufferedReader(new FileReader(args[0]));		// get the filename from args
		numberData = br.readLine().split("","");
		numOfString = Integer.valueOf(numberData[0]);
		sizeOfMatrix = Integer.valueOf(numberData[1]);
		bingoString = new String[numOfString];
		bingoString = br.readLine().split("","");
		/*for(int i = 0; i < numOfString; i++){
			System.out.print(bingoString[i] + "" "");
		}*/
		bingoMapString = new String[sizeOfMatrix][sizeOfMatrix];
		
		// TODO BingoMapString input format check
		for(int i = 0; i < sizeOfMatrix; i++){
			bingoMapString[i] = br.readLine().split("","");
			/*for(int j = 0; j < sizeOfMatrix; j++){
				System.out.print(bingoMapString[i][j] + "" "");
			}
			System.out.println();*/
		}
		
		bingoMap = new BingoMap(bingoMapString, sizeOfMatrix);
		bingoMap.inputString(bingoString, numOfString);
		System.out.println(bingoMap.result());
	}
}

class BingoMap{
	String[][] mapString;
	String[] inputString;
	int numOfString;
	int sizeOfMap;
	
	public BingoMap(String[][] mapString, int sizeOfMap){
		this.mapString = mapString;
		this.sizeOfMap = sizeOfMap;
	}
	
	void inputString(String[] inputString, int numOfString){
		this.inputString = inputString;
		this.numOfString = numOfString;
	}
	
	int result(){
		// TODO algorithm for output right answer
		return this.bingoAlg(digitallize());
	}
	
	boolean[][] digitallize (){
		boolean[][] booleanMap = new boolean[sizeOfMap][sizeOfMap];
		
		for(int i=0; i < sizeOfMap; i++){
			for(int j=0; j < sizeOfMap; j++){
				for(int k=0; k< numOfString; k++){
					if(booleanMap[i][j] == false)
						booleanMap[i][j] = mapString[i][j].equals(inputString[k]);
				}
			}
		}
		
		for(int i = 0; i<sizeOfMap; i++){
			for(int j = 0; j<sizeOfMap; j++)
				System.out.print(booleanMap[i][j]);
			System.out.println();
		}
		
		return booleanMap;
	}
	
	int bingoAlg(boolean[][] booleanMap){	
		int result = 0;
		boolean[][] resultMapFlag = new boolean[3][];		// flags for all map
		resultMapFlag[0] = new boolean[sizeOfMap];			// flags for column
		resultMapFlag[1] = new boolean[sizeOfMap];			// flags for row
		resultMapFlag[2] = new boolean[2];					// flags for diagonal
		
		for(int i=0; i<sizeOfMap; i++){
			for(int j=0; j<sizeOfMap; j++){
				if(booleanMap[i][j] == false){
					resultMapFlag[0][i] = true;
					resultMapFlag[1][j] = true;
					if(i == j){
						resultMapFlag[2][0] = true;
					}
					else if(i == sizeOfMap - j + 1){
						resultMapFlag[2][1] = true;
						System.out.println(""x:"" + i + ""; y:"" + j);
					}
				}
			}
		}
		
		for(boolean[] resultMapFlagRow: resultMapFlag){
			for(boolean resultFlag: resultMapFlagRow){
				if(resultFlag == false){
					result++;
				}
			}
		}
		
		return result;
	}
}

@6e8d1c35a5db020a3ef0ea9ea961bb84@"
"r04921094","0","0.89","105280","@6e8d1c35a5db020a3ef0ea9ea961bb84@import java.io.BufferedReader;
import java.io.FileReader;

public class Bingo {

	public static void main(String[] args) throws Exception {					// exception for BufferedReader
		// TODO Auto-generated method stub
		String[] numberData;				// register for number data
		String[] bingoString;			// bingo input string
		String[][] bingoMapString;		// bingo map string
		int numOfString;					// for bingo input string size 
		int sizeOfMatrix;				// for bingo map string size
		BingoMap bingoMap;
		
		BufferedReader br = new BufferedReader(new FileReader(args[0]));		// get the filename from args
		numberData = br.readLine().split("","");
		numOfString = Integer.valueOf(numberData[0]);
		sizeOfMatrix = Integer.valueOf(numberData[1]);
		bingoString = new String[numOfString];
		bingoString = br.readLine().split("","");
		/*for(int i = 0; i < numOfString; i++){
			System.out.print(bingoString[i] + "" "");
		}*/
		bingoMapString = new String[sizeOfMatrix][sizeOfMatrix];
		
		// TODO BingoMapString input format check
		for(int i = 0; i < sizeOfMatrix; i++){
			bingoMapString[i] = br.readLine().split("","");
			/*for(int j = 0; j < sizeOfMatrix; j++){
				System.out.print(bingoMapString[i][j] + "" "");
			}
			System.out.println();*/
		}
		
		bingoMap = new BingoMap(bingoMapString, sizeOfMatrix);
		bingoMap.inputString(bingoString, numOfString);
		System.out.println(bingoMap.result());
	}
}

class BingoMap{
	String[][] mapString;
	String[] inputString;
	int numOfString;
	int sizeOfMap;
	
	public BingoMap(String[][] mapString, int sizeOfMap){
		this.mapString = mapString;
		this.sizeOfMap = sizeOfMap;
	}
	
	void inputString(String[] inputString, int numOfString){
		this.inputString = inputString;
		this.numOfString = numOfString;
	}
	
	int result(){
		// TODO algorithm for output right answer
		return this.bingoAlg(digitallize());
	}
	
	boolean[][] digitallize (){
		boolean[][] booleanMap = new boolean[sizeOfMap][sizeOfMap];
		
		for(int i=0; i < sizeOfMap; i++){
			for(int j=0; j < sizeOfMap; j++){
				for(int k=0; k< numOfString; k++){
					if(booleanMap[i][j] == false)
						booleanMap[i][j] = mapString[i][j].equals(inputString[k]);
				}
			}
		}
		
		for(int i = 0; i<sizeOfMap; i++){
			for(int j = 0; j<sizeOfMap; j++)
				System.out.print(booleanMap[i][j]);
			System.out.println();
		}
		
		return booleanMap;
	}
	
	int bingoAlg(boolean[][] booleanMap){	
		int result = 0;
		boolean[][] resultMapFlag = new boolean[3][];		// flags for all map
		resultMapFlag[0] = new boolean[sizeOfMap];			// flags for column
		resultMapFlag[1] = new boolean[sizeOfMap];			// flags for row
		resultMapFlag[2] = new boolean[2];					// flags for diagonal
		
		for(int i=0; i<sizeOfMap; i++){
			for(int j=0; j<sizeOfMap; j++){
				if(booleanMap[i][j] == false){
					resultMapFlag[0][i] = true;
					resultMapFlag[1][j] = true;
					if(i == j){
						resultMapFlag[2][0] = true;
					}
					else if(i == sizeOfMap - j + 1){
						resultMapFlag[2][1] = true;
						System.out.println(""x:"" + i + ""; y:"" + j);
					}
				}
			}
		}
		
		for(boolean[] resultMapFlagRow: resultMapFlag){
			for(boolean resultFlag: resultMapFlagRow){
				if(resultFlag == false){
					result++;
				}
			}
		}
		
		return result;
	}
}

@6e8d1c35a5db020a3ef0ea9ea961bb84@"
"r04921094","1","0.8","103536","@b7cb076c22e3683e5d342c62281ccc4e@import java.io.BufferedReader;
import java.io.FileReader;

public class Bingo {

	public static void main(String[] args) throws Exception {					// exception for BufferedReader
		// TODO Auto-generated method stub
		String[] numberData;				// register for number data
		String[] bingoString;			// bingo input string
		String[][] bingoMapString;		// bingo map string
		int numOfString;					// for bingo input string size 
		int sizeOfMatrix;				// for bingo map string size
		BingoMap bingoMap;
		
		BufferedReader br = new BufferedReader(new FileReader(args[0]));		// get the filename from args
		numberData = br.readLine().split("","");
		numOfString = Integer.valueOf(numberData[0]);
		sizeOfMatrix = Integer.valueOf(numberData[1]);
		bingoString = new String[numOfString];
		bingoString = br.readLine().split("","");
		/*for(int i = 0; i < numOfString; i++){
			System.out.print(bingoString[i] + "" "");
		}*/
		bingoMapString = new String[sizeOfMatrix][sizeOfMatrix];
		
		// TODO BingoMapString input format check
		for(int i = 0; i < sizeOfMatrix; i++){
			bingoMapString[i] = br.readLine().split("","");
			/*for(int j = 0; j < sizeOfMatrix; j++){
				System.out.print(bingoMapString[i][j] + "" "");
			}
			System.out.println();*/
		}
		
		bingoMap = new BingoMap(bingoMapString, sizeOfMatrix);
		bingoMap.inputString(bingoString, numOfString);
		System.out.println(bingoMap.result());
	}
}

class BingoMap{
	String[][] mapString;
	String[] inputString;
	int numOfString;
	int sizeOfMap;
	
	public BingoMap(String[][] mapString, int sizeOfMap){
		this.mapString = mapString;
		this.sizeOfMap = sizeOfMap;
	}
	
	void inputString(String[] inputString, int numOfString){
		this.inputString = inputString;
		this.numOfString = numOfString;
	}
	
	int result(){
		// TODO algorithm for output right answer
		return this.bingoAlg(digitallize());
	}
	
	boolean[][] digitallize (){
		boolean[][] booleanMap = new boolean[sizeOfMap][sizeOfMap];
		
		for(int i=0; i < sizeOfMap; i++){
			for(int j=0; j < sizeOfMap; j++){
				for(int k=0; k< numOfString; k++){
					if(booleanMap[i][j] == false)
						booleanMap[i][j] = mapString[i][j].equals(inputString[k]);
				}
			}
		}
		
		/*for(int i = 0; i<sizeOfMap; i++){
			for(int j = 0; j<sizeOfMap; j++)
				System.out.print(booleanMap[i][j]);
			System.out.println();
		}*/
		
		return booleanMap;
	}
	
	int bingoAlg(boolean[][] booleanMap){	
		int result = 0;
		boolean[][] resultMapFlag = new boolean[3][];		// flags for all map
		resultMapFlag[0] = new boolean[sizeOfMap];			// flags for column
		resultMapFlag[1] = new boolean[sizeOfMap];			// flags for row
		resultMapFlag[2] = new boolean[2];					// flags for diagonal
		
		for(int i=0; i<sizeOfMap; i++){
			for(int j=0; j<sizeOfMap; j++){
				if(booleanMap[i][j] == false){
					resultMapFlag[0][i] = true;
					resultMapFlag[1][j] = true;
					if(i == j){
						resultMapFlag[2][0] = true;
					}
					else if(i == sizeOfMap - j + 1){
						resultMapFlag[2][1] = true;
						System.out.println(""x:"" + i + ""; y:"" + j);
					}
				}
			}
		}
		
		for(boolean[] resultMapFlagRow: resultMapFlag){
			for(boolean resultFlag: resultMapFlagRow){
				if(resultFlag == false){
					result++;
				}
			}
		}
		
		return result;
	}
}

@b7cb076c22e3683e5d342c62281ccc4e@"
"b02611023","5","0.91","106368","@4047db23f3c0ae7749a915b6f99f7df8@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;
            String row = """";
            String column = """";
            String diagonal1 = """";
            String diagonal2 ="""";

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		if(matrix[j][k].equals(announce[0]) | matrix[j][k].equals(announce[1])){
            			dot = dot + 1;
            			row = row + matrix[j][k];
            		}
            		if(matrix[k][j].equals(announce[0]) | matrix[k][j].equals(announce[1])){
            			dot1 = dot1 + 1;
            			column = column + matrix[k][j];
            		}
            	}
            	if(matrix[j][j].equals(announce[0]) | matrix[j][j].equals(announce[1])){
            		dot2 = dot2 + 1;
            		diagonal1 = diagonal1 + matrix[j][j];
            	}
            	if(matrix[num-j-1][j].equals(announce[0]) | matrix[num-j-1][j].equals(announce[1])){
            		dot3 = dot3 + 1;
            		diagonal2 = diagonal2 + matrix[num-j-1][j];
            	}

            	if(dot == num & row.contains(announce[0]+announce[1])){
            		line = line + 1;
            		dot = 0;
            	}
            	else{
            		dot = 0;
            	}
            	if(dot1 == num & column.contains(announce[0]+announce[1])){
            		line = line + 1;
            		dot1 = 0;
            	}
            	else{
            		dot1 = 0;
            	}
            	if(dot2 == num & diagonal1.contains(announce[0]+announce[1])){
            		line = line + 1;
            	}
            	if(dot3 == num & diagonal2.contains(announce[0]+announce[1])){
            		line = line + 1;
            	}
            }

            System.out.println(line);
        }
    }
}

@4047db23f3c0ae7749a915b6f99f7df8@"
"r04921094","10","0.087","106640","@351a2af41da329a0778f3ebac67432a5@import java.io.BufferedReader;
import java.io.FileReader;

public class Bingo {

	public static void main(String[] args) throws Exception {					// exception for BufferedReader
		// TODO Auto-generated method stub
		String[] numberData;				// register for number data
		String[] bingoString;			// bingo input string
		String[][] bingoMapString;		// bingo map string
		int numOfString;					// for bingo input string size 
		int sizeOfMatrix;				// for bingo map string size
		BingoMap bingoMap;
		
		BufferedReader br = new BufferedReader(new FileReader(args[0]));		// get the filename from args
		numberData = br.readLine().split("","");
		numOfString = Integer.valueOf(numberData[0]);
		sizeOfMatrix = Integer.valueOf(numberData[1]);
		bingoString = new String[numOfString];
		bingoString = br.readLine().split("","");
		/*for(int i = 0; i < numOfString; i++){
			System.out.print(bingoString[i] + "" "");
		}*/
		bingoMapString = new String[sizeOfMatrix][sizeOfMatrix];
		
		// TODO BingoMapString input format check
		for(int i = 0; i < sizeOfMatrix; i++){
			bingoMapString[i] = br.readLine().split("","");
			/*for(int j = 0; j < sizeOfMatrix; j++){
				System.out.print(bingoMapString[i][j] + "" "");
			}
			System.out.println();*/
		}
		
		bingoMap = new BingoMap(bingoMapString, sizeOfMatrix);
		bingoMap.inputString(bingoString, numOfString);
		System.out.println(bingoMap.result());
	}
}

class BingoMap{
	String[][] mapString;
	String[] inputString;
	int numOfString;
	int sizeOfMap;
	
	public BingoMap(String[][] mapString, int sizeOfMap){
		this.mapString = mapString;
		this.sizeOfMap = sizeOfMap;
	}
	
	void inputString(String[] inputString, int numOfString){
		this.inputString = inputString;
		this.numOfString = numOfString;
	}
	
	int result(){
		// TODO algorithm for output right answer
		return this.bingoAlg(digitallize());
	}
	
	boolean[][] digitallize (){
		boolean[][] booleanMap = new boolean[sizeOfMap][sizeOfMap];
		
		for(int i=0; i < sizeOfMap; i++){
			for(int j=0; j < sizeOfMap; j++){
				for(int k=0; k< numOfString; k++){
					if(booleanMap[i][j] == false)
						booleanMap[i][j] = mapString[i][j].equals(inputString[k]);
				}
			}
		}
		
		/*for(int i = 0; i<sizeOfMap; i++){
			for(int j = 0; j<sizeOfMap; j++)
				System.out.print(booleanMap[i][j]);
			System.out.println();
		}*/
		
		return booleanMap;
	}
	
	int bingoAlg(boolean[][] booleanMap){	
		int result = 0;
		boolean[][] resultMapFlag = new boolean[3][];		// flags for all map
		resultMapFlag[0] = new boolean[sizeOfMap];			// flags for column
		resultMapFlag[1] = new boolean[sizeOfMap];			// flags for row
		resultMapFlag[2] = new boolean[2];					// flags for diagonal
		
		for(int i=0; i<sizeOfMap; i++){
			for(int j=0; j<sizeOfMap; j++){
				if(booleanMap[i][j] == false){
					resultMapFlag[0][i] = true;
					resultMapFlag[1][j] = true;
					if(i == j){
						resultMapFlag[2][0] = true;
					}
					
					if(i + j == sizeOfMap - 1){
						resultMapFlag[2][1] = true;
						//System.out.println(""x:"" + i + ""; y:"" + j);
					}
				}
			}
		}
		
		for(int i=0; i<resultMapFlag.length; i++){
			for(int j=0; j<resultMapFlag[i].length; j++){
				if(resultMapFlag[i][j] == false){
					result++;
					//System.out.println(""result index: i="" + i + ""; j="" + j);
				}
			}
		}
		
		return result;
	}
}

@351a2af41da329a0778f3ebac67432a5@"
"b02611023","0","0.75","104144","@0cfd43cd00399cab7d41b945d1689e4d@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;
            String row = """";
            String column = """";
            String diagonal1 = """";
            String diagonal2 ="""";

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		if(matrix[j][k].equals(announce[0]) | matrix[j][k].equals(announce[1])){
            			dot = dot + 1;
            			row = row + matrix[j][k];
            			System.out.println(row);
            		}
            		if(matrix[k][j].equals(announce[0]) | matrix[k][j].equals(announce[1])){
            			dot1 = dot1 + 1;
            			column = column + matrix[k][j];
            		}
            	}
            	if(matrix[j][j].equals(announce[0]) | matrix[j][j].equals(announce[1])){
            		dot2 = dot2 + 1;
            		diagonal1 = diagonal1 + matrix[j][j];
            	}
            	if(matrix[num-j-1][j].equals(announce[0]) | matrix[num-j-1][j].equals(announce[1])){
            		dot3 = dot3 + 1;
            		diagonal2 = diagonal2 + matrix[num-j-1][j];
            	}

            	if(dot == num & row.contains(announce[0]+announce[1])){
            		line = line + 1;
            		dot = 0;
            		row = """";
            	}
            	else{
            		dot = 0;
            		row = """";
            	}
            	if(dot1 == num & column.contains(announce[0]+announce[1])){
            		line = line + 1;
            		dot1 = 0;
            		column = """";
            	}
            	else{
            		dot1 = 0;
            		column = """";
            	}
            	if(dot2 == num & diagonal1.contains(announce[0]+announce[1])){
            		line = line + 1;
            	}
            	if(dot3 == num & diagonal2.contains(announce[0]+announce[1])){
            		line = line + 1;
            	}
            }

            System.out.println(line);
        }
    }
}

@0cfd43cd00399cab7d41b945d1689e4d@"
"b02611023","4","0.88","105232","@1c96a40fe035f6adc0304554e27adde9@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;
            String row = """";
            String column = """";
            String diagonal1 = """";
            String diagonal2 ="""";

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		if(matrix[j][k].equals(announce[0]) | matrix[j][k].equals(announce[1])){
            			dot = dot + 1;
            			row = row + matrix[j][k];
            		}
            		if(matrix[k][j].equals(announce[0]) | matrix[k][j].equals(announce[1])){
            			dot1 = dot1 + 1;
            			column = column + matrix[k][j];
            		}
            	}
            	if(matrix[j][j].equals(announce[0]) | matrix[j][j].equals(announce[1])){
            		dot2 = dot2 + 1;
            		diagonal1 = diagonal1 + matrix[j][j];
            	}
            	if(matrix[num-j-1][j].equals(announce[0]) | matrix[num-j-1][j].equals(announce[1])){
            		dot3 = dot3 + 1;
            		diagonal2 = diagonal2 + matrix[num-j-1][j];
            	}

            	if(dot == num & row.contains(announce[0]+announce[1])){
            		line = line + 1;
            		dot = 0;
            		row = """";
            	}
            	else{
            		dot = 0;
            		row = """";
            	}
            	if(dot1 == num & column.contains(announce[0]+announce[1])){
            		line = line + 1;
            		dot1 = 0;
            		column = """";
            	}
            	else{
            		dot1 = 0;
            		column = """";
            	}
            	if(dot2 == num & diagonal1.contains(announce[0]+announce[1])){
            		line = line + 1;
            	}
            	if(dot3 == num & diagonal2.contains(announce[0]+announce[1])){
            		line = line + 1;
            	}
            }

            System.out.println(line);
        }
    }
}

@1c96a40fe035f6adc0304554e27adde9@"
"b02611023","4","0.85","106576","@08182619788e61db296469d6cb0985d7@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;
            String row = """";
            String column = """";
            String diagonal1 = """";
            String diagonal2 ="""";

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		if(matrix[j][k].equals(announce[0]) | matrix[j][k].equals(announce[1])){
            			dot = dot + 1;
            			row = row + matrix[j][k];
            		}
            		if(matrix[k][j].equals(announce[0]) | matrix[k][j].equals(announce[1])){
            			dot1 = dot1 + 1;
            			column = column + matrix[k][j];
            		}
            	}
            	if(matrix[j][j].equals(announce[0]) | matrix[j][j].equals(announce[1])){
            		dot2 = dot2 + 1;
            		diagonal1 = diagonal1 + matrix[j][j];
            	}
            	if(matrix[j][num-j-1].equals(announce[0]) | matrix[j][num-j-1].equals(announce[1])){
            		dot3 = dot3 + 1;
            		diagonal2 = diagonal2 + matrix[j][num-j-1];
            	}

            	if(dot == num & row.contains(announce[0]+announce[1])){
            		line = line + 1;
            		dot = 0;
            		row = """";
            	}
            	else{
            		dot = 0;
            		row = """";
            	}
            	if(dot1 == num & column.contains(announce[0]+announce[1])){
            		line = line + 1;
            		dot1 = 0;
            		column = """";
            	}
            	else{
            		dot1 = 0;
            		column = """";
            	}
            	if(dot2 == num & diagonal1.contains(announce[0]+announce[1])){
            		line = line + 1;
            	}
            	if(dot3 == num & diagonal2.contains(announce[0]+announce[1])){
            		line = line + 1;
            	}
            }

            System.out.println(line);
        }
    }
}

@08182619788e61db296469d6cb0985d7@"
"r04921094","10","0.071","103536","@bd30fac25ec9543412d95f89ca611d0d@import java.io.BufferedReader;
import java.io.FileReader;

public class Bingo {

	public static void main(String[] args) throws Exception {					// exception for BufferedReader
		// TODO Auto-generated method stub
		String[] numberData;				// register for number data
		String[] bingoString;			// bingo input string
		String[][] bingoMapString;		// bingo map string
		int numOfString;					// for bingo input string size 
		int sizeOfMatrix;				// for bingo map string size
		boolean inputCheckFlag = true;
		BingoMap bingoMap;
		
		BufferedReader br = new BufferedReader(new FileReader(args[0]));		// get the filename from args
		numberData = br.readLine().split("","");
		numOfString = Integer.valueOf(numberData[0]);
		sizeOfMatrix = Integer.valueOf(numberData[1]);
		bingoString = new String[numOfString];
		bingoString = br.readLine().split("","");
		/*for(int i = 0; i < numOfString; i++){
			System.out.print(bingoString[i] + "" "");
		}*/
		bingoMapString = new String[sizeOfMatrix][sizeOfMatrix];
		
		// TODO BingoMapString input format check
		for(int i = 0; i < sizeOfMatrix; i++){
			bingoMapString[i] = br.readLine().split("","");
			if(bingoMapString[i].length != sizeOfMatrix){
				inputCheckFlag = false;
			}
			/*for(int j = 0; j < sizeOfMatrix; j++){
				System.out.print(bingoMapString[i][j] + "" "");
			}
			System.out.println();*/
		}
		
		if(inputCheckFlag == true){
			bingoMap = new BingoMap(bingoMapString, sizeOfMatrix);
			bingoMap.inputString(bingoString, numOfString);
			System.out.println(bingoMap.result());
		}
		else{
			System.out.println(""Please check the input file."");
		}
	}
}

class BingoMap{
	String[][] mapString;
	String[] inputString;
	int numOfString;
	int sizeOfMap;
	
	public BingoMap(String[][] mapString, int sizeOfMap){
		this.mapString = mapString;
		this.sizeOfMap = sizeOfMap;
	}
	
	void inputString(String[] inputString, int numOfString){
		this.inputString = inputString;
		this.numOfString = numOfString;
	}
	
	int result(){
		return this.bingoAlg(digitallize());
	}
	
	boolean[][] digitallize (){
		boolean[][] booleanMap = new boolean[sizeOfMap][sizeOfMap];
		
		for(int i=0; i < sizeOfMap; i++){
			for(int j=0; j < sizeOfMap; j++){
				for(int k=0; k< numOfString; k++){
					if(booleanMap[i][j] == false)
						booleanMap[i][j] = mapString[i][j].equals(inputString[k]);
				}
			}
		}
		
		/*for(int i = 0; i<sizeOfMap; i++){
			for(int j = 0; j<sizeOfMap; j++)
				System.out.print(booleanMap[i][j]);
			System.out.println();
		}*/
		
		return booleanMap;
	}
	
	int bingoAlg(boolean[][] booleanMap){	
		int result = 0;
		boolean[][] resultMapFlag = new boolean[3][];		// flags for all map
		resultMapFlag[0] = new boolean[sizeOfMap];			// flags for column
		resultMapFlag[1] = new boolean[sizeOfMap];			// flags for row
		resultMapFlag[2] = new boolean[2];					// flags for diagonal
		
		for(int i=0; i<sizeOfMap; i++){
			for(int j=0; j<sizeOfMap; j++){
				if(booleanMap[i][j] == false){
					resultMapFlag[0][i] = true;
					resultMapFlag[1][j] = true;
					if(i == j){
						resultMapFlag[2][0] = true;
					}
					
					if(i + j == sizeOfMap - 1){
						resultMapFlag[2][1] = true;
						//System.out.println(""x:"" + i + ""; y:"" + j);
					}
				}
			}
		}
		
		for(int i=0; i<resultMapFlag.length; i++){
			for(int j=0; j<resultMapFlag[i].length; j++){
				if(resultMapFlag[i][j] == false){
					result++;
					//System.out.println(""result index: i="" + i + ""; j="" + j);
				}
			}
		}
		
		return result;
	}
}

@bd30fac25ec9543412d95f89ca611d0d@"
"r04921094","10","0.093","105200","@aba25a892fb1cebcdf93614cd06d90aa@import java.io.BufferedReader;
import java.io.FileReader;

/**
 * @author yemengyuan
 *
 */
public class Bingo {

	public static void main(String[] args) throws Exception {					// exception for BufferedReader
		// TODO Auto-generated method stub
		String[] numberData;				// register for number data
		String[] bingoString;			// bingo input string
		String[][] bingoMapString;		// bingo map string
		String regString;				// BufferedReader register for input checking
		int numOfString;					// for bingo input string size 
		int sizeOfMatrix;				// for bingo map string size
		boolean inputCheckFlag = true;
		BingoMap bingoMap;	
		
		BufferedReader br = new BufferedReader(new FileReader(args[0]));		// get the filename from args
		numberData = br.readLine().split("","");
		numOfString = Integer.valueOf(numberData[0]);
		sizeOfMatrix = Integer.valueOf(numberData[1]);
		bingoString = new String[numOfString];
		bingoString = br.readLine().split("","");
		/*for(int i = 0; i < numOfString; i++){
			System.out.print(bingoString[i] + "" "");
		}*/
		bingoMapString = new String[sizeOfMatrix][sizeOfMatrix];
		
		/***************** Input Checke ************************/
		int i = 0;
		while((regString = br.readLine()) != null && regString.length() != 0 ){
			bingoMapString[i] = regString.split("","");
			if(bingoMapString[i].length != sizeOfMatrix){
				inputCheckFlag = false;
			}
			i++;
			/*for(int j = 0; j < sizeOfMatrix; j++){
				System.out.print(bingoMapString[i][j] + "" "");
			}
			System.out.println();*/
		}
		
		/************ Run Algorithm if input format is right*******************/
		if(inputCheckFlag == true && i == sizeOfMatrix){
			bingoMap = new BingoMap(bingoMapString, sizeOfMatrix);
			bingoMap.inputString(bingoString, numOfString);
			System.out.println(bingoMap.result());
		}
		else{
			System.out.println(""Please check the input file."");
		}
	}
}

/**
 * @author yemengyuan
 *
 */
class BingoMap{
	String[][] mapString;
	String[] inputString;
	int numOfString;
	int sizeOfMap;
	
	
	/**
	 * @param mapString: Bingo String Map
	 * @param sizeOfMap: We can use mapString.length() to replace. However, it is more convenience 
	 * to use the input file data. 
	 */
	public BingoMap(String[][] mapString, int sizeOfMap){
		this.mapString = mapString;
		this.sizeOfMap = sizeOfMap;
	}
	
	/**
	 * @param inputString: Bingo String Input
	 * @param numOfString: We can use inputString.length() to replace. However, it is more convenience 
	 * to use the input file data. 
	 */
	void inputString(String[] inputString, int numOfString){
		this.inputString = inputString;
		this.numOfString = numOfString;
	}
	
	/**
	 * Combination of bingoAlg() and digitallize()
	 * @return
	 */
	int result(){
		return this.bingoAlg(digitallize());
	}
	
	/**
	 * This method return the map in boolean[][] way by compare all the input string and bingo Map.
	 * @return boolean[][] map
	 */
	boolean[][] digitallize (){
		boolean[][] booleanMap = new boolean[sizeOfMap][sizeOfMap];
		
		for(int i=0; i < sizeOfMap; i++){
			for(int j=0; j < sizeOfMap; j++){
				for(int k=0; k< numOfString; k++){
					if(booleanMap[i][j] == false)
						booleanMap[i][j] = mapString[i][j].equals(inputString[k]);
				}
			}
		}
		
		/*for(int i = 0; i<sizeOfMap; i++){
			for(int j = 0; j<sizeOfMap; j++)
				System.out.print(booleanMap[i][j]);
			System.out.println();
		}*/
		
		return booleanMap;
	}
	
	int bingoAlg(boolean[][] booleanMap){	
		int result = 0;
		boolean[][] resultMapFlag = new boolean[3][];		// flags for all map
		resultMapFlag[0] = new boolean[sizeOfMap];			// flags for column
		resultMapFlag[1] = new boolean[sizeOfMap];			// flags for row
		resultMapFlag[2] = new boolean[2];					// flags for diagonal
		
		/*
		 * Check all the elements in booleanmap, if one is false enable resultMapFlag.
		 */
		for(int i=0; i<sizeOfMap; i++){
			for(int j=0; j<sizeOfMap; j++){
				if(booleanMap[i][j] == false){
					resultMapFlag[0][i] = true;
					resultMapFlag[1][j] = true;
					if(i == j){
						resultMapFlag[2][0] = true;
					}
					
					if(i + j == sizeOfMap - 1){
						resultMapFlag[2][1] = true;
						//System.out.println(""x:"" + i + ""; y:"" + j);
					}
				}
			}
		}
		
		/*
		 * Check all the resultMapFlag and return the result
		 */
		for(int i=0; i<resultMapFlag.length; i++){
			for(int j=0; j<resultMapFlag[i].length; j++){
				if(resultMapFlag[i][j] == false){
					result++;
					//System.out.println(""result index: i="" + i + ""; j="" + j);
				}
			}
		}
		
		return result;
	}
}

@aba25a892fb1cebcdf93614cd06d90aa@"
"b02611023","0","0","0","@57a6eb5283df64aaf98db2091290445e@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int count = 0;
            int count1 = 0;
            int count2 = 0;
            int count3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		if(matrix[j][k].equals(announce[0]) | matrix[j][k].equals(announce[1])){
            			dot = dot + 1;
            			if(matrix[j][k].equals(announce[0])){
            				count = count + 1;
            			}
            		}
            		if(matrix[k][j].equals(announce[0]) | matrix[k][j].equals(announce[1])){
            			dot1 = dot1 + 1;
            			if(matrix[k][j].equals(announce[0])){
            				count1 = count1 + 1;
            			}
            		}
            	}
            	if(matrix[j][j].equals(announce[0]) | matrix[j][j].equals(announce[1])){
            		dot2 = dot2 + 1;
            		if(matrix[j][j].equals(announce[0])){
            				count2 = count2 + 1;
            			}
            	}
            	if(matrix[num-j-1][j].equals(announce[0]) | matrix[num-j-1][j].equals(announce[1])){
            		dot3 = dot3 + 1;
            		if(matrix[num-j-1][j].equals(announce[0])){
            				count3 = count3 + 1;
            			}
            	}

            	if(dot == num & count < num & count > 0){
            		line = line + 1;
            		dot = 0;
            		count = 0;
            	}
            	else{
            		dot = 0;
            		count = 0;
            	}
            	if(dot1 == num & count1 < num & count1 > 0){
            		line = line + 1;
            		dot1 = 0;
            		count1 = 0;
            	}
            	else{
            		dot1 = 0;
            		count1 = 0;
            	}
            	if(dot2 == num & count2 < num & count2 > 0){
            		line = line + 1;
            	}
            	if(dot3 == num & count3 < num & count3 > 0){
            		line = line + 1;
            	}
            }

            System.out.println(line);
        }
    }
}
@57a6eb5283df64aaf98db2091290445e@"
"b02611023","5","0.73","104624","@db1646acad4825edb60752497622ce99@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int count = 0;
            int count1 = 0;
            int count2 = 0;
            int count3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		if(matrix[j][k].equals(announce[0]) | matrix[j][k].equals(announce[1])){
            			dot = dot + 1;
            			if(matrix[j][k].equals(announce[0])){
            				count = count + 1;
            			}
            		}
            		if(matrix[k][j].equals(announce[0]) | matrix[k][j].equals(announce[1])){
            			dot1 = dot1 + 1;
            			if(matrix[k][j].equals(announce[0])){
            				count1 = count1 + 1;
            			}
            		}
            	}
            	if(matrix[j][j].equals(announce[0]) | matrix[j][j].equals(announce[1])){
            		dot2 = dot2 + 1;
            		if(matrix[j][j].equals(announce[0])){
            				count2 = count2 + 1;
            			}
            	}
            	if(matrix[num-j-1][j].equals(announce[0]) | matrix[num-j-1][j].equals(announce[1])){
            		dot3 = dot3 + 1;
            		if(matrix[num-j-1][j].equals(announce[0])){
            				count3 = count3 + 1;
            			}
            	}

            	if(dot == num & count < num & count > 0){
            		line = line + 1;
            		dot = 0;
            		count = 0;
            	}
            	else{
            		dot = 0;
            		count = 0;
            	}
            	if(dot1 == num & count1 < num & count1 > 0){
            		line = line + 1;
            		dot1 = 0;
            		count1 = 0;
            	}
            	else{
            		dot1 = 0;
            		count1 = 0;
            	}
            	if(dot2 == num & count2 < num & count2 > 0){
            		line = line + 1;
            	}
            	if(dot3 == num & count3 < num & count3 > 0){
            		line = line + 1;
            	}
            }

            System.out.println(line);
        }
    }
}
@db1646acad4825edb60752497622ce99@"
"b03106003","0","0","0","@e79996290f839527d75a8e7d5c5db3b0@public class Bingo {

 
    public static void main(String[] args) {
        // TODO code application logic here
        int sum = 0;
        String tmp[] = args[0].split("","");
        int m = Integer.valueOf(tmp[0]);
        int n = Integer.valueOf(tmp[1]);
        
        String ans[] = new String[m];
        ans = args[1].split("","");
        
        String map [][] = new String[n][n];
        int flag[][] = new int [n][n];
        
        
        for(int i = 0; i<n; i++){
            map[i] =  args[i+2].split("","");                   
        }
        
        for(int i =0 ; i<flag.length; i++){
            for(int j = 0; j < flag[i].length; j++){
                flag[i][j] = 0;            
            }
        }
        
        for(int q = 0; q < ans.length ; q++){
            for(int i = 0 ; i< flag.length; i++){
                for(int j = 0; j < flag[i].length; j++){
                    if (map[i][j].equals(ans[q])){
                        flag[i][j] = 1; 
                    }
                }
            }
        }
        int temp = 0;
        int temp2 = 0;
        int temp3 = 0;
        for(int i = 0; i < flag.length ; i++){
            if (flag[i][i] != 0){
                for(int j = 0; j < flag[i].length; j++){
                    temp2 = temp2 + flag[i][j];
                    
                    temp3 = temp3 + flag[j][i];
                    
                    }
                    
                if (temp2 == n){
                        sum = sum + 1;
                    }
                 temp2 = 0;    
                if (temp3 == n){
                        sum = sum + 1;
                    }
                 temp3 = 0;    
                
            }
            temp = temp + flag[n-1-i][i];
        }
            if (temp == n){
                sum = sum + 1;
            }
            temp = 0;
        
            System.out.println(sum);
        
        
        
    }
    
}

@e79996290f839527d75a8e7d5c5db3b0@"
"b02611019","4","0.84","105152","@0a7bd1e8a2121da3322a52207991e370@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        BufferedReader br = new BufferedReader(new FileReader(args[0]));
            
        // read a line and split by ','
        
        String[] data = br.readLine().split("","");

        // store the first integer in variable stringCount (number of announced strings)
        int stringCount = Integer.parseInt(data[0]);

        // store the second integer in variable num (dimension of matrix: num * num)            
        int num = Integer.parseInt(data[1]);

        // initilization of a String array in Java
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        

        // printf in Java (you should comment out or delete this in your final submission)
//        System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

        
        announce = br.readLine().split("","");
        for (int i=0;i<num;i++){
            String[] content = br.readLine().split("","");
            
            for (int j=0;j<num;j++){
//                StdOut.print(content[j]);
                matrix[i][j]=content[j];
            }
//            System.out.print(""\n"");
        }
        int answer=0;
        int[] x=new int[num];
        int[] y=new int[num];
        int[] z=new int[2];
        for (int i=0;i<num;i++){
            x[i]=y[i]=0;
            for (int j=0;j<num;j++){
                if ((Arrays.binarySearch(announce, matrix[i][j]))<0){
                    x[i]++;
                    y[j]++;
                    
                }
                if (i==j&&(Arrays.binarySearch(announce, matrix[i][j]))<0)
                    z[0]++;
                if (i+j==num&&(Arrays.binarySearch(announce, matrix[i][j]))<0)
                    z[1]++;
            }
            
        }
        for(int i=0;i<num;i++){
            if(x[i]==0)
                answer++;
            if(y[i]==0)
                answer++;
            if(z[0]==0)
                answer++;
            if(z[1]==0)
                answer++;
                
        }            
        System.out.print(answer);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        
    }
}

@0a7bd1e8a2121da3322a52207991e370@"
"b03106003","7","0.74","103264","@b8d6908c0f9265f9ef2194c875bb022d@import java.io.FileReader;
import java.io.BufferedReader;
import java.io.FileNotFoundException;



/**
 *
 * @author Sophia
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        BufferedReader br = new BufferedReader(new FileReader(args[0]));
        StringBuffer sb = new StringBuffer();
        String strNum = new String();
        
    while ((strNum = br.readLine())!=null){
        sb.append(strNum);
        sb.append("";"");
    }
        strNum = sb.toString();
        String data[] = strNum.split("";"");
        
        
        int sum = 0;
        String tmp[] = data[0].split("","");
        int m = Integer.valueOf(tmp[0]);
        int n = Integer.valueOf(tmp[1]);
        
        String ans[] = new String[m];
        ans = data[1].split("","");
        
        String map [][] = new String[n][n];
        int flag[][] = new int [n][n];
        
        
        for(int i = 0; i<n; i++){
            map[i] =  data[i+2].split("","");                   
        }
        
        for(int i =0 ; i<flag.length; i++){
            for(int j = 0; j < flag[i].length; j++){
                flag[i][j] = 0;            
            }
        }
        
        for(int q = 0; q < ans.length ; q++){
            for(int i = 0 ; i< flag.length; i++){
                for(int j = 0; j < flag[i].length; j++){
                    if (map[i][j].equals(ans[q])){
                        flag[i][j] = 1; 
                    }
                }
            }
        }
        int temp = 0;
        int temp2 = 0;
        int temp3 = 0;
        for(int i = 0; i < flag.length ; i++){
            if (flag[i][i] != 0){
                for(int j = 0; j < flag[i].length; j++){
                    temp2 = temp2 + flag[i][j];
                    
                    temp3 = temp3 + flag[j][i];
                    
                    }
                    
                if (temp2 == n){
                        sum = sum + 1;
                    }
                 temp2 = 0;    
                if (temp3 == n){
                        sum = sum + 1;
                    }
                 temp3 = 0;    
                
            }
            temp = temp + flag[n-1-i][i];
        }
            if (temp == n){
                sum = sum + 1;
            }
            temp = 0;
        
            System.out.println(sum);
        
        
        
    }
    
}
@b8d6908c0f9265f9ef2194c875bb022d@"
"b02611019","4","0.86","105184","@c3bb582a6de6dc46e3d31b5534c0fff0@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        BufferedReader br = new BufferedReader(new FileReader(args[0]));
            
        // read a line and split by ','
        
        String[] data = br.readLine().split("","");

        // store the first integer in variable stringCount (number of announced strings)
        int stringCount = Integer.parseInt(data[0]);

        // store the second integer in variable num (dimension of matrix: num * num)            
        int num = Integer.parseInt(data[1]);

        // initilization of a String array in Java
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        

        // printf in Java (you should comment out or delete this in your final submission)
//        System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

        int answer=0;
        int[] x=new int[num];
        int[] y=new int[num];
        int[] z=new int[2];
        announce = br.readLine().split("","");
        for (int i=0;i<num;i++){
            String[] content = br.readLine().split("","");
            x[i]=y[i]=0;
            for (int j=0;j<num;j++){
//                StdOut.print(content[j]);
                matrix[i][j]=content[j];
                if ((Arrays.binarySearch(announce, matrix[i][j]))<0){
                    x[i]++;
                    y[j]++;
                    
                }
                if (i==j&&(Arrays.binarySearch(announce, matrix[i][j]))<0)
                    z[0]++;
                if (i+j==num&&(Arrays.binarySearch(announce, matrix[i][j]))<0)
                    z[1]++;
                
            }
//            System.out.print(""\n"");
        }
        
        for(int i=0;i<num;i++){
            if(x[i]==0)
                answer++;
            if(y[i]==0)
                answer++;
            if(z[0]==0)
                answer++;
            if(z[1]==0)
                answer++;
                
        }            
        System.out.print(answer);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        
    }
}

@c3bb582a6de6dc46e3d31b5534c0fff0@"
"b03106003","7","0.79","103536","@d01b65c10ec29a824c507a8425c928f4@

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.FileNotFoundException;



/**
 *
 * @author Sophia
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        BufferedReader br = new BufferedReader(new FileReader(args[0]));
        StringBuffer sb = new StringBuffer();
        String strNum = new String();
        
    while ((strNum = br.readLine())!=null){
        sb.append(strNum);
        sb.append("";"");
    }
        strNum = sb.toString();
        String data[] = strNum.split("";"");

        
        int sum = 0;
        String tmp[] = data[0].split("","");
        int m = Integer.valueOf(tmp[0]);
        int n = Integer.valueOf(tmp[1]);
        
        String ans[] = new String[m];
        ans = data[1].split("","");
        
        String map [][] = new String[n][n];
        int flag[][] = new int [n][n];
        
        
        for(int i = 0; i<n; i++){
            map[i] =  data[i+2].split("","");                   
        }
        
        for(int i =0 ; i<flag.length; i++){
            for(int j = 0; j < flag[i].length; j++){
                flag[i][j] = 0;            
            }
        }
        
        for(int q = 0; q < ans.length ; q++){
            for(int i = 0 ; i< flag.length; i++){
                for(int j = 0; j < flag[i].length; j++){
                    if (map[i][j].equals(ans[q])){
                        flag[i][j] = 1; 
                    }
                }
            }
        }
        int temp = 0;
        int temp2 = 0;
        int temp3 = 0;
        int temp4 = 0;
        for(int i = 0; i < flag.length ; i++){
            if (flag[i][i] != 0){
                for(int j = 0; j < flag[i].length; j++){
                    temp2 = temp2 + flag[i][j];
                    
                    temp3 = temp3 + flag[j][i];
                    
                    }
                    
                if (temp2 == n){
                        sum = sum + 1;
                    }
                 temp2 = 0;    
                if (temp3 == n){
                        sum = sum + 1;
                    }
                 temp3 = 0;    
                
            }
            temp = temp + flag[n-1-i][i];
            temp4 = temp4 + flag[i][n-1-i];
        }
            if (temp == n){
                sum = sum + 1;
            }
            temp = 0;
            if (temp4 == n){
                sum = sum + 1;
            }
            temp4 = 0;
        
            System.out.println(sum);
        
        
        
    }
    
}
@d01b65c10ec29a824c507a8425c928f4@"
"b03106003","10","0.087","105168","@6110961c6983fcc2def5fc2f0f75c08c@
import java.io.FileReader;
import java.io.BufferedReader;
import java.io.FileNotFoundException;



/**
 *
 * @author Sophia
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        BufferedReader br = new BufferedReader(new FileReader(args[0]));
        StringBuffer sb = new StringBuffer();
        String strNum = new String();
        
    while ((strNum = br.readLine())!=null){
        sb.append(strNum);
        sb.append("";"");
    }
        strNum = sb.toString();
        String data[] = strNum.split("";"");

        
        int sum = 0;
        String tmp[] = data[0].split("","");
        int m = Integer.valueOf(tmp[0]);
        int n = Integer.valueOf(tmp[1]);
        
        String ans[] = new String[m];
        ans = data[1].split("","");
        
        String map [][] = new String[n][n];
        int flag[][] = new int [n][n];
        
        
        for(int i = 0; i<n; i++){
            map[i] =  data[i+2].split("","");                   
        }
        
        for(int i =0 ; i<flag.length; i++){
            for(int j = 0; j < flag[i].length; j++){
                flag[i][j] = 0;            
            }
        }
        
        for(int q = 0; q < ans.length ; q++){
            for(int i = 0 ; i< flag.length; i++){
                for(int j = 0; j < flag[i].length; j++){
                    if (map[i][j].equals(ans[q])){
                        flag[i][j] = 1; 
                    }
                }
            }
        }
        int temp = 0;
        int temp2 = 0;
        int temp3 = 0;
        int temp4 = 0;
        for(int i = 0; i < flag.length ; i++){
            if (flag[i][i] != 0){
                for(int j = 0; j < flag[i].length; j++){
                    temp2 = temp2 + flag[i][j];
                    
                    temp3 = temp3 + flag[j][i];
                    
                    }
                    
                if (temp2 == n){
                        sum = sum + 1;
                    }
                 temp2 = 0;    
                if (temp3 == n){
                        sum = sum + 1;
                    }
                 temp3 = 0;    
                
            }
            temp = temp + flag[n-1-i][i];
            temp4 = temp4 + flag[i][i];
        }
            if (temp == n){
                sum = sum + 1;
            }
            temp = 0;
            if (temp4 == n){
                sum = sum + 1;
            }
            temp4 = 0;
        
            System.out.println(sum);
        
        
        
    }
    
}
@6110961c6983fcc2def5fc2f0f75c08c@"
"b02611019","4","0.85","105200","@dd188b964fa5bfaa67a5080210b08b02@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        BufferedReader br = new BufferedReader(new FileReader(args[0]));
            
        // read a line and split by ','
        
        String[] data = br.readLine().split("","");

        // store the first integer in variable stringCount (number of announced strings)
        int stringCount = Integer.parseInt(data[0]);

        // store the second integer in variable num (dimension of matrix: num * num)            
        int num = Integer.parseInt(data[1]);

        // initilization of a String array in Java
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        

        // printf in Java (you should comment out or delete this in your final submission)
//        System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

        int answer=0;
        int[] x=new int[num];
        int[] y=new int[num];
        int[] z=new int[2];
        announce = br.readLine().split("","");
        for (int i=0;i<num;i++){
            String[] content = br.readLine().split("","");
            x[i]=y[i]=0;
            for (int j=0;j<num;j++){
//                StdOut.print(content[j]);
                matrix[i][j]=content[j];
                if ((Arrays.binarySearch(announce, matrix[i][j]))<0){
                    x[i]++;
                    y[j]++;
                    
                }
                if (i==j&&(Arrays.binarySearch(announce, matrix[i][j]))<0)
                    z[0]++;
                if (i+j==num-1&&(Arrays.binarySearch(announce, matrix[i][j]))<0)
                    z[1]++;
                
            }
//            System.out.print(""\n"");
        }
        
        for(int i=0;i<num;i++){
            if(x[i]==0)
                answer++;
            if(y[i]==0)
                answer++;
            if(z[0]==0)
                answer++;
            if(z[1]==0)
                answer++;
                
        }            
        System.out.print(answer);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        
    }
}

@dd188b964fa5bfaa67a5080210b08b02@"
"b02611019","4","0.78","103328","@0bbda29fdcbeb16f36cb1d267d81d86c@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        BufferedReader br = new BufferedReader(new FileReader(args[0]));
            
        // read a line and split by ','
        
        String[] data = br.readLine().split("","");

        // store the first integer in variable stringCount (number of announced strings)
        int stringCount = Integer.parseInt(data[0]);

        // store the second integer in variable num (dimension of matrix: num * num)            
        int num = Integer.parseInt(data[1]);

        // initilization of a String array in Java
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        

        // printf in Java (you should comment out or delete this in your final submission)
//        System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

        int answer=0;
        int[] x=new int[num];
        int[] y=new int[num];
        int[] z=new int[2];
        z[0]=0;
        z[1]=0;
        for(int i=0;i<num;i++){
            x[i]=0;
            y[i]=0;
        }
        announce = br.readLine().split("","");
        for (int i=0;i<num;i++){
            String[] content = br.readLine().split("","");
            
            for (int j=0;j<num;j++){
//                StdOut.print(content[j]);
                matrix[i][j]=content[j];
                if ((Arrays.binarySearch(announce, matrix[i][j]))<0){
                    x[i]++;
                    y[j]++;
                    
                }
                if (i==j&&(Arrays.binarySearch(announce, matrix[i][j]))<0)
                    z[0]++;
                if (i+j==num-1&&(Arrays.binarySearch(announce, matrix[i][j]))<0)
                    z[1]++;
                
            }
//            System.out.print(""\n"");
        }
        
        for(int i=0;i<num;i++){
            if(x[i]==0)
                answer++;
            if(y[i]==0)
                answer++;
            if(z[0]==0)
                answer++;
            if(z[1]==0)
                answer++;
                
        }            
        System.out.print(answer);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        
    }
}

@0bbda29fdcbeb16f36cb1d267d81d86c@"
"b02611019","5","0.87","105168","@0d185805df8e7cf144b5e6fcdb8308b0@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        BufferedReader br = new BufferedReader(new FileReader(args[0]));
            
        // read a line and split by ','
        
        String[] data = br.readLine().split("","");

        // store the first integer in variable stringCount (number of announced strings)
        int stringCount = Integer.parseInt(data[0]);

        // store the second integer in variable num (dimension of matrix: num * num)            
        int num = Integer.parseInt(data[1]);

        // initilization of a String array in Java
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        

        // printf in Java (you should comment out or delete this in your final submission)
//        System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

        int answer=0;
        int[] x=new int[num];
        int[] y=new int[num];
        int[] z=new int[2];
        z[0]=0;
        z[1]=0;
        for(int i=0;i<num;i++){
            x[i]=0;
            y[i]=0;
        }
        announce = br.readLine().split("","");
        for (int i=0;i<num;i++){
            String[] content = br.readLine().split("","");
            
            for (int j=0;j<num;j++){
//                StdOut.print(content[j]);
                matrix[i][j]=content[j];
                if ((Arrays.binarySearch(announce, matrix[i][j]))<0){
                    x[i]++;
                    y[j]++;
                    
                }
                if (i==j&&(Arrays.binarySearch(announce, matrix[i][j]))<0)
                    z[0]++;
                if (i+j==(num-1)&&(Arrays.binarySearch(announce, matrix[i][j]))<0)
                    z[1]++;
                
            }
//            System.out.print(""\n"");
        }
        
        for(int i=0;i<num;i++){
            if(x[i]==0)
                answer++;
            if(y[i]==0)
                answer++;
            
        }         
        if(z[0]==0)
            answer++;
        if(z[1]==0)
            answer++;
        System.out.print(answer);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        
    }
}

@0d185805df8e7cf144b5e6fcdb8308b0@"
"b02611019","5","0.84","104416","@f6d567b5ec6c762491e6aeb3f60e8ed9@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        BufferedReader br = new BufferedReader(new FileReader(args[0]));
            
        // read a line and split by ','
        
        String[] data = br.readLine().split("","");

        // store the first integer in variable stringCount (number of announced strings)
        int stringCount = Integer.parseInt(data[0]);

        // store the second integer in variable num (dimension of matrix: num * num)            
        int num = Integer.parseInt(data[1]);

        // initilization of a String array in Java
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        

        // printf in Java (you should comment out or delete this in your final submission)
//        System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

        int answer=0;
        int[] x=new int[num];
        int[] y=new int[num];
        int[] z=new int[2];
        z[0]=0;
        z[1]=0;
        for(int i=0;i<num;i++){
            x[i]=0;
            y[i]=0;
        }
        announce = br.readLine().split("","");
        for (int i=0;i<num;i++){
            String[] content = br.readLine().split("","");
            
            for (int j=0;j<num;j++){
//                StdOut.print(content[j]);
                matrix[i][j]=content[j];
                if ((Arrays.binarySearch(announce, matrix[i][j]))<0){
                    x[i]++;
                    y[j]++;
                    
                }
                if (i==j&&((Arrays.binarySearch(announce, matrix[i][j]))<0))
                    z[0]++;
                if (i+j==(num-1)&&((Arrays.binarySearch(announce, matrix[i][j]))<0))
                    z[1]++;
                
            }
//            System.out.print(""\n"");
        }
        
        for(int i=0;i<num;i++){
            if(x[i]==0)
                answer++;
            if(y[i]==0)
                answer++;
            
        }         
        if(z[0]==0)
            answer++;
        if(z[1]==0)
            answer++;
        System.out.print(answer);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        
    }
}

@f6d567b5ec6c762491e6aeb3f60e8ed9@"
"b02611019","10","0.091","102416","@337a7506aab27e428a483d05a8510c87@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        BufferedReader br = new BufferedReader(new FileReader(args[0]));
            
        // read a line and split by ','
        
        String[] data = br.readLine().split("","");

        // store the first integer in variable stringCount (number of announced strings)
        int stringCount = Integer.parseInt(data[0]);

        // store the second integer in variable num (dimension of matrix: num * num)            
        int num = Integer.parseInt(data[1]);

        // initilization of a String array in Java
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        

        // printf in Java (you should comment out or delete this in your final submission)
//        System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

        int answer=0;
        int[] x=new int[num];
        int[] y=new int[num];
        int[] z=new int[2];
        z[0]=0;
        z[1]=0;
        for(int i=0;i<num;i++){
            x[i]=0;
            y[i]=0;
        }
        String[] announcestr = br.readLine().split("","");
        for(int i=0;i<stringCount;i++){
            announce[i]=announcestr[i];
//            StdOut.print(announce[i]);
        }
            
        Arrays.sort(announcestr);
        for (int i=0;i<num;i++){
            String[] content = br.readLine().split("","");
            
            for (int j=0;j<num;j++){
//                StdOut.print(content[j]);
                matrix[i][j]=content[j];
                if ((Arrays.binarySearch(announcestr, matrix[i][j]))<0){
                    x[i]++;
                    y[j]++;
                    
                }
                if (i==j&&((Arrays.binarySearch(announcestr, matrix[i][j]))<0))
                    z[0]++;
                if (i+j==(num-1)&&((Arrays.binarySearch(announcestr, matrix[i][j]))<0))
                    z[1]++;
                
            }
//            System.out.print(""\n"");
        }
        
        for(int i=0;i<num;i++){
            if(x[i]==0)
                answer++;
            if(y[i]==0)
                answer++;
            
        }         
        if(z[0]==0)
            answer++;
        if(z[1]==0)
            answer++;
        System.out.print(answer);
//        System.out.print(Arrays.binarySearch(announce,matrix[1][1]));
        for (int i=0;i<num;i++){
//            System.out.print(x[i]+""\n"");
//            System.out.print(y[i]+""\n"");
        }
//        System.out.print(z[0]);
//        System.out.print(z[1]);
//        for(int i=0;i<stringCount;i++){
//            
//            StdOut.print(announce[i]);
//        }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        
    }
}

@337a7506aab27e428a483d05a8510c87@"
"r03222054","0","0.93","105472","@1db31da25a805607f8d31993b4cae1ad@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    
    public static int count =0;
    
    
    public static int calculate(boolean[][] check, int num)
    {
        
        //calculate the colum
        for(int i = 0; i<num ; i++)
        {

                boolean key = check[0][i];
                for (int j =1; j<num; j++)
                {
                   key = (check[j][i] && key);
                }
                
                 if(key)
                 count++;
        }
        
        //calculate the row
        
              for(int i = 0; i<num ; i++)
        {

                boolean key = check[i][0];
                for (int j =1; j<num; j++)
                {
                   key = (check[i][j] && key);
                }
             if(key)
                 count++;
        }
              
       
//calculate the diagonal
       {
            boolean key = check[0][0];
            for (int i = 1; i < num; i++) 
            {
                key = (check[i][i] && key);
            }
            
            if (key) 
            {
                count++;
            }
        }

        {
            boolean key = check[num - 1][0];
            for (int i = 1; i < num; i++) 
            {
                key = (check[num - 1 - i][i] && key);
            }
            if (key) 
            {
                count++;
            }
        }
        
        return count;  
        
        
    }

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            
         //   System.out.print(announce.length+""\n"");
            announce= br.readLine().split("","");
            boolean[][] check = new boolean [num][num];

            for (int i =0 ; i<num; i++)
            {
               data = br.readLine().split("","");
               for( int j=0 ; j<num; j++ )
               {
                   matrix[i][j]= data[j];    
                   check[i][j] = false;
                   for (int k=0; k<announce.length; k++)
                   {
                       if (matrix[i][j].equals(announce[k]))
                       {
                           check[i][j] = true;
                           //System.out.print(check[i][j]+""\t"");
                       }             
                   }
                   
                   System.out.print(check[i][j]+""\t"");            
               }
                System.out.print(""\n"");
            }
            
            System.out.print( calculate(check, num)+""\n"");
            
            
 
            
            
            
            
            

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
            
            
            
        }
    }
}

@1db31da25a805607f8d31993b4cae1ad@"
"r03222054","0","0.85","105136","@2f7940cbcb52fb54bd973ffa809d10f7@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static int count = 0;

    public static int calculate(boolean[][] check, int num) {

        //calculate the colum
        for (int i = 0; i < num; i++) {

            boolean key = check[0][i];
            for (int j = 1; j < num; j++) {
                key = (check[j][i] && key);
            }

            if (key) {
                count++;
            }
        }

        //calculate the row
        for (int i = 0; i < num; i++) {

            boolean key = check[i][0];
            for (int j = 1; j < num; j++) {
                key = (check[i][j] && key);
            }
            if (key) {
                count++;
            }
        }

//calculate the diagonal
        {
            boolean key = check[0][0];
            for (int i = 1; i < num; i++) {
                key = (check[i][i] && key);
            }

            if (key) {
                count++;
            }
        }

        {
            boolean key = check[num - 1][0];
            for (int i = 1; i < num; i++) {
                key = (check[num - 1 - i][i] && key);
            }
            if (key) {
                count++;
            }
        }

        return count;

    }

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            //   System.out.print(announce.length+""\n"");
            announce = br.readLine().split("","");
            boolean[][] check = new boolean[num][num];

            for (int i = 0; i < num; i++) {
                data = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = data[j];
                    check[i][j] = false;
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            check[i][j] = true;
                            //System.out.print(check[i][j]+""\t"");
                        }
                    }

                    System.out.print(check[i][j] + ""\t"");
                }
                System.out.print(""\n"");
            }

            System.out.print(calculate(check, num) + ""\n"");

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@2f7940cbcb52fb54bd973ffa809d10f7@"
"r03222054","10","0.085","106656","@fb8db1b5f45810bcc9af5e71085f1b47@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static int count = 0;

    public static int calculate(boolean[][] check, int num) {

        //calculate the colum
        for (int i = 0; i < num; i++) {

            boolean key = check[0][i];
            for (int j = 1; j < num; j++) {
                key = (check[j][i] && key);
            }

            if (key) {
                count++;
            }
        }

        //calculate the row
        for (int i = 0; i < num; i++) {

            boolean key = check[i][0];
            for (int j = 1; j < num; j++) {
                key = (check[i][j] && key);
            }
            if (key) {
                count++;
            }
        }

//calculate the diagonal
        {
            boolean key = check[0][0];
            for (int i = 1; i < num; i++) {
                key = (check[i][i] && key);
            }

            if (key) {
                count++;
            }
        }

        {
            boolean key = check[num - 1][0];
            for (int i = 1; i < num; i++) {
                key = (check[num - 1 - i][i] && key);
            }
            if (key) {
                count++;
            }
        }

        return count;

    }

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            //   System.out.print(announce.length+""\n"");
            announce = br.readLine().split("","");
            boolean[][] check = new boolean[num][num];

            for (int i = 0; i < num; i++) {
                data = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = data[j];
                    check[i][j] = false;
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            check[i][j] = true;
                            //System.out.print(check[i][j]+""\t"");
                        }
                    }

               //     System.out.print(check[i][j] + ""\t"");
                }
     //           System.out.print(""\n"");
            }

            System.out.print(calculate(check, num) + ""\n"");

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@fb8db1b5f45810bcc9af5e71085f1b47@"
"r04921094","10","0.084","106688","@fb3bc96c9241e6757061077dcbfcb09a@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {
    public static void main(String[] args) throws Exception {
        try (BufferedReader buffer = new BufferedReader(new FileReader(args[0]))) {
            String[] numbersString = buffer.readLine().split("","");
            int crossCount = Integer.parseInt(numbersString[0]);
            int mapLength = Integer.parseInt(numbersString[1]);

            String[] crossNames = buffer.readLine().split("","");

            Boolean[][] map = new Boolean[mapLength][mapLength];

            for (int i=0; i<mapLength; ++i) {
                String[] mapNames = buffer.readLine().split("","");
                for (int j=0; j<mapLength; ++j) {
                    if (Arrays.asList(crossNames).contains(mapNames[j])) {
                        map[i][j] = true;
                    }
                    else {
                        map[i][j] = false;
                    }
                }
            }

            Bingo bingo = new Bingo();
            System.out.println(bingo.checkLineCount(map, mapLength));
        }
    }

    public int checkLineCount(Boolean[][] map, int mapLength) {
        int count = 0;

        // count row
        for (int i=0; i<mapLength; ++i) {
            Boolean shouldIncrement = true;
            for (int j=0; j<mapLength; ++j) {
                if (!map[i][j]) {
                    shouldIncrement = false;
                    break;
                }
            }
            if (shouldIncrement) {
                count++;
            }
        }

        // count column
        for (int i=0; i<mapLength; ++i) {
            Boolean shouldIncrement = true;
            for (int j=0; j<mapLength; ++j) {
                if (!map[j][i]) {
                    shouldIncrement = false;
                    break;
                }
            }
            if (shouldIncrement) {
                count++;
            }
        }

        // count diagonal
        Boolean shouldIncrement = true;
        for (int i=0; i<mapLength; ++i) {
            if (!map[i][i]) {
                shouldIncrement = false;
                break;
            }
        }
        if (shouldIncrement) {
            count++;
        }

        shouldIncrement = true;
        for (int i=0; i<mapLength; ++i) {
            if (!map[i][mapLength - i - 1]) {
                shouldIncrement = false;
                break;
            }
        }
        if (shouldIncrement) {
            count++;
        }

        return count;
    }
}
@fb3bc96c9241e6757061077dcbfcb09a@"
"r04921094","10","0.081","104592","@aba25a892fb1cebcdf93614cd06d90aa@import java.io.BufferedReader;
import java.io.FileReader;

/**
 * @author yemengyuan
 *
 */
public class Bingo {

	public static void main(String[] args) throws Exception {					// exception for BufferedReader
		// TODO Auto-generated method stub
		String[] numberData;				// register for number data
		String[] bingoString;			// bingo input string
		String[][] bingoMapString;		// bingo map string
		String regString;				// BufferedReader register for input checking
		int numOfString;					// for bingo input string size 
		int sizeOfMatrix;				// for bingo map string size
		boolean inputCheckFlag = true;
		BingoMap bingoMap;	
		
		BufferedReader br = new BufferedReader(new FileReader(args[0]));		// get the filename from args
		numberData = br.readLine().split("","");
		numOfString = Integer.valueOf(numberData[0]);
		sizeOfMatrix = Integer.valueOf(numberData[1]);
		bingoString = new String[numOfString];
		bingoString = br.readLine().split("","");
		/*for(int i = 0; i < numOfString; i++){
			System.out.print(bingoString[i] + "" "");
		}*/
		bingoMapString = new String[sizeOfMatrix][sizeOfMatrix];
		
		/***************** Input Checke ************************/
		int i = 0;
		while((regString = br.readLine()) != null && regString.length() != 0 ){
			bingoMapString[i] = regString.split("","");
			if(bingoMapString[i].length != sizeOfMatrix){
				inputCheckFlag = false;
			}
			i++;
			/*for(int j = 0; j < sizeOfMatrix; j++){
				System.out.print(bingoMapString[i][j] + "" "");
			}
			System.out.println();*/
		}
		
		/************ Run Algorithm if input format is right*******************/
		if(inputCheckFlag == true && i == sizeOfMatrix){
			bingoMap = new BingoMap(bingoMapString, sizeOfMatrix);
			bingoMap.inputString(bingoString, numOfString);
			System.out.println(bingoMap.result());
		}
		else{
			System.out.println(""Please check the input file."");
		}
	}
}

/**
 * @author yemengyuan
 *
 */
class BingoMap{
	String[][] mapString;
	String[] inputString;
	int numOfString;
	int sizeOfMap;
	
	
	/**
	 * @param mapString: Bingo String Map
	 * @param sizeOfMap: We can use mapString.length() to replace. However, it is more convenience 
	 * to use the input file data. 
	 */
	public BingoMap(String[][] mapString, int sizeOfMap){
		this.mapString = mapString;
		this.sizeOfMap = sizeOfMap;
	}
	
	/**
	 * @param inputString: Bingo String Input
	 * @param numOfString: We can use inputString.length() to replace. However, it is more convenience 
	 * to use the input file data. 
	 */
	void inputString(String[] inputString, int numOfString){
		this.inputString = inputString;
		this.numOfString = numOfString;
	}
	
	/**
	 * Combination of bingoAlg() and digitallize()
	 * @return
	 */
	int result(){
		return this.bingoAlg(digitallize());
	}
	
	/**
	 * This method return the map in boolean[][] way by compare all the input string and bingo Map.
	 * @return boolean[][] map
	 */
	boolean[][] digitallize (){
		boolean[][] booleanMap = new boolean[sizeOfMap][sizeOfMap];
		
		for(int i=0; i < sizeOfMap; i++){
			for(int j=0; j < sizeOfMap; j++){
				for(int k=0; k< numOfString; k++){
					if(booleanMap[i][j] == false)
						booleanMap[i][j] = mapString[i][j].equals(inputString[k]);
				}
			}
		}
		
		/*for(int i = 0; i<sizeOfMap; i++){
			for(int j = 0; j<sizeOfMap; j++)
				System.out.print(booleanMap[i][j]);
			System.out.println();
		}*/
		
		return booleanMap;
	}
	
	int bingoAlg(boolean[][] booleanMap){	
		int result = 0;
		boolean[][] resultMapFlag = new boolean[3][];		// flags for all map
		resultMapFlag[0] = new boolean[sizeOfMap];			// flags for column
		resultMapFlag[1] = new boolean[sizeOfMap];			// flags for row
		resultMapFlag[2] = new boolean[2];					// flags for diagonal
		
		/*
		 * Check all the elements in booleanmap, if one is false enable resultMapFlag.
		 */
		for(int i=0; i<sizeOfMap; i++){
			for(int j=0; j<sizeOfMap; j++){
				if(booleanMap[i][j] == false){
					resultMapFlag[0][i] = true;
					resultMapFlag[1][j] = true;
					if(i == j){
						resultMapFlag[2][0] = true;
					}
					
					if(i + j == sizeOfMap - 1){
						resultMapFlag[2][1] = true;
						//System.out.println(""x:"" + i + ""; y:"" + j);
					}
				}
			}
		}
		
		/*
		 * Check all the resultMapFlag and return the result
		 */
		for(int i=0; i<resultMapFlag.length; i++){
			for(int j=0; j<resultMapFlag[i].length; j++){
				if(resultMapFlag[i][j] == false){
					result++;
					//System.out.println(""result index: i="" + i + ""; j="" + j);
				}
			}
		}
		
		return result;
	}
}

@aba25a892fb1cebcdf93614cd06d90aa@"
"r04942099","0","0","0","@75e7849b4fd3b5e48e310ad3a5a108b0@import java.io.FileReader;
import java.io.BufferedReader;


public class Bingo  {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
           

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] match = new int[num][num];
            int temp1 = 0;
            int temp2 = 0;
            int count = 0;
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] m = br.readLine().split("" "");
           
            String[] bg = m[0].split("","");
            
            for(int i=0; i<num; i++){
                String[] bg2 = m[i+1].split("","");
                for(int j=0;j<num;j++){
                    matrix[i][j] = bg2[j];
                    //System.out.println(matrix[i][j]);
                }
            }
            for(int i=0; i<stringCount; i++){
                announce[i] = bg[i];
                //System.out.println(announce[i]);
            }

            for(int i=0; i<num; i++){
                for(int j=0; j<num; j++){
                    match[i][j] = 0;
                    for(int k=0; k<stringCount; k++){
                        if(matrix[i][j].equals(announce[k])) match[i][j]=1;
                    }
                   // System.out.println(match[i][j]);
                }
            }
            for(int i=0; i<num; i++){
                temp1 = 1;
                temp2 = 1;
                for(int j=0; j<num;j++){
                    if(match[i][j]==0) temp1 =0;
                    if(match[j][i]==0) temp2 =0;
                }
                count = count + temp1 + temp2;
            }
            temp1 = 1;
            temp2 = 1;
            for(int i=0; i<num; i++){
                if(match[i][i]==0) temp1 = 0;
                if(match[i][num-1-i]==0) temp2 = 0;
            }
            count = count  + temp1 + temp2;
            
            System.out.println(count);
            
            
            
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@75e7849b4fd3b5e48e310ad3a5a108b0@"
"r04942099","10","0.089","105200","@b097b5999556eefdd6ca6b94511ff3cb@import java.io.FileReader;
import java.io.BufferedReader;


public class Bingo  {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
           

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] match = new int[num][num];
            int temp1 ;
            int temp2;
            int count = 0;
            
            String[] data1 = br.readLine().split("","");
            for(int i=0;i<stringCount;i++){
                announce[i] = data1[i];
            }
            for(int i=0;i<num;i++){
               String[] data2 =  br.readLine().split("","");
               for(int j=0;j<num;j++){
                   matrix[i][j] = data2[j];
               }
            }
           

            for(int i=0; i<num; i++){
                for(int j=0; j<num; j++){
                    match[i][j] = 0;
                    for(int k=0; k<stringCount; k++){
                        if(matrix[i][j].equals(announce[k])) match[i][j]=1;
                    }
                }
            }
            for(int i=0; i<num; i++){
                temp1 = 1;
                temp2 = 1;
                for(int j=0; j<num;j++){
                    if(match[i][j]==0) temp1 =0;
                    if(match[j][i]==0) temp2 =0;
                }
                count = count + temp1 + temp2;
            }
            temp1 = 1;
            temp2 = 1;
            for(int i=0; i<num; i++){
                if(match[i][i]==0) temp1 = 0;
                if(match[i][num-1-i]==0) temp2 = 0;
            }
            count = count  + temp1 + temp2;
            
            System.out.println(count);

        }
    }
}

@b097b5999556eefdd6ca6b94511ff3cb@"
"b02611023","10","0.078","103968","@66f6b7d2d52209f169cab080a5e91820@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;
            int line1 = 0;
            int line2 = 0;

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            			}
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            			}
            			if(matrix[k][k].equals(announce[m])){
            				dot2 = dot2 + 1;
            			}
            			if(matrix[num-k-1][k].equals(announce[m])){
            				dot3 = dot3 + 1;
            			}
            		}
            	}
            	if(dot == num){
            		line = line + 1;
            		dot = 0;
            	}
        		else{
        			dot = 0;
        		}
        		if(dot1 == num){
        			line = line + 1;
        			dot1 = 0;
        		}
        		else{
        			dot1 = 0;
        		}
        		if(dot2 == num){
        			dot2 = 0;
        			line1 = 1;
        		}
        		else{
        			dot2 = 0;
        		}
        		if(dot3 == num){
        			dot3 = 0;
        			line2 = 1;
        		}
        		else{
        			dot3 = 0;
        		}
            }
            System.out.println(line + line1 + line2);
        }
    }
}

@66f6b7d2d52209f169cab080a5e91820@"
"b02611023","10","0.093","105216","@3d563d118c632b2d9cad8e6db1611148@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int[] line = {0,0,0,0};

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            			}
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            			}
            			if(matrix[k][k].equals(announce[m])){
            				dot2 = dot2 + 1;
            			}
            			if(matrix[num-k-1][k].equals(announce[m])){
            				dot3 = dot3 + 1;
            			}
            		}
            	}
            	if(dot == num){
            		line[0] = line[0] + 1;
            		dot = 0;
            	}
        		else{
        			dot = 0;
        		}
        		if(dot1 == num){
        			line[1] = line[1] + 1;
        			dot1 = 0;
        		}
        		else{
        			dot1 = 0;
        		}
        		if(dot2 == num){
        			line[2] = 1;
        			dot2 = 0;
        		}
        		else{
        			dot2 = 0;
        		}
        		if(dot3 == num){
        			line[3] = 1;
        			dot3 = 0;
        		}
        		else{
        			dot3 = 0;
        		}
            }
            System.out.println(line[0] + line[1] + line[2] + line[3]);
        }
    }
}

@3d563d118c632b2d9cad8e6db1611148@"
"b02611023","10","0.089","106656","@6e4e3f1c4cf70ebcf3e4017f966749b4@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int[] line = {0,0,0,0};

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            			}
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            			}
            		}
            	}
        		if(dot == num){
					line[0] = line[0] + 1;
					dot = 0;
				}
				else{
					dot = 0;
				}
				if(dot1 == num){
					line[1] = line[1] + 1;
					dot1 = 0;
				}
				else{
					dot1 = 0;
				}
            }

            for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][j].equals(announce[m])){
        				dot2 = dot2 + 1;
        			}
        			if(matrix[num-j-1][j].equals(announce[m])){
        				dot3 = dot3 + 1;
        			}
        		}
            	if(dot2 == num){
        			line[2] = 1;
        		}
        		if(dot3 == num){
        			line[3] = 1;
            	}
            }
            System.out.println(line[0] + line[1] + line[2] + line[3]);
        }
    }
}

@6e4e3f1c4cf70ebcf3e4017f966749b4@"
"r03849033","0","0","0","@b90e7c3088651f8a5e9cdf6c050b03dd@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author user
 */
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input1.txt""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
        
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++){
            matrix[i] = br.readLine().split("","");
            }
            
            boolean[][] mat = new boolean[num][num];
            for (int col = 0; col < num; col++){
                for (int row = 0; row < num; row++){
                    mat[row][col]=false;
                    for (int ann = 0; ann < stringCount; ann++){
                       if(matrix[row][col].equals(announce[ann]))
                       mat[row][col]=true;
                    }
                } 
            }            
            
            
            int count=0;
            //check col
            for (int col = 0; col < num; col++){
                int mark = 0;
                for (int row = 0; row < num; row++){
                    if(mat[row][col]==true){ 
                    mark++;}
                }
                if(mark == num)
                count++;
            }
            
            //check row
            for (int row = 0; row < num; row++){
                int mark = 0;
                for (int col = 0; col < num; col++){
                    if(mat[row][col]==true){ 
                    mark++;}
                }
                if(mark == num)
                count++;
            }

             //check dig
            int mark = 0;
            int mark2 = 0;            
            for (int x = 0; x < num; x++){
                if(mat[x][x]==true)
                    mark++;      
                if(mat[x][num-x-1]==true)
                    mark2++;                 
            }
            if(mark == num)
            count++;
            if(mark2 == num)
            count++;   
 
            System.out.println(count);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@b90e7c3088651f8a5e9cdf6c050b03dd@"
"b02611023","10","0.093","105152","@10b149771621ef9f48f3a6eb824d9283@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int[] line = {0,0,0,0};

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            			}
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            			}
            		}
            	}
        		if(dot == num){
					line[0] = line[0] + 1;
					dot = 0;
				}
				if(dot1 == num){
					line[1] = line[1] + 1;
					dot1 = 0;
				}
				else{
					dot = 0;
					dot1 = 0;
				}
            }

            for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][j].equals(announce[m])){
        				dot2 = dot2 + 1;
        			}
        			if(matrix[num-j-1][j].equals(announce[m])){
        				dot3 = dot3 + 1;
        			}
        		}
            }
            if(dot2 == num){
    			line[2] = 1;
    		}
    		if(dot3 == num){
    			line[3] = 1;
        	}
            System.out.println(line[0] + line[1] + line[2] + line[3]);
        }
    }
}

@10b149771621ef9f48f3a6eb824d9283@"
"r03849033","0","0","0","@8fb43552b21ba6715a1520e03f2d1687@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
        
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++){
            matrix[i] = br.readLine().split("","");
            }
            
            boolean[][] mat = new boolean[num][num];
            for (int col = 0; col < num; col++){
                for (int row = 0; row < num; row++){
                    mat[row][col]=false;
                    for (int ann = 0; ann < stringCount; ann++){
                       if(matrix[row][col].equals(announce[ann]))
                       mat[row][col]=true;
                    }
                } 
            }            
            
            
            int count=0;
            //check col
            for (int col = 0; col < num; col++){
                int mark = 0;
                for (int row = 0; row < num; row++){
                    if(mat[row][col]==true){ 
                    mark++;}
                }
                if(mark == num)
                count++;
            }
            
            //check row
            for (int row = 0; row < num; row++){
                int mark = 0;
                for (int col = 0; col < num; col++){
                    if(mat[row][col]==true){ 
                    mark++;}
                }
                if(mark == num)
                count++;
            }

             //check dig
            int mark = 0;
            int mark2 = 0;            
            for (int x = 0; x < num; x++){
                if(mat[x][x]==true)
                    mark++;      
                if(mat[x][num-x-1]==true)
                    mark2++;                 
            }
            if(mark == num)
            count++;
            if(mark2 == num)
            count++;   
            System.out.println(count);
        }
    }
}

@8fb43552b21ba6715a1520e03f2d1687@"
"r03849033","0","0","0","@423c6e8f39f4b5ac31779964641293f6@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
        
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++){
            matrix[i] = br.readLine().split("","");
            }
            
            boolean[][] mat = new boolean[num][num];
            for (int col = 0; col < num; col++){
                for (int row = 0; row < num; row++){
                    mat[row][col]=false;
                    for (int ann = 0; ann < stringCount; ann++){
                       if(matrix[row][col].equals(announce[ann]))
                       mat[row][col]=true;
                    }
                } 
            }            
            
            
            int count=0;
            //check col
            for (int col = 0; col < num; col++){
                int mark = 0;
                for (int row = 0; row < num; row++){
                    if(mat[row][col]==true){ 
                    mark++;}
                }
                if(mark == num)
                count++;
            }
            
            //check row
            for (int row = 0; row < num; row++){
                int mark = 0;
                for (int col = 0; col < num; col++){
                    if(mat[row][col]==true){ 
                    mark++;}
                }
                if(mark == num)
                count++;
            }

             //check dig
            int mark = 0;
            int mark2 = 0;            
            for (int x = 0; x < num; x++){
                if(mat[x][x]==true)
                    mark++;      
                if(mat[x][num-x-1]==true)
                    mark2++;                 
            }
            if(mark == num)
            count++;
            if(mark2 == num)
            count++;   
            System.out.println(count);
        }
    }
}


@423c6e8f39f4b5ac31779964641293f6@"
"r03849033","0","0.093","105152","@a27a766932e8d16079678149a83ef766@   public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
        
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++){
            matrix[i] = br.readLine().split("","");
            }
            
            boolean[][] mat = new boolean[num][num];
            for (int col = 0; col < num; col++){
                for (int row = 0; row < num; row++){
                    mat[row][col]=false;
                    for (int ann = 0; ann < stringCount; ann++){
                       if(matrix[row][col].equals(announce[ann]))
                       mat[row][col]=true;
                    }
                } 
            }            
            
            
            int count=0;
            //check col
            for (int col = 0; col < num; col++){
                int mark = 0;
                for (int row = 0; row < num; row++){
                    if(mat[row][col]==true){ 
                    mark++;}
                }
                if(mark == num)
                count++;
            }
            
            //check row
            for (int row = 0; row < num; row++){
                int mark = 0;
                for (int col = 0; col < num; col++){
                    if(mat[row][col]==true){ 
                    mark++;}
                }
                if(mark == num)
                count++;
            }

             //check dig
            int mark = 0;
            int mark2 = 0;            
            for (int x = 0; x < num; x++){
                if(mat[x][x]==true)
                    mark++;      
                if(mat[x][num-x-1]==true)
                    mark2++;                 
            }
            if(mark == num)
            count++;
            if(mark2 == num)
            count++;   
            System.out.println(count);
        }
    }
@a27a766932e8d16079678149a83ef766@"
"r04921115","3","0.95","106672","@c3c448520b4039065fdb65a9113dde14@import java.io.FileReader;
import java.util.Spliterator;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            int i, j, k;
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            
           	announce = br.readLine().split("","");

//           	System.out.printf(""announce String %s, %s\n"", announce[0], announce[1]);
           	for(i=0; i<num; i++){
           		matrix[i] = br.readLine().split("","");
           	}
           	
//           	for(i=0; i<num; i++){
//           		for(j=0; j<num; j++){
//           			System.out.printf(""%s "", matrix[i][j]);
//           		}
//           		System.out.printf(""\n"");
//           	}
           	
           	for(i=0; i<num; i++){
               	flag = 0;
           		for(j=0; j<num; j++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
           		if(flag==num){
           			row_line++;
           		}
           	}
           	System.out.printf(""%d\n"", row_line);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@c3c448520b4039065fdb65a9113dde14@"
"r04921115","10","0.092","106928","@cd68f1713c2cd8313ad32ef5572829c1@import java.io.FileReader;
import java.util.Spliterator;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            int i, j, k;
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            
           	announce = br.readLine().split("","");

//           	System.out.printf(""announce String %s, %s\n"", announce[0], announce[1]);
           	for(i=0; i<num; i++){
           		matrix[i] = br.readLine().split("","");
           	}
           	
//           	for(i=0; i<num; i++){
//           		for(j=0; j<num; j++){
//           			System.out.printf(""%s "", matrix[i][j]);
//           		}
//           		System.out.printf(""\n"");
//           	}
           	
           	for(i=0; i<num; i++){
               	flag = 0;
           		for(j=0; j<num; j++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
           		if(flag==num){
           			row_line++;
           		}
           	}
           	
           	for(j=0; j<num; j++){
               	flag = 0;
           		for(i=0; i<num; i++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
           		if(flag==num){
           			column_line++;
           		}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		l_diag_line++;
            	}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][num-1-i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		r_diag_line++;
            	}
           	}
           	
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@cd68f1713c2cd8313ad32ef5572829c1@"
"r04921115","0","0.74","103760","@8bf7a759df78761aa3f8fa08c26d1664@import java.io.FileReader;
import java.util.Spliterator;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            int i, j, k;
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            
           	announce = br.readLine().split("","");

//           	System.out.printf(""announce String %s, %s\n"", announce[0], announce[1]);
           	for(i=0; i<num; i++){
           		matrix[i] = br.readLine().split("","");
           	}
           	
//           	for(i=0; i<num; i++){
//           		for(j=0; j<num; j++){
//           			System.out.printf(""%s "", matrix[i][j]);
//           		}
//           		System.out.printf(""\n"");
//           	}
           	
           	for(i=0; i<num; i++){
               	flag = 0;
           		for(j=0; j<num; j++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
       			System.out.printf(""%d %d\n"",flag,num);
       			
       			if(flag > num){
       				flag=num;
       			}
           		if(flag == num){
           			row_line++;
           		}
           	}
           	
           	for(j=0; j<num; j++){
               	flag = 0;
           		for(i=0; i<num; i++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
           		if(flag > num){
       				flag=num;
       			}
           		if(flag==num){
           			column_line++;
           		}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		l_diag_line = l_diag_line+1;
            	}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][num-1-i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		r_diag_line = r_diag_line + 1;
            	}
           	}
           	
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@8bf7a759df78761aa3f8fa08c26d1664@"
"r04921115","10","0.096","106928","@4339e28d2c9c6cc5b26e8fe6d7b9aa4f@import java.io.FileReader;
import java.util.Spliterator;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            int i, j, k;
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            
           	announce = br.readLine().split("","");

//           	System.out.printf(""announce String %s, %s\n"", announce[0], announce[1]);
           	for(i=0; i<num; i++){
           		matrix[i] = br.readLine().split("","");
           	}
           	
//           	for(i=0; i<num; i++){
//           		for(j=0; j<num; j++){
//           			System.out.printf(""%s "", matrix[i][j]);
//           		}
//           		System.out.printf(""\n"");
//           	}
           	
           	for(i=0; i<num; i++){
               	flag = 0;
           		for(j=0; j<num; j++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
       			//System.out.printf(""%d %d\n"",flag,num);
       			
       			if(flag > num){
       				flag=num;
       			}
           		if(flag == num){
           			row_line++;
           		}
           	}
           	
           	for(j=0; j<num; j++){
               	flag = 0;
           		for(i=0; i<num; i++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
           		if(flag > num){
       				flag=num;
       			}
           		if(flag==num){
           			column_line++;
           		}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		l_diag_line = l_diag_line+1;
            	}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][num-1-i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		r_diag_line = r_diag_line + 1;
            	}
           	}
           	
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@4339e28d2c9c6cc5b26e8fe6d7b9aa4f@"
"b02611023","10","0.083","105232","@633279b71c7ce54d852585d9a34e6a46@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int[] line = {0,0,0,0};

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            			}
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            			}
            		}
            	}
        		if(dot == num){
					line[0] = line[0] + 1;
					dot = 0;
				}
				else{
					dot = 0;
				}
				if(dot1 == num){
					line[1] = line[1] + 1;
					dot1 = 0;
				}
				else{
					dot1 = 0;
				}
            }

            for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][j].equals(announce[m])){
        				dot2 = dot2 + 1;
        			}
        			if(matrix[num-j-1][j].equals(announce[m])){
        				dot3 = dot3 + 1;
        			}
        		}
            }
            if(dot2 == num){
    			line[2] = 1;
    		}
    		if(dot3 == num){
    			line[3] = 1;
        	}
            System.out.println(line[0] + line[1] + line[2] + line[3]);
            /*System.out.println(line[0]);
            System.out.println(line[1]);
            System.out.println(line[2]);
            System.out.println(line[3]);*/
        }
    }
}

@633279b71c7ce54d852585d9a34e6a46@"
"r04546032","0","0","0","@038230b456eda684c4cb8d4d76353af7@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""C:\\Users\\user\\Desktop\\Java hw\\hw0\\input.txt""))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int [][] bingo = new int[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
          
            for(int i = 0 ; i < stringCount ; i++)
            {
                announce[i] = line2[i];
            }
            
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = 1;
                }
            }
            
            for(int i = 0; i < stringCount;i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = -1;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == -1)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == -1)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == -1)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == -1)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(""total line is""+""  ""+win);
        }
    }
}

@038230b456eda684c4cb8d4d76353af7@"
"r04546032","0","0","0","@7aec471b040cebf8070d2ec358677776@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int [][] bingo = new int[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
          
            for(int i = 0 ; i < stringCount ; i++)
            {
                announce[i] = line2[i];
            }
            
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = 1;
                }
            }
            
            for(int i = 0; i < stringCount;i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = -1;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == -1)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == -1)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == -1)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == -1)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    }
}

@7aec471b040cebf8070d2ec358677776@"
"r04921115","0","0","0","@d2836d9bccbe7553e8ef1972d428d203@import java.io.FileReader;
import java.util.Spliterator;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            int i, j, k;
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            
           	announce = br.readLine().split("","");

//           	System.out.printf(""announce String %s, %s\n"", announce[0], announce[1]);
           	for(i=0; i<num; i++){
           		matrix[i] = br.readLine().split("","");
           	}
           	
//           	for(i=0; i<num; i++){
//           		for(j=0; j<num; j++){
//           			System.out.printf(""%s "", matrix[i][j]);
//           		}
//           		System.out.printf(""\n"");
//           	}
           	
           	for(i=0; i<num; i++){
               	flag = 0;
           		for(j=0; j<num; j++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
       			//System.out.printf(""%d %d\n"",flag,num);
       			
       			if(flag > num){
       				flag=num;
       			}
           		if(flag == num){
           			row_line++;
           		}
           	}
           	
           	for(j=0; j<num; j++){
               	flag = 0;
           		for(i=0; i<num; i++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
           		if(flag > num){
       				flag=num;
       			}
           		if(flag==num){
           			column_line++;
           		}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		l_diag_line = l_diag_line+1;
            	}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][num-1-i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		r_diag_line = r_diag_line + 1;
            	}
           	}
           	
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}


back return to list
@d2836d9bccbe7553e8ef1972d428d203@"
"r04921115","0","0","0","@b439c81eac15b438a8f67ef60d4e1653@import java.io.FileReader;
import java.util.Spliterator;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            int i, j, k;
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            
           	announce = br.readLine().split("","");

//           	System.out.printf(""announce String %s, %s\n"", announce[0], announce[1]);
           	for(i=0; i<num; i++){
           		matrix[i] = br.readLine().split("","");
           	}
           	
//           	for(i=0; i<num; i++){
//           		for(j=0; j<num; j++){
//           			System.out.printf(""%s "", matrix[i][j]);
//           		}
//           		System.out.printf(""\n"");
//           	}
           	
           	for(i=0; i<num; i++){
               	flag = 0;
           		for(j=0; j<num; j++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
       			//System.out.printf(""%d %d\n"",flag,num);
       			
       			if(flag > num){
       				flag=num;
       			}
           		if(flag == num){
           			row_line++;
           		}
           	}
           	
           	for(j=0; j<num; j++){
               	flag = 0;
           		for(i=0; i<num; i++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
           		if(flag > num){
       				flag=num;
       			}
           		if(flag==num){
           			column_line++;
           		}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		l_diag_line = l_diag_line+1;
            	}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][num-1-i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		r_diag_line = r_diag_line + 1;
            	}
           	}
           	
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@b439c81eac15b438a8f67ef60d4e1653@"
"r04921115","10","0.079","104640","@3bb7381ae57d03cb969cdb65cfc64caa@import java.io.FileReader;
import java.util.Spliterator;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            int i, j, k;
            int total_straight_line = 0;
            int l_diag_line = 0;
            int r_diag_line = 0;
            int row_line = 0;
            int column_line = 0;
            int flag;
            
           	announce = br.readLine().split("","");

//           	System.out.printf(""announce String %s, %s\n"", announce[0], announce[1]);
           	for(i=0; i<num; i++){
           		matrix[i] = br.readLine().split("","");
           	}
           	
//           	for(i=0; i<num; i++){
//           		for(j=0; j<num; j++){
//           			System.out.printf(""%s "", matrix[i][j]);
//           		}
//           		System.out.printf(""\n"");
//           	}
           	
           	for(i=0; i<num; i++){
               	flag = 0;
           		for(j=0; j<num; j++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
       			//System.out.printf(""%d %d\n"",flag,num);
       			
       			if(flag > num){
       				flag=num;
       			}
           		if(flag == num){
           			row_line++;
           		}
           	}
           	
           	for(j=0; j<num; j++){
               	flag = 0;
           		for(i=0; i<num; i++){
           			for(k=0; k<stringCount; k++){
               			if(matrix[i][j].equals(announce[k])){
               				flag++;
               			}
           			}
           		}
           		if(flag > num){
       				flag=num;
       			}
           		if(flag==num){
           			column_line++;
           		}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		l_diag_line = l_diag_line+1;
            	}
           	}
           	
           	flag=0;
           	for(i=0; i<num; i++){
           		for(k=0; k<stringCount; k++){
           			if(matrix[i][num-1-i].equals(announce[k])){
           				flag++;
           			}
       			}
           		if(flag==num){
            		r_diag_line = r_diag_line + 1;
            	}
           	}
           	
            total_straight_line = r_diag_line + l_diag_line + column_line + row_line;
            //System.out.printf(""row:%d /col:%d /l_diag:%d /r_diag:%d /total %d\n"", row_line, column_line, l_diag_line, r_diag_line, total_straight_line);
            System.out.printf(""%d"",total_straight_line);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@3bb7381ae57d03cb969cdb65cfc64caa@"
"b02611023","10","0.091","106384","@633279b71c7ce54d852585d9a34e6a46@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int[] line = {0,0,0,0};

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            			}
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            			}
            		}
            	}
        		if(dot == num){
					line[0] = line[0] + 1;
					dot = 0;
				}
				else{
					dot = 0;
				}
				if(dot1 == num){
					line[1] = line[1] + 1;
					dot1 = 0;
				}
				else{
					dot1 = 0;
				}
            }

            for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][j].equals(announce[m])){
        				dot2 = dot2 + 1;
        			}
        			if(matrix[num-j-1][j].equals(announce[m])){
        				dot3 = dot3 + 1;
        			}
        		}
            }
            if(dot2 == num){
    			line[2] = 1;
    		}
    		if(dot3 == num){
    			line[3] = 1;
        	}
            System.out.println(line[0] + line[1] + line[2] + line[3]);
            /*System.out.println(line[0]);
            System.out.println(line[1]);
            System.out.println(line[2]);
            System.out.println(line[3]);*/
        }
    }
}

@633279b71c7ce54d852585d9a34e6a46@"
"r04631034","0","0","0","@7a114e3f090ee2f140294cfa7c3853e1@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.*;

public class Bingo {

     public static void main(String[] args) throws Exception {

          // read file from args[0] in Java 7 style
//          try (BufferedReader br = new BufferedReader(new FileReader(""C:/Users/user/Desktop/hw0/input.txt""))) {
          try (BufferedReader br = new BufferedReader(new FileReader(""C:/Users/user/Desktop/hw0/input1.txt""))) {
//                         try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

               String[] data = br.readLine().split("","");

               String line;
               String target = """";
    
               while ((line = br.readLine()) != null) {
                    target += "" "" + line;
               }

               String[] numbersArray = target.split("" "");


//            // store the first integer in variable stringCount (number of announced strings)
               int stringCount = Integer.parseInt(data[0]);
//            System.out.println(data.length);
//            // store the second integer in variable num (dimension of matrix: num * num)            
               int num = Integer.parseInt(data[1]);

               String[] announce = new String[stringCount];
               String[][] matrix = new String[num][num];

               String test1 = numbersArray[1];
               String[] test2 = test1.split("","");
               for (int j = 0; j < test2.length; j++) {
                    announce[j] = test2[j];                
               }

               for (int i = 2; i < numbersArray.length; i++) {
                    String test3 = numbersArray[i];
                    String[] test4 = test3.split("","");
                    for (int j = 0; j < test4.length; j++) {
                         matrix[i - 2][j] = test4[j];                        
                    }
               }

               ArrayList<Integer> Column = new ArrayList();
               ArrayList<Integer> Row = new ArrayList();

               for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                         for (int k = 0; k < announce.length; k++) {
                              if (matrix[i][j].equals(announce[k]) == true) {
                                   Column.add(i + 1);
                                   Row.add(j + 1);
                              }
                         }
                    }
               }

               int output = 0;

               for (int j = 0; j < num; j++) {
                    int storage = 0;
                    for (int i = 0; i < Row.size(); i++) {
                         if (Column.get(i) == j + 1) {
                              storage++;
                         }
                    }
                    if (storage == num) {
                         output++;
                    }
               }

               for (int j = 0; j < num; j++) {
                    int storage = 0;
                    for (int i = 0; i < Row.size(); i++) {
                         if (Row.get(i) == j + 1) {
                              storage++;
                         }
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               int storage = 0;
               for (int i = 0; i < Row.size(); i++) {
                    if (Row.get(i) == Column.get(i)) {
                         storage++;
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               storage = 0;
               for (int i = 0; i < Row.size(); i++) {
                    if (Row.get(i) + Column.get(i) == num + 1) {
                         storage++;
                    }
                    if (storage == num) {
                         output++;
                         storage = 0;
                    }
               }
               System.out.println(output);
          }
     }
}




@7a114e3f090ee2f140294cfa7c3853e1@"
"r03849033","10","0.075","103968","@8a2b84f134b533dee959dfc6e68c1851@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
        
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++){
            matrix[i] = br.readLine().split("","");
            }
            
            boolean[][] mat = new boolean[num][num];
            for (int col = 0; col < num; col++){
                for (int row = 0; row < num; row++){
                    mat[row][col]=false;
                    for (int ann = 0; ann < stringCount; ann++){
                       if(matrix[row][col].equals(announce[ann]))
                       mat[row][col]=true;
                    }
                } 
            }            
            
            
            int count=0;
            //check col
            for (int col = 0; col < num; col++){
                int mark = 0;
                for (int row = 0; row < num; row++){
                    if(mat[row][col]==true){ 
                    mark++;}
                }
                if(mark == num)
                count++;
            }
            
            //check row
            for (int row = 0; row < num; row++){
                int mark = 0;
                for (int col = 0; col < num; col++){
                    if(mat[row][col]==true){ 
                    mark++;}
                }
                if(mark == num)
                count++;
            }

             //check dig
            int mark = 0;
            int mark2 = 0;            
            for (int x = 0; x < num; x++){
                if(mat[x][x]==true)
                    mark++;      
                if(mat[x][num-x-1]==true)
                    mark2++;                 
            }
            if(mark == num)
            count++;
            if(mark2 == num)
            count++;   
            System.out.println(count);
        }
    }
}

@8a2b84f134b533dee959dfc6e68c1851@"
"r04546032","6","0.91","105136","@23de14e99f240e60c8c572e9ad7b105f@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int [][] bingo = new int[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
          
            for(int i = 0 ; i < stringCount ; i++)
            {
                announce[i] = line2[i];
            }
            
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = 1;
                }
            }
            
            for(int i = 0; i < stringCount;i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = -1;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == -1)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == -1)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == -1)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == -1)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    }
}

@23de14e99f240e60c8c572e9ad7b105f@"
"r04631034","0","0","0","@fdcb3e3295ce93b0f8ec0c9e23e9fb0e@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

/**
 *
 * @author user
 */

import java.io.FileReader;
import java.io.BufferedReader;
import java.util.*;

public class Bingo {

     public static void main(String[] args) throws Exception {
          
          // read file from args[0] in Java 7 style
//          try (BufferedReader br = new BufferedReader(new FileReader(""C:/Users/user/Desktop/hw0/input.txt""))) {
          try (BufferedReader br = new BufferedReader(new FileReader(""C:/Users/user/Desktop/hw0/input1.txt""))) {
//                         try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

               String[] data = br.readLine().split("","");

               String line;
               String target = """";
    
               while ((line = br.readLine()) != null) {
                    target += "" "" + line;
               }

               String[] numbersArray = target.split("" "");


//            // store the first integer in variable stringCount (number of announced strings)
               int stringCount = Integer.parseInt(data[0]);
//            System.out.println(data.length);
//            // store the second integer in variable num (dimension of matrix: num * num)            
               int num = Integer.parseInt(data[1]);

               String[] announce = new String[stringCount];
               String[][] matrix = new String[num][num];

               String test1 = numbersArray[1];
               String[] test2 = test1.split("","");
               for (int j = 0; j < test2.length; j++) {
                    announce[j] = test2[j];                
               }

               for (int i = 2; i < numbersArray.length; i++) {
                    String test3 = numbersArray[i];
                    String[] test4 = test3.split("","");
                    for (int j = 0; j < test4.length; j++) {
                         matrix[i - 2][j] = test4[j];                        
                    }
               }

               ArrayList<Integer> Column = new ArrayList<Integer>();
               ArrayList<Integer> Row = new ArrayList<Integer>();

               for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                         for (int k = 0; k < announce.length; k++) {
                              if (matrix[i][j].equals(announce[k]) == true) {
                                   Column.add(i + 1);
                                   Row.add(j + 1);
                              }
                         }
                    }
               }

               int output = 0;

               for (int j = 0; j < num; j++) {
                    int storage = 0;
                    for (int i = 0; i < Row.size(); i++) {
                         if (Column.get(i) == j + 1) {
                              storage++;
                         }
                    }
                    if (storage == num) {
                         output++;
                    }
               }

               for (int j = 0; j < num; j++) {
                    int storage = 0;
                    for (int i = 0; i < Row.size(); i++) {
                         if (Row.get(i) == j + 1) {
                              storage++;
                         }
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               int storage = 0;
               for (int i = 0; i < Row.size(); i++) {
                    if (Row.get(i) == Column.get(i)) {
                         storage++;
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               storage = 0;
               for (int i = 0; i < Row.size(); i++) {
                    if (Row.get(i) + Column.get(i) == num + 1) {
                         storage++;
                    }
                    if (storage == num) {
                         output++;
                         storage = 0;
                    }
               }
               System.out.println(output);
          }
     }
}




@fdcb3e3295ce93b0f8ec0c9e23e9fb0e@"
"r04546032","6","0.89","105248","@a7ddd696fa9bca13ed63f957386151c0@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
          
            for(int i = 0 ; i < stringCount ; i++)
            {
                announce[i] = line2[i];
            }
            
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < stringCount;i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    }
}

@a7ddd696fa9bca13ed63f957386151c0@"
"r04546032","6","0.92","106720","@42a344ddb0c370ce55b50bad656a0238@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
              if(stringCount <2)
            {
                stringCount = 2;
            }
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
                if(num <2)
            {
                num = 2;
            }
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
          
            for(int i = 0 ; i < stringCount ; i++)
            {
                announce[i] = line2[i];
            }
            
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < stringCount;i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    }
}

@42a344ddb0c370ce55b50bad656a0238@"
"b02611023","10","0.077","103888","@c2e812be126dddecf70c9b93955511e9@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            			}
            		}
            	}
        		if(dot == num){
					line = line + 1;
					dot = 0;
				}
				else{
					dot = 0;
				}
            }

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            			}
            		}
            	}
				if(dot1 == num){
					line = line + 1;
					dot1 = 0;
				}
				else{
					dot1 = 0;
				}
            }

            for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][j].equals(announce[m])){
        				dot2 = dot2 + 1;
        			}
        		}
            }
            if(dot2 == num){
    			line = line + 1;
    		}

        	for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[num-j-1][j].equals(announce[m])){
        				dot3 = dot3 + 1;
        			}
        		}
            }
    		if(dot3 == num){
    			line = line + 1;
        	}

            System.out.println(line);
            /*System.out.println(line[0]);
            System.out.println(line[1]);
            System.out.println(line[2]);
            System.out.println(line[3]);*/
        }
    }
}

@c2e812be126dddecf70c9b93955511e9@"
"r04546032","6","0.91","105328","@81548a4785c74fc061d2ec0fa6cc8803@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
              if(stringCount <2)
            {
                stringCount = 2;
            }
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            if(num <2)
            {
                num = 2;
            }
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
          
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < stringCount;i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    }
}

@81548a4785c74fc061d2ec0fa6cc8803@"
"r04546032","6","0.93","106704","@b0e250ca156a8fb481e916567846a86a@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
              if(stringCount <2)
            {
                stringCount = 2;
            }
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            if(num <2)
            {
                num = 2;
            }
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    }
}

@b0e250ca156a8fb481e916567846a86a@"
"r04546032","6","0.72","103552","@92b81a5364adb669a91ed4af70ffb0ac@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
           
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    }
}

@92b81a5364adb669a91ed4af70ffb0ac@"
"b03611035","8","0.95","106704","@26ec41a2fb8347cd0f6d116185b63a65@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    @SuppressWarnings(""empty-statement"")
    public static void main(String[] args) throws Exception {
 // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            //讀要殺的國家(第二行)存入killcountry
            String[] killcountry;
            killcountry = br.readLine().split("","");
            //要殺的國家數(字元)存成整數
            int stringCount = Integer.parseInt(data[0]);
            //幾階的國家(字元)存成整數      
            int num = Integer.parseInt(data[1]);
            
            //做出存賓果的二維陣列(ccr為currentcountry的縮寫)
            String[][] ccr=new String[num][num];
            int i;
            for (i=0; i<num;i++){
            ccr[i] = br.readLine().split("","");
            }

            //死去的國家都存0
            for (i=0; i<num;i++){
                for(int j=0;j<num;j++){
                    for(int k=0;k<stringCount;k++){                        
                         if(ccr[i][j].equals(killcountry[k]))
                             ccr[i][j]=""0"";
                         }                 
                  }
            }
            
            //開始檢查，設計數器
            int count;
            count = 0;
            
            //檢查橫排        
            for(i=0;i<num;i++){ 
                    for(int j=0;j<num;j++){
                        if(!ccr[i][j].equals(""0"")){
                                break;
                            }
                        else if(j==num-1)
                            count++;
                     }
                }            
            
            //檢查直排            
            for(int j=0;j<num;j++){
                for(i=0;i<num;i++){
                    if(!ccr[i][j].equals(""0"")){
                        break;
                    }
                    else if(i==num-1)
                        count++;
                }                               
             }
            
             //檢查對角線 1
              for(i=0;i<num;i++){
                  if(!ccr[i][i].equals(""0"")){
                      break;
                  }
                  else if(i==num-1)
                      count++;                  
              }
              
              //檢查對角線 2
              for(i=num-1;i>0;i--){
                  if(!ccr[i][i].equals(""0"")){
                      break;
                  }
                  else if(i==0)
                      count++;                  
              }
              
              System.out.println(count);
        }          
    }                      
}
@26ec41a2fb8347cd0f6d116185b63a65@"
"r04631004","0","0.93","106704","@c5b0d31f1a313dc77869df11c353fd9a@package javaapplication2;

import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class JavaApplication2 {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
                                 
            data = br.readLine().split("",""); //read second line
            
            int i,j,k;
            for(i=0;i<data.length;i++)  //bingo announce
                announce[i]=data[i];    
            
            int[][] bingocheck = new int[num][num];
            
            int tempcount=1;
            for(i=0;i<num;i++)   //bingo element
                for(j=0;j<num;j++)
                {
                    if(i!=tempcount)
                    {
                        data = br.readLine().split("","");  //read bingo element
                        tempcount=i;
                    }
                    matrix[i][j]=data[j];
                    //System.out.println(data.length);
                    for(k=0;k<stringCount;k++)
                        if(matrix[i][j].equals(announce[k])==true)
                        {
                            bingocheck[i][j]=1;
                            break;
                        }
                            
                    if(j==num-1)
                        System.out.println(bingocheck[i][j]);
                    else
                        System.out.print(bingocheck[i][j]+"" "");
                }
            
            int tempnum=num;
            int bingoline=2*num+2;
            int rowlinecheck=0,collinecheck=0,rightdialinecheck=0,leftdialinecheck=0;
            for(i=0;i<num;i++)   //check num of bingoline
                for(j=0;j<num;j++)
                {
                    if(bingocheck[i][j]!=1 && rowlinecheck==0)  //check rowline
                    {
                        bingoline=bingoline-1;
                        rowlinecheck=1;
                    }
                    if(bingocheck[j][i]!=1 && collinecheck==0)  //check colline
                    {
                        bingoline=bingoline-1;
                        collinecheck=1;
                    }
                    if(i==j && bingocheck[j][i]!=1 && rightdialinecheck==0)  //check right-dialine
                    {
                        bingoline=bingoline-1;
                        rightdialinecheck=1;
                    }
                    if(i+j==num-1 && (bingocheck[j][i]!=1 || bingocheck[i][j]!=1) && leftdialinecheck==0)  //check left-dialine
                    {
                        bingoline=bingoline-1;
                        leftdialinecheck=1;
                    }
                    if(j==num-1)
                    {
                        rowlinecheck=0;
                        collinecheck=0;
                    }
                }
            System.out.printf(""Number of straight line: %d%n"",bingoline);
           
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@c5b0d31f1a313dc77869df11c353fd9a@"
"r04631004","0","0","0","@7dd1a8e9380525081c7007c1fa6ff2fc@package javaapplication2;

import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
                                 
            data = br.readLine().split("",""); //read second line
            
            int i,j,k;
            for(i=0;i<data.length;i++)  //bingo announce
                announce[i]=data[i];    
            
            int[][] bingocheck = new int[num][num];
            
            int tempcount=1;
            for(i=0;i<num;i++)   //bingo element
                for(j=0;j<num;j++)
                {
                    if(i!=tempcount)
                    {
                        data = br.readLine().split("","");  //read bingo element
                        tempcount=i;
                    }
                    matrix[i][j]=data[j];
                    //System.out.println(data.length);
                    for(k=0;k<stringCount;k++)
                        if(matrix[i][j].equals(announce[k])==true)
                        {
                            bingocheck[i][j]=1;
                            break;
                        }
                            
                    if(j==num-1)
                        System.out.println(bingocheck[i][j]);
                    else
                        System.out.print(bingocheck[i][j]+"" "");
                }
            
            int tempnum=num;
            int bingoline=2*num+2;
            int rowlinecheck=0,collinecheck=0,rightdialinecheck=0,leftdialinecheck=0;
            for(i=0;i<num;i++)   //check num of bingoline
                for(j=0;j<num;j++)
                {
                    if(bingocheck[i][j]!=1 && rowlinecheck==0)  //check rowline
                    {
                        bingoline=bingoline-1;
                        rowlinecheck=1;
                    }
                    if(bingocheck[j][i]!=1 && collinecheck==0)  //check colline
                    {
                        bingoline=bingoline-1;
                        collinecheck=1;
                    }
                    if(i==j && bingocheck[j][i]!=1 && rightdialinecheck==0)  //check right-dialine
                    {
                        bingoline=bingoline-1;
                        rightdialinecheck=1;
                    }
                    if(i+j==num-1 && (bingocheck[j][i]!=1 || bingocheck[i][j]!=1) && leftdialinecheck==0)  //check left-dialine
                    {
                        bingoline=bingoline-1;
                        leftdialinecheck=1;
                    }
                    if(j==num-1)
                    {
                        rowlinecheck=0;
                        collinecheck=0;
                    }
                }
            System.out.printf(""Number of straight line: %d%n"",bingoline);
           
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@7dd1a8e9380525081c7007c1fa6ff2fc@"
"r04631004","0","0","0","@f111fe24078e6885cca0e131b339a90d@package javaapplication2;

import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
          //  System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
                                 
            data = br.readLine().split("",""); //read second line
            
            int i,j,k;
            for(i=0;i<data.length;i++)  //bingo announce
                announce[i]=data[i];    
            
            int[][] bingocheck = new int[num][num];
            
            int tempcount=1;
            for(i=0;i<num;i++)   //bingo element
                for(j=0;j<num;j++)
                {
                    if(i!=tempcount)
                    {
                        data = br.readLine().split("","");  //read bingo element
                        tempcount=i;
                    }
                    matrix[i][j]=data[j];
                    //System.out.println(data.length);
                    for(k=0;k<stringCount;k++)
                        if(matrix[i][j].equals(announce[k])==true)
                        {
                            bingocheck[i][j]=1;
                            break;
                        }
                            
//                    if(j==num-1)
//                        System.out.println(bingocheck[i][j]);
//                    else
//                        System.out.print(bingocheck[i][j]+"" "");
                }
            
            int tempnum=num;
            int bingoline=2*num+2;
            int rowlinecheck=0,collinecheck=0,rightdialinecheck=0,leftdialinecheck=0;
            for(i=0;i<num;i++)   //check num of bingoline
                for(j=0;j<num;j++)
                {
                    if(bingocheck[i][j]!=1 && rowlinecheck==0)  //check rowline
                    {
                        bingoline=bingoline-1;
                        rowlinecheck=1;
                    }
                    if(bingocheck[j][i]!=1 && collinecheck==0)  //check colline
                    {
                        bingoline=bingoline-1;
                        collinecheck=1;
                    }
                    if(i==j && bingocheck[j][i]!=1 && rightdialinecheck==0)  //check right-dialine
                    {
                        bingoline=bingoline-1;
                        rightdialinecheck=1;
                    }
                    if(i+j==num-1 && (bingocheck[j][i]!=1 || bingocheck[i][j]!=1) && leftdialinecheck==0)  //check left-dialine
                    {
                        bingoline=bingoline-1;
                        leftdialinecheck=1;
                    }
                    if(j==num-1)
                    {
                        rowlinecheck=0;
                        collinecheck=0;
                    }
                }
            System.out.println(bingoline);
           
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@f111fe24078e6885cca0e131b339a90d@"
"r04631004","9","0.77","105200","@27b6020d2f5bed0019d90312ae639a45@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
          //  System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
                                 
            data = br.readLine().split("",""); //read second line
            
            int i,j,k;
            for(i=0;i<data.length;i++)  //bingo announce
                announce[i]=data[i];    
            
            int[][] bingocheck = new int[num][num];
            
            int tempcount=1;
            for(i=0;i<num;i++)   //bingo element
                for(j=0;j<num;j++)
                {
                    if(i!=tempcount)
                    {
                        data = br.readLine().split("","");  //read bingo element
                        tempcount=i;
                    }
                    matrix[i][j]=data[j];
                    //System.out.println(data.length);
                    for(k=0;k<stringCount;k++)
                        if(matrix[i][j].equals(announce[k])==true)
                        {
                            bingocheck[i][j]=1;
                            break;
                        }
                            
//                    if(j==num-1)
//                        System.out.println(bingocheck[i][j]);
//                    else
//                        System.out.print(bingocheck[i][j]+"" "");
                }
            
            int tempnum=num;
            int bingoline=2*num+2;
            int rowlinecheck=0,collinecheck=0,rightdialinecheck=0,leftdialinecheck=0;
            for(i=0;i<num;i++)   //check num of bingoline
                for(j=0;j<num;j++)
                {
                    if(bingocheck[i][j]!=1 && rowlinecheck==0)  //check rowline
                    {
                        bingoline=bingoline-1;
                        rowlinecheck=1;
                    }
                    if(bingocheck[j][i]!=1 && collinecheck==0)  //check colline
                    {
                        bingoline=bingoline-1;
                        collinecheck=1;
                    }
                    if(i==j && bingocheck[j][i]!=1 && rightdialinecheck==0)  //check right-dialine
                    {
                        bingoline=bingoline-1;
                        rightdialinecheck=1;
                    }
                    if(i+j==num-1 && (bingocheck[j][i]!=1 || bingocheck[i][j]!=1) && leftdialinecheck==0)  //check left-dialine
                    {
                        bingoline=bingoline-1;
                        leftdialinecheck=1;
                    }
                    if(j==num-1)
                    {
                        rowlinecheck=0;
                        collinecheck=0;
                    }
                }
            System.out.println(bingoline);
           
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@27b6020d2f5bed0019d90312ae639a45@"
"b02611023","10","0.081","103968","@8dfb68713df9b7028109f9dddf8ee701@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            			}
            		}
            	}
        		if(dot == num){
					line = line + 1;
					dot = 0;
				}
				else{
					dot = 0;
				}
            }

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            			}
            		}
            	}
				if(dot1 == num){
					line = line + 1;
					dot1 = 0;
				}
				else{
					dot1 = 0;
				}
            }

            for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][j].equals(announce[m])){
        				dot2 = dot2 + 1;
        			}
        		}
            }
            if(dot2 == num){
    			line = line + 1;
    		}

        	for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][num-j-1].equals(announce[m])){
        				dot3 = dot3 + 1;
        			}
        		}
            }
    		if(dot3 == num){
    			line = line + 1;
        	}

            System.out.println(line);
        }
    }
}

@8dfb68713df9b7028109f9dddf8ee701@"
"b02611023","3","0.84","105216","@d867881802765f29de23d8d6c9b21332@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            			}
            			else{
            				dot = 0;
            			}
            		}
            	}
        		if(dot == num){
					line = line + 1;
					dot = 0;
				}
				else{
					dot = 0;
				}
            }

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            			}
            			else{
            				dot1 = 0;
            			}
            		}
            	}
				if(dot1 == num){
					line = line + 1;
					dot1 = 0;
				}
				else{
					dot1 = 0;
				}
            }

            for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][j].equals(announce[m])){
        				dot2 = dot2 + 1;
        			}
        			else{
        				dot2 = 0;
        			}
        		}
            }
            if(dot2 == num){
    			line = line + 1;
    		}

        	for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][num-j-1].equals(announce[m])){
        				dot3 = dot3 + 1;
        			}
        			else{
        				dot3 = 0;
        			}
        		}
            }
    		if(dot3 == num){
    			line = line + 1;
        	}

            System.out.println(line);
        }
    }
}

@d867881802765f29de23d8d6c9b21332@"
"b02611023","10","0.075","104528","@bdb56a2199a39fc7c5863930233c1af6@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            			}
            			else{
            				continue;
            			}
            		}
            	}
        		if(dot == num){
					line = line + 1;
					dot = 0;
				}
				else{
					dot = 0;
				}
            }

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            			}
            			else{
            				continue;
            			}
            		}
            	}
				if(dot1 == num){
					line = line + 1;
					dot1 = 0;
				}
				else{
					dot1 = 0;
				}
            }

            for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][j].equals(announce[m])){
        				dot2 = dot2 + 1;
        			}
        			else{
        				continue;
        			}
        		}
            }
            if(dot2 == num){
    			line = line + 1;
    		}

        	for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][num-j-1].equals(announce[m])){
        				dot3 = dot3 + 1;
        			}
        			else{
        				continue;
        			}
        		}
            }
    		if(dot3 == num){
    			line = line + 1;
        	}

            System.out.println(line);
        }
    }
}

@bdb56a2199a39fc7c5863930233c1af6@"
"b02611023","10","0.087","105168","@99d477800cd3f1812b6c927216b26088@import java.io.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String [] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");

            String[][] matrix = new String[num][num];
            for(int i = 0; i < num; i ++){
            	matrix[i] = br.readLine().split("","");
            }

            int dot = 0;
            int dot1 = 0;
            int dot2 = 0;
            int dot3 = 0;
            int line = 0;

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[j][k].equals(announce[m])){
            				dot = dot + 1;
            				break;
            			}
            		}
            	}
        		if(dot == num){
					line = line + 1;
					dot = 0;
				}
				else{
					dot = 0;
				}
            }

            for(int j = 0; j < num; j ++){
            	for(int k = 0; k < num; k ++){
            		for(int m = 0; m < stringCount; m ++){
            			if(matrix[k][j].equals(announce[m])){
            				dot1 = dot1 + 1;
            				break;
            			}
            		}
            	}
				if(dot1 == num){
					line = line + 1;
					dot1 = 0;
				}
				else{
					dot1 = 0;
				}
            }

            for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][j].equals(announce[m])){
        				dot2 = dot2 + 1;
        				break;
        			}
        		}
            }
            if(dot2 == num){
    			line = line + 1;
    		}

        	for(int j = 0; j < num; j ++){
        		for(int m = 0; m < stringCount; m ++){
        			if(matrix[j][num-j-1].equals(announce[m])){
        				dot3 = dot3 + 1;
        				break;
        			}
        		}
            }
    		if(dot3 == num){
    			line = line + 1;
        	}

            System.out.println(line);
        }
    }
}

@99d477800cd3f1812b6c927216b26088@"
"r04228002","0","0","0","@71dd88f17409902ef766abc746e60611@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
/**
 *
 * @author Lenovo
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        // TODO code application logic here
        FileReader fr = new FileReader(args[0]);
        BufferedReader br = new BufferedReader(fr);
        String[] data = br.readLine().split("","");
        
        int stringCount = Integer.parseInt(data[0]);
        int num = Integer.parseInt(data[1]);
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
        
        //System.out.println(Arrays.deepToString(matrix));
        System.out.println(Arrays.toString(data));
        announce[0]=data[2];
        announce[1]=data[3];
        for (int i = 0; i < 3; i++){
            for (int j = 0; j < 3; j++){
            matrix[i][j] = data[i*3+j+4];
        }
        }
        System.out.println(Arrays.toString(announce));
        System.out.println(Arrays.deepToString(matrix));
        
        int OutNum = 0;
        for (int i = 0; i < 3; i++){
            String S0 = matrix[i][0];
            String S1 = matrix[i][1];
            String S2 = matrix[i][2];
            if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
                  OutNum=OutNum+1;
                    }
            else {
                continue;
                }
        }
        for (int i = 0; i < 3; i++){
            String S0 = matrix[0][i];
            String S1 = matrix[1][i];
            String S2 = matrix[2][i];
            if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
                  OutNum=OutNum+1;
                    }
            else {
                continue;
                }
        }
        String S00 = matrix[0][0];
        String S11 = matrix[1][1];
        String S22 = matrix[2][2];
        if (Arrays.asList(announce).contains(S00) & Arrays.asList(announce).contains(S11) & Arrays.asList(announce).contains(S22)){
            OutNum = OutNum+1;
        }
        String S0 = matrix[0][2];
        String S1 = matrix[1][1];
        String S2 = matrix[2][0];
        if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
            OutNum = OutNum+1;
        }
        System.out.println(OutNum);
} 
}
        
    
    




@71dd88f17409902ef766abc746e60611@"
"b03611035","8","0.86","105216","@4fbc63c62a0cc8879ba47928adb37618@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    @SuppressWarnings(""empty-statement"")
    public static void main(String[] args) throws Exception {
 // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            //讀要殺的國家(第二行)存入killcountry
            String[] killcountry;
            killcountry = br.readLine().split("","");
            //要殺的國家數(字元)存成整數
            int stringCount = Integer.parseInt(data[0]);
            //幾階的國家(字元)存成整數      
            int num = Integer.parseInt(data[1]);
            
            //做出存賓果的二維陣列(ccr為currentcountry的縮寫)
            String[][] ccr=new String[num][num];
            int i;
            for (i=0; i<num;i++){
            ccr[i] = br.readLine().split("","");
            }

            //死去的國家都存0
            for (i=0; i<num;i++){
                for(int j=0;j<num;j++){
                    for(int k=0;k<stringCount;k++){                        
                         if(ccr[i][j].equals(killcountry[k]))
                             ccr[i][j]=""0"";
                         }                 
                  }
            }
            
            //開始檢查，設計數器
            int count;
            count = 0;
            
            //檢查橫排        
            for(i=0;i<num;i++){ 
                    for(int j=0;j<num;j++){
                        if(!ccr[i][j].equals(""0"")){
                                break;
                            }
                        else if(j==num-1)
                            count++;
                     }
                }            
            
            //檢查直排            
            for(int j=0;j<num;j++){
                for(i=0;i<num;i++){
                    if(!ccr[i][j].equals(""0"")){
                        break;
                    }
                    else if(i==num-1)
                        count++;
                }                               
             }
            
             //檢查對角線 1
              for(i=0;i<num;i++){
                  if(!ccr[i][i].equals(""0"")){
                      break;
                  }
                  else if(i==num-1)
                      count++;                  
              }
              
              //檢查對角線 2
              int x;
              for(i=num-1;i>0;i--){
                  x=num-i-1;
                  if(!ccr[x][i].equals(""0"")){
                      break;
                  }
                  else if(i==1)
                      count++;                  
              }
              
              System.out.println(count);
        }          
    }                      
}
@4fbc63c62a0cc8879ba47928adb37618@"
"b03611035","10","0.074","104704","@172ef5fa32864ffb19c74edc54262cc7@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    @SuppressWarnings(""empty-statement"")
    public static void main(String[] args) throws Exception {
 // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            //讀要殺的國家(第二行)存入killcountry
            String[] killcountry;
            killcountry = br.readLine().split("","");
            //要殺的國家數(字元)存成整數
            int stringCount = Integer.parseInt(data[0]);
            //幾階的國家(字元)存成整數      
            int num = Integer.parseInt(data[1]);
            
            //做出存賓果的二維陣列(ccr為currentcountry的縮寫)
            String[][] ccr=new String[num][num];
            int i;
            for (i=0; i<num;i++){
            ccr[i] = br.readLine().split("","");
            }

            //死去的國家都存0
            for (i=0; i<num;i++){
                for(int j=0;j<num;j++){
                    for(int k=0;k<stringCount;k++){                        
                         if(ccr[i][j].equals(killcountry[k]))
                             ccr[i][j]=""0"";
                         }                 
                  }
            }
            
            //開始檢查，設計數器
            int count;
            count = 0;
            
            //檢查橫排        
            for(i=0;i<num;i++){ 
                    for(int j=0;j<num;j++){
                        if(!ccr[i][j].equals(""0"")){
                                break;
                            }
                        else if(j==num-1)
                            count++;
                     }
                }            
            
            //檢查直排            
            for(int j=0;j<num;j++){
                for(i=0;i<num;i++){
                    if(!ccr[i][j].equals(""0"")){
                        break;
                    }
                    else if(i==num-1)
                        count++;
                }                               
             }
            
             //檢查對角線 1
              for(i=0;i<num;i++){
                  if(!ccr[i][i].equals(""0"")){
                      break;
                  }
                  else if(i==num-1)
                      count++;                  
              }
              
              //檢查對角線 2
              int x;
              for(i=num-1;i>=0;i--){
                  x=num-i-1;
                  if(!ccr[x][i].equals(""0"")){
                      break;
                  }
                  else if(i==0)
                      count++;                  
              }
              
              System.out.println(count);
        }          
    }                      
}
@172ef5fa32864ffb19c74edc54262cc7@"
"r04631026","0","0.92","105456","@eb357d97c48aeba68fe88adfd0b624d0@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            announce = br.readLine().split("","");
            announce[stringCount-1] = announce[stringCount-1].trim();
            //store matrix parameters
            String[] Temp = {"""","""",""""};
            for (int i=0;i<num;i++){
                Temp = br.readLine().split("","");
                for(int j=0;j<num;j++){
                    matrix[i][j] = Temp[j].trim();
                }                
            }
            //count the bingo line
            int BingoNumber = 0;
            //check bingo or not
            int BingoTemp = 0;
            //bingo meet the announce
            boolean BingoCheck = false;
            //check column bingo
            for (int i = 0;i<num;i++){
                for (int j = 0;j<num;j++){
                    for (int k=0;k<stringCount;k++){
                        if ((matrix[i][j]).equals((announce[k].trim()))){
                            BingoCheck = true;
                        }
                    }
                    if (BingoCheck){
                        BingoTemp++;
                        BingoCheck=false;
                    }
                    else{BingoCheck=false;}
                }
                if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
                else {BingoTemp = 0;}
            }
            //check row bingo            
            for (int i = 0;i<num;i++){
                for (int j = 0;j<num;j++){
                    for (int k=0;k<stringCount;k++){
                        if ((matrix[j][i]).equals((announce[k].trim()))){
                            BingoCheck = true;
                        }
                    }
                    if (BingoCheck){
                        BingoTemp++;
                        BingoCheck=false;
                    }
                    else{BingoCheck=false;}
                }
                if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
                else {BingoTemp = 0;}
            }
            //check Main diagonal
            for (int i=0;i<num;i++){
                for(int j=0;j<stringCount;j++){
                    if ((matrix[i][i]).equals(announce[j].trim())){
                        BingoCheck = true;
                    }
                }
                if (BingoCheck){
                    BingoTemp++;
                    BingoCheck = false;
                }
                else{BingoCheck = false;}
            }
            if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
            else {BingoTemp = 0;}
            //check Secondary diagonal
            for (int i=0;i<num;i++){
                for(int j=0;j<stringCount;j++){
                    if ((matrix[i][num-i-1]).equals(announce[j].trim())){
                        BingoCheck = true;
                    }
                }
                if (BingoCheck){
                    BingoTemp++;
                    BingoCheck = false;
                }
                else{BingoCheck = false;}
            }
            if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
            else {BingoTemp = 0;}
            StdOut.println(BingoNumber);
            BingoTemp = 0;
            
//            StdOut.println(BingoTemp);
//            for (int i=0; i<num; i++){
//                for (int j=0; j<num;j++){
//                    System.out.print(matrix[i][j] + "" "");                  
//                }
//            }
//            StdOut.println(matrix);
//            String[] test = br.readLine().split("","");
//            StdOut.println(test);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@eb357d97c48aeba68fe88adfd0b624d0@"
"r04631026","0","0.78","103776","@f1ef399d7946b8be4f939803b9545b1b@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            announce = br.readLine().split("","");
            announce[stringCount-1] = announce[stringCount-1].trim();
            //store matrix parameters
            String[] Temp = {"""","""",""""};
            for (int i=0;i<num;i++){
                Temp = br.readLine().split("","");
                for(int j=0;j<num;j++){
                    matrix[i][j] = Temp[j].trim();
                }                
            }
            //count the bingo line
            int BingoNumber = 0;
            //check bingo or not
            int BingoTemp = 0;
            //bingo meet the announce
            boolean BingoCheck = false;
            //check column bingo
            for (int i = 0;i<num;i++){
                for (int j = 0;j<num;j++){
                    for (int k=0;k<stringCount;k++){
                        if ((matrix[i][j]).equals((announce[k].trim()))){
                            BingoCheck = true;
                        }
                    }
                    if (BingoCheck){
                        BingoTemp++;
                        BingoCheck=false;
                    }
                    else{BingoCheck=false;}
                }
                if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
                else {BingoTemp = 0;}
            }
            //check row bingo            
            for (int i = 0;i<num;i++){
                for (int j = 0;j<num;j++){
                    for (int k=0;k<stringCount;k++){
                        if ((matrix[j][i]).equals((announce[k].trim()))){
                            BingoCheck = true;
                        }
                    }
                    if (BingoCheck){
                        BingoTemp++;
                        BingoCheck=false;
                    }
                    else{BingoCheck=false;}
                }
                if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
                else {BingoTemp = 0;}
            }
            //check Main diagonal
            for (int i=0;i<num;i++){
                for(int j=0;j<stringCount;j++){
                    if ((matrix[i][i]).equals(announce[j].trim())){
                        BingoCheck = true;
                    }
                }
                if (BingoCheck){
                    BingoTemp++;
                    BingoCheck = false;
                }
                else{BingoCheck = false;}
            }
            if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
            else {BingoTemp = 0;}
            //check Secondary diagonal
            for (int i=0;i<num;i++){
                for(int j=0;j<stringCount;j++){
                    if ((matrix[i][num-i-1]).equals(announce[j].trim())){
                        BingoCheck = true;
                    }
                }
                if (BingoCheck){
                    BingoTemp++;
                    BingoCheck = false;
                }
                else{BingoCheck = false;}
            }
            if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
            else {BingoTemp = 0;}
            System.out.printf(""number of bingo strings: %d\n"",BingoNumber);
            
//            StdOut.println(BingoTemp);
//            for (int i=0; i<num; i++){
//                for (int j=0; j<num;j++){
//                    System.out.print(matrix[i][j] + "" "");                  
//                }
//            }
//            StdOut.println(matrix);
//            String[] test = br.readLine().split("","");
//            StdOut.println(test);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@f1ef399d7946b8be4f939803b9545b1b@"
"r04945025","0","0.95","105728","@17730534f71bb91969544ba4b81b594f@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            announce = br.readLine().split("","");
            announce[stringCount-1] = announce[stringCount-1].trim();
            //store matrix parameters
            String[] Temp = {"""","""",""""};
            for (int i=0;i<num;i++){
                Temp = br.readLine().split("","");
                for(int j=0;j<num;j++){
                    matrix[i][j] = Temp[j].trim();
                }                
            }
            //count the bingo line
            int BingoNumber = 0;
            //check bingo or not
            int BingoTemp = 0;
            //bingo meet the announce
            boolean BingoCheck = false;
            //check column bingo
            for (int i = 0;i<num;i++){
                for (int j = 0;j<num;j++){
                    for (int k=0;k<stringCount;k++){
                        if ((matrix[i][j]).equals((announce[k].trim()))){
                            BingoCheck = true;
                        }
                    }
                    if (BingoCheck){
                        BingoTemp++;
                        BingoCheck=false;
                    }
                    else{BingoCheck=false;}
                }
                if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
                else {BingoTemp = 0;}
            }
            //check row bingo            
            for (int i = 0;i<num;i++){
                for (int j = 0;j<num;j++){
                    for (int k=0;k<stringCount;k++){
                        if ((matrix[j][i]).equals((announce[k].trim()))){
                            BingoCheck = true;
                        }
                    }
                    if (BingoCheck){
                        BingoTemp++;
                        BingoCheck=false;
                    }
                    else{BingoCheck=false;}
                }
                if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
                else {BingoTemp = 0;}
            }
            //check Main diagonal
            for (int i=0;i<num;i++){
                for(int j=0;j<stringCount;j++){
                    if ((matrix[i][i]).equals(announce[j].trim())){
                        BingoCheck = true;
                    }
                }
                if (BingoCheck){
                    BingoTemp++;
                    BingoCheck = false;
                }
                else{BingoCheck = false;}
            }
            if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
            else {BingoTemp = 0;}
            //check Secondary diagonal
            for (int i=0;i<num;i++){
                for(int j=0;j<stringCount;j++){
                    if ((matrix[i][num-i-1]).equals(announce[j].trim())){
                        BingoCheck = true;
                    }
                }
                if (BingoCheck){
                    BingoTemp++;
                    BingoCheck = false;
                }
                else{BingoCheck = false;}
            }
            if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
            else {BingoTemp = 0;}
            StdOut.println(BingoNumber);
            BingoTemp = 0;
            
//            StdOut.println(BingoTemp);
//            for (int i=0; i<num; i++){
//                for (int j=0; j<num;j++){
//                    System.out.print(matrix[i][j] + "" "");                  
//                }
//            }
//            StdOut.println(matrix);
//            String[] test = br.readLine().split("","");
//            StdOut.println(test);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@17730534f71bb91969544ba4b81b594f@"
"r04631026","10","0.07","104400","@2ed9256bdc496018e4e1f29336424421@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){            
            // read a line and split by ','
            String[] data = br.readLine().split("","");            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            announce = br.readLine().split("","");
            announce[stringCount-1] = announce[stringCount-1].trim();
            //store matrix parameters
            String[] Temp = {"""","""",""""};
            for (int i=0;i<num;i++){
                Temp = br.readLine().split("","");
                for(int j=0;j<num;j++){
                    matrix[i][j] = Temp[j].trim();
                }                
            }
            //count the bingo line
            int BingoNumber = 0;
            //check bingo or not
            int BingoTemp = 0;
            //bingo meet the announce
            boolean BingoCheck = false;
            //check column bingo
            for (int i = 0;i<num;i++){
                for (int j = 0;j<num;j++){
                    for (int k=0;k<stringCount;k++){
                        if ((matrix[i][j]).equals((announce[k].trim()))){
                            BingoCheck = true;
                        }
                    }
                    if (BingoCheck){
                        BingoTemp++;
                        BingoCheck=false;
                    }
                    else{BingoCheck=false;
                    }
                }
                if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
                else {BingoTemp = 0;
                }
            }
            //check row bingo            
            for (int i = 0;i<num;i++){
                for (int j = 0;j<num;j++){
                    for (int k=0;k<stringCount;k++){
                        if ((matrix[j][i]).equals((announce[k].trim()))){
                            BingoCheck = true;
                        }
                    }
                    if (BingoCheck){
                        BingoTemp++;
                        BingoCheck=false;
                    }
                    else{BingoCheck=false;
                    }
                }
                if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
                else {BingoTemp = 0;
                }
            }
            //check Main diagonal
            for (int i=0;i<num;i++){
                for(int j=0;j<stringCount;j++){
                    if ((matrix[i][i]).equals(announce[j].trim())){
                        BingoCheck = true;
                    }
                }
                if (BingoCheck){
                    BingoTemp++;
                    BingoCheck = false;
                }
                else{BingoCheck = false;
                }
            }
            if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;}
            else {BingoTemp = 0;
            }
            //check Secondary diagonal
            for (int i=0;i<num;i++){
                for(int j=0;j<stringCount;j++){
                    if ((matrix[i][num-i-1]).equals(announce[j].trim())){
                        BingoCheck = true;
                    }
                }
                if (BingoCheck){
                    BingoTemp++;
                    BingoCheck = false;
                }
                else{BingoCheck = false;
                }
            }
            if(BingoTemp==num){BingoNumber +=1 ;BingoTemp = 0;
            }
            else {BingoTemp = 0;
            }
            System.out.printf(""%d\n"",BingoNumber);
        }
    }
}
@2ed9256bdc496018e4e1f29336424421@"
"r04921104","0","0","0","@84772a9934f5b970a72c1c2b4bc37f51@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hw0;

/**
 *
 * @author daf
 */
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) { // TODO code application logic here

        //Read input and pre-proccess all attribute
        BufferedReader br = null;
        String sCurrentLine;
        List<String[]> info = new ArrayList<String[]>();

        int numAnnounced, size;
        String[] keyName;
        String[][] binngoMtx;

        try {
            br = new BufferedReader(new FileReader(args[0]));

            while ((sCurrentLine = br.readLine()) != null) {
                String[] Line = sCurrentLine.split("","");
                info.add(sCurrentLine.split("",""));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        numAnnounced = Integer.valueOf(info.get(0)[0]);
        size = Integer.valueOf(info.get(0)[1]);
        keyName = info.get(1);
        binngoMtx = new String[size][size];
        for (int i = 0; i < size; i++) {
            binngoMtx[i] = info.get(i + 2);
        }

        //System.out.println();
        //Start game
        boolean[][] correctMap = new boolean[size][size];
        int[] straightlineIdx = new int[size * 2 + 2];
        int numstraightLine = 0;
        
        for (int row = 0; row < size; row++) {
            for (int col = 0; col < size; col++) {
                for (int k = 0; k < keyName.length; k++) {
                    if (binngoMtx[row][col].equals(keyName[k])) {
                        correctMap[row][col] = true;
                        break;
                    }
                }
                if (!correctMap[row][col]) {
                    straightlineIdx[row] = -1;
                    straightlineIdx[size+col] = -1;
                    if(row == col){
                        straightlineIdx[size*2-1] = -1;
                    }
                    if(row+col == 2){
                        straightlineIdx[size*2] = -1;
                    }
                }
            }
        }
        
        for (int c = 0;c < straightlineIdx.length;c++){
            if(straightlineIdx[c] != -1){
                numstraightLine++;
            }
        }
        System.out.println(numstraightLine);
        

    }

}

@84772a9934f5b970a72c1c2b4bc37f51@"
"r04945021","7","0.7","104992","@dcf06123a306c4239c4ee3fc60a335d5@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // strings announced for Bingo game         
            String[] announcedata = br.readLine().split("","");
            announce=Arrays.copyOf(announcedata,stringCount);

            for (int n = 0; n < num; n++) {
                String[] matrixdata = br.readLine().split("","");
                matrix[n]=Arrays.copyOf(matrixdata,num);
            }
            int StraightLine = 0;
            int SameCountrow = 0;
            int SameCountcol = 0;
           

            for (int n = 0; n < num; n++) {
                for (int m = 0; m < num; m++) {
                    for (int i = 0; i < stringCount; i++) {
                        if (matrix[n][m].equals(announce[i])) {
                            SameCountrow++;
                           
                        }
                        if (matrix[m][n].equals(announce[i])) {
                            SameCountcol++;
                            
           
                        }
                        
                    }
                }
                if (SameCountrow == num) {
                    StraightLine++;
                    SameCountrow = 0;
                }
                if (SameCountcol == num) {
                    StraightLine++;
                    SameCountcol = 0;
                }
   
            }
           int SameCountdia1 = 0;
           int SameCountdia2 = 0;
            int Num = num-1;
            for (int n = 0; n < num; n++) {
                for (int i = 0; i < stringCount; i++) {
                    if (matrix[n][Num].equals(announce[i])) {
                        SameCountdia2++;
                    }
                    if (matrix[n][n].equals(announce[i])) {
                        SameCountdia1++;
                    }
                }
                Num--;
  
            }
            if (SameCountdia1 == num) {
                StraightLine++;
            }
              if (SameCountdia2== num) {
                StraightLine++;
            }
 
            System.out.printf(""%d"", StraightLine);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}
    


@dcf06123a306c4239c4ee3fc60a335d5@"
"r04945021","3","0.98","105488","@4c92717eb6389562debcf60750d22141@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // strings announced for Bingo game         
            String[] announcedata = br.readLine().split("","");
            announce=Arrays.copyOf(announcedata,stringCount);

            for (int n = 0; n < num; n++) {
                String[] matrixdata = br.readLine().split("","");
                matrix[n]=Arrays.copyOf(matrixdata,num);
            }
            int StraightLine = 0;
            int SameCountrow = 0;
            int SameCountcol = 0;
           

            for (int n = 0; n < num; n++) {
                for (int m = 0; m < num; m++) {
                 
                    for (int i = 0; i < stringCount; i++) {
                        if (matrix[n][m].equals(announce[i])) {
                            SameCountrow++;                         
                        }
                        if (matrix[m][n].equals(announce[i])) {
                            SameCountcol++;
                        }
                        if(SameCountrow!=0||SameCountcol!=0)
                            break;
                        
                    }
                }
                if (SameCountrow == num) {
                    StraightLine++;
                    SameCountrow = 0;
                }
                if (SameCountcol == num) {
                    StraightLine++;
                    SameCountcol = 0;
                }
   
            }
           int SameCountdia1 = 0;
           int SameCountdia2 = 0;
            int Num = num-1;
            for (int n = 0; n < num; n++) {
                for (int i = 0; i < stringCount; i++) {
                    if (matrix[n][Num].equals(announce[i])) {
                        SameCountdia2++;
                    }
                    if (matrix[n][n].equals(announce[i])) {
                        SameCountdia1++;
                    }
                    if(SameCountdia2!=0||SameCountdia1!=0)
                            break;
                }
                Num--;
  
            }
            if (SameCountdia1 == num) {
                StraightLine++;
            }
              if (SameCountdia2== num) {
                StraightLine++;
            }
 
            System.out.printf(""%d"", StraightLine);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}
    


@4c92717eb6389562debcf60750d22141@"
"r04945021","7","0.72","104160","@9378268de592ca446bdcfad0c734a8ec@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // strings announced for Bingo game         
            String[] announcedata = br.readLine().split("","");
            announce=Arrays.copyOf(announcedata,stringCount);

            for (int n = 0; n < num; n++) {
                String[] matrixdata = br.readLine().split("","");
                matrix[n]=Arrays.copyOf(matrixdata,num);
            }
            int StraightLine = 0;
            int SameCountrow = 0;
            int SameCountcol = 0;
           

            for (int n = 0; n < num; n++) {
                for (int m = 0; m < num; m++) {
                 
                    for (int i = 0; i < stringCount; i++) {
                        if (matrix[n][m].equals(announce[i])) {
                            SameCountrow++;                         
                        }
                        if (matrix[m][n].equals(announce[i])) {
                            SameCountcol++;
                        }                      
                    }
                }
                if (SameCountrow == num) {
                    StraightLine++;
                    SameCountrow = 0;
                }
                if (SameCountcol == num) {
                    StraightLine++;
                    SameCountcol = 0;
                }
   
            }
           int SameCountdia1 = 0;
           int SameCountdia2 = 0;
            int Num = num-1;
            for (int n = 0; n < num; n++) {
                for (int i = 0; i < stringCount; i++) {
                    if (matrix[n][Num].equals(announce[i])) {
                        SameCountdia2++;
                    }
                    if (matrix[n][n].equals(announce[i])) {
                        SameCountdia1++;
                    }
                }
                Num--;
  
            }
            if (SameCountdia1 == num) {
                StraightLine++;
            }
              if (SameCountdia2== num) {
                StraightLine++;
            }
 
            System.out.printf(""%d"", StraightLine);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}
    


@9378268de592ca446bdcfad0c734a8ec@"
"r04546032","6","0.85","105232","@c74fa91db870596ced9fbc29b3018d57@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;



public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
        }
    }
}

    
     class ValueException extends Exception{
        public ValueException(String message)
        {
            super(message);
        }
}
@c74fa91db870596ced9fbc29b3018d57@"
"r04546032","6","0.77","104512","@0e4f1d81ad75317586ee8a85d227fa79@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.io.*;



public class Bingo {

    public static void main(String[] args) throws IOException {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
        }
    }
}

    
     class ValueException extends IOException{
        public ValueException(String message)
        {
            super(message);
        }
}
@0e4f1d81ad75317586ee8a85d227fa79@"
"r04546032","6","0.72","104336","@0a009054f8ee8719bbb6d864804ec093@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;




public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
        }
    }
}

    
     class ValueException extends RuntimeException{
        public ValueException(String message)
        {
            super(message);
        }
}
@0a009054f8ee8719bbb6d864804ec093@"
"r04546032","6","0.81","105232","@0390cdb76e5185313105368a5c9353c6@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;




public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            if(Announce.size()<2)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
        }
    }
}

    
     class ValueException extends RuntimeException{
        public ValueException(String message)
        {
            super(message);
        }
}
@0390cdb76e5185313105368a5c9353c6@"
"r04546032","6","0.74","102784","@2820f26f263a7e2cfe858eed9f926b65@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;
import java.io.*;




public class Bingo {

    public static void main(String[] args) throws IOException {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            if(Announce.size()<2)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
        }
    }
}

    
     class ValueException extends IOException{
        public ValueException(String message)
        {
            super(message);
        }
}
@2820f26f263a7e2cfe858eed9f926b65@"
"r04945021","10","0.088","105488","@d329930c76ef04ac945474ba4926a68d@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // strings announced for Bingo game         
            String[] announcedata = br.readLine().split("","");
            announce=Arrays.copyOf(announcedata,stringCount);

            for (int n = 0; n < num; n++) {
                String[] matrixdata = br.readLine().split("","");
                matrix[n]=Arrays.copyOf(matrixdata,num);
            }

            int StraightLine = 0;
            int SameCountrow = 0;
            int SameCountcol = 0;
           

            for (int n = 0; n < num; n++) {
                for (int m = 0; m < num; m++) {
              
                    for (int i = 0; i < stringCount; i++) {
                        if (matrix[n][m].equals(announce[i])) {
                            SameCountrow++;
                        }
                        if (matrix[m][n].equals(announce[i])) {
                            SameCountcol++;
                         
                        }                    
                    }
                }
                if (SameCountrow == num) {
                    StraightLine++;
                }                
                if (SameCountcol == num) {
                    StraightLine++;
                }
                       SameCountrow = 0;
                       SameCountcol = 0;
            }
           int SameCountdia1 = 0;
           int SameCountdia2 = 0;
            int Num = num-1;
            for (int n = 0; n < num; n++) {
                for (int i = 0; i < stringCount; i++) {
                    if (matrix[n][Num].equals(announce[i])) {
                        SameCountdia2++;
                    }
                    if (matrix[n][n].equals(announce[i])) {
                        SameCountdia1++;
                    }
                }
                Num--;
  
            }
            if (SameCountdia1 == num) {
                StraightLine++;
            }
              if (SameCountdia2== num) {
                StraightLine++;
            }
 
            System.out.printf(""%d\n"", StraightLine);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}
    


@d329930c76ef04ac945474ba4926a68d@"
"r04546032","6","0.73","103552","@005d982be337ec920135b126a0530ed6@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;





public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2 )
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            if(Announce.size()<2)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
        System.exit(1);
        }
    finally{
            return ;
        }
    }
}

    
     class ValueException extends RuntimeException{
        public ValueException(String message)
        {
            super(message);
        }
}
@005d982be337ec920135b126a0530ed6@"
"r04546032","6","0.81","106672","@5277b8e085ae62a5f3d9c0e317940f3e@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;





public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2 )
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            if(Announce.size()<2)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
   
        }
    finally{
            return ;
        }
    }
}

    
     class ValueException extends RuntimeException{
        public ValueException(String message)
        {
            super(message);
        }
}
@5277b8e085ae62a5f3d9c0e317940f3e@"
"b03611023","3","0.72","104320","@cce923d378751a1a24bec430fa22a7a0@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String[] data = br.readLine().split("","");

            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            String[] cont = new String[stringCount];
            String[][] matrix = new String[num][num];

            cont = br.readLine().split("","");
            int i;
            int j;
            for (i = 0; i < stringCount; i++) {
            }
            i = 0;
            while (i < num) {
                matrix[i] = br.readLine().split("","");
                i++;
            }
            int[][] one = new int[num][num];

            for (i = 0; i < num; i++) {
                for (j = 0; j < num; j++) {
                    int bin;
                    for (bin = 0; bin < stringCount; bin++) {
                        if (matrix[i][j].compareTo(cont[bin]) == 0) {
                            one[i][j] = 1;
                            break;
                        } else {
                            one[i][j] = 0;
                        }
                    }
                }
            }
            
            int count = 0;
            int k;
            for (i = 0; i < num; i++) {
                k = 0;
                for (j = 0; j < num; j++) {
                    k += one[i][j];
                }
                if (k == 3) {
                    count++;
                }
            }
            for (j = 0; j < num; j++) {
                k = 0;
                for (i = 0; i < num; i++) {
                    k += one[i][j];
                }
                if (k == 3) {
                    count++;
                }
            }
            k = 0;
            for (i = 0; i < num; i++) {
                k += one[i][i];
            }
            if (k == 3) {
                count++;
            }
            k = 0;
            for (i = 0; i < num; i++) {
                k += one[num -1- i][i];
            }
            if (k == 3) {
                count++;
            }
System.out.print(count);
            
               
               
            
            
            

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@cce923d378751a1a24bec430fa22a7a0@"
"b03611023","10","0.086","105232","@5667151f01c97f392feeab6f03242360@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String[] data = br.readLine().split("","");

            int stringCount = Integer.parseInt(data[0]);
            
            int num = Integer.parseInt(data[1]);

            String[] cont = new String[stringCount];
            String[][] matrix = new String[num][num];

            cont = br.readLine().split("","");
            int i;
            int j;
            for (i = 0; i < stringCount; i++) {
            }
            i = 0;
            while (i < num) {
                matrix[i] = br.readLine().split("","");
                i++;
            }
            int[][] one = new int[num][num];

            for (i = 0; i < num; i++) {
                for (j = 0; j < num; j++) {
                    int bin;
                    for (bin = 0; bin < stringCount; bin++) {
                        if (matrix[i][j].compareTo(cont[bin]) == 0) {
                            one[i][j] = 1;
                            break;
                        } else {
                            one[i][j] = 0;
                        }
                    }
                }
            }
            
            int count = 0;
            int k;
            for (i = 0; i < num; i++) {
                k = 0;
                for (j = 0; j < num; j++) {
                    k += one[i][j];
                }
                if (k == num) {
                    count++;
                }
            }
            for (j = 0; j < num; j++) {
                k = 0;
                for (i = 0; i < num; i++) {
                    k += one[i][j];
                }
                if (k == num) {
                    count++;
                }
            }
            k = 0;
            for (i = 0; i < num; i++) {
                k += one[i][i];
            }
            if (k == num) {
                count++;
            }
            k = 0;
            for (i = 0; i < num; i++) {
                k += one[num -1- i][i];
            }
            if (k == num) {
                count++;
            }
System.out.print(count);
            
               
               
            
            
            

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@5667151f01c97f392feeab6f03242360@"
"r04546032","6","0.73","104432","@8606b2f10a19217cf150856daebb140e@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;





public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2 )
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            if(Announce.size()<2 || stringCount != Announce.size())
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
   
        }
    finally{
            return ;
        }
    }
}

    
     class ValueException extends RuntimeException{
        public ValueException(String message)
        {
            super(message);
        }
}
@8606b2f10a19217cf150856daebb140e@"
"r04546032","6","0.88","105216","@1c485816af1f42670cfc7f7204aa7454@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;





public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2 )
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
           
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            if(Announce.size()<2 || stringCount != Announce.size())
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            count = 0;
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
   
        }
    }
}

    
     class ValueException extends RuntimeException{
        public ValueException(String message)
        {
            super(message);
        }
}
@1c485816af1f42670cfc7f7204aa7454@"
"r04546032","6","0.78","103440","@415c428129304aa59073b73804a3c012@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;





public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2 )
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
            
            if(line2.length != stringCount)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            
               if(Announce.size()<2 || stringCount != Announce.size())
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            count = 0;
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
   
        }
    }
}

    
     class ValueException extends RuntimeException{
        public ValueException(String message)
        {
            super(message);
        }
}
@415c428129304aa59073b73804a3c012@"
"r04921012","0","0","0","@f0f325b2dffe255462c9ae4a511dd4cc@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author steven
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
     public static void main(String[] args) throws Exception {
        // TODO code application logic here
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(""test.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] bool=new boolean[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");

            String[] line= new String[num];
            int counter=0;
            //while ((line=br.readLine().split("",""))!=null){
                
            for (int i=0; i<num;i++){
                line=br.readLine().split("","");
                matrix[counter]=line;
                counter++;
                
            }
            //System.out.println(matrix[0][2].equals(announce[0]));
            for (int y=0;y<num;y++){
                for (int x=0;x<num;x++){
                    for (int i=0;i<stringCount;i++){
                        //System.out.println(announce[0]);
                        //System.out.println(matrix[0][2]);
                        //System.out.println(announce[i]);
                        if (!bool[y][x]){
                            bool[y][x] = matrix[y][x].equals(announce[i]);
                        }
                    }
                    //System.out.println(bool[y][x]);
                }
            }
            int straightLine=0;
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[y][x]==false){
                        break;
                    }else{
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            boolean[][] newbool=new boolean[num][num];
            
            for (int y=0; y<num;y++){
                for (int x = 0; x< num ;x++){
                    newbool[x][y]=bool[y][x];
                }
            }
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (newbool[y][x]==false){
                        break;
                    }else{
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            
            for (int i=0;i<num;i++){
                if (bool[i][i]==false){
                    break;
                }else{
                    
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            for (int i=0;i<num;i++){
                if (newbool[i][i]==false){
                    break;
                }else{
                    
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            //System.out.println(bool[2][2]);
            System.out.printf(""number of straight line : "",straightLine);
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
     }
}

@f0f325b2dffe255462c9ae4a511dd4cc@"
"b03611033","0","0","0","@15ddc20d06368aa846612da843b8d94d@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.FileReader;
import java.io.BufferedReader;
//import.java.util.Arrays;

/**
 *
 * @author user
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
     
    
    public static void main(String[] args) throws Exception 
    {
            // read file from args[0] in Java 7 style
            try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            //String str = null;
            // if((str = br.readLine()) != null){
            String[] data2 = br.readLine().split("","");
                for (int i=0;i<stringCount;i++)
                {
                    announce[i]=data2[i];
                    //System.out.println(announce[i]);
                }
 
                for(int j=0;j<num;j++)
                {
                    data2 = br.readLine().split("","");
                    
                    for(int k=0;k<num;k++)
                    {
                        matrix[j][k]=data2[k];
                        //System.out.println(matrix[j][k]);
                    }
                }
              
                int[][]  aftercom = new int[num][num];
                                
                for(int j=0;j<num;j++)
                {
                    for(int k=0;k<num;k++)
                    {
                        aftercom[j][k]=0;
                        for(int i=0;i<stringCount;i++)
                        {
                            if(matrix[j][k].equals(announce[i]))
                            {
                                aftercom[j][k]=1;
                                break;
                            }
                        }
                        //System.out.println(aftercom[j][k]);
                    }
                }
            
                int bingoline=0;
            
            for(int j=0;j<num;j++)
            {
                for(int k=0;k<num;k++)
                {
                    if(aftercom[j][k]==0)
                    {
                        break;
                    }
                    if(k==num-1)
                    {
                        bingoline++;
                    }
                }  
            }
            for(int j=0;j<num;j++)
            {
                for(int k=0;k<num;k++)
                {
                    if(aftercom[k][j]==0)
                    {
                        break;
                    }
                    if(k==num-1)
                    {
                        bingoline++;
                    }
                }
            }
            
            for(int j=0; j<num;j++)
            {
                if(aftercom[j][j]==0)
                {
                    break;
                }
                if(j==num-1)
                {
                    bingoline++;
                }
            }
            for(int j=0; j<num;j++)
            {
                if(aftercom[j][num-1-j]==0)
                {
                    break;
                }
                if(j==num-1)
                {
                    bingoline++;
                }
            }
            
            System.out.println(bingoline);
        }
    }
}

@15ddc20d06368aa846612da843b8d94d@"
"r04546032","6","0.88","105248","@1ed8bdb6a992e42d5ffcfc00274bb766@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;





public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2 )
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
            
            if(line2.length != stringCount)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            
               if(Announce.size()<2 || stringCount != Announce.size())
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            count = 0;
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
   
        }
    }
}

    
     class ValueException extends RuntimeException{
        public ValueException(String message)
        {
            super(message);
        }
}
@1ed8bdb6a992e42d5ffcfc00274bb766@"
"r04546032","6","0.87","105296","@fb0ee4a1c19666a15707152bb55a32c3@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            if (stringCount < 2 || num < 2) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce = new LinkedHashSet<String>();

            String[][] matrix = new String[num][num];
            boolean[][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");

            if (line2.length != stringCount) {
                throw new ValueException(""重新輸入你的bingo"");
            }

            for (int i = 0; i < stringCount; i++) {
                Announce.add(line2[i]);
            }

            if (Announce.size() < 2 || stringCount != Announce.size()) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for (int a = 0; a < num; a++) {
                String[] line = br.readLine().split("","");
                for (int b = 0; b < num; b++) {
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }

            for (int i = 0; i < Announce.size(); i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < num; k++) {
                        if (announce[i].compareTo(matrix[j][k]) == 0) {
                            bingo[j][k] = true;
                        }

                    }
                }
            }
            int count = 0;
            int win = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (bingo[a][b] == true) {
                        count++;
                    } else {
                        count = count;
                    }
                }
                if (count == num) {
                    win++;
                } else {
                    count = 0;
                }
            }

            count = 0;
            for (int c = 0; c < num; c++) {
                for (int r = 0; r < num; r++) {
                    if (bingo[r][c] == true) {
                        count++;
                    } else {
                        count = count;
                    }
                }
                if (count == num) {
                    win++;
                } else {
                    count = 0;
                }
            }

            count = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (a == b && bingo[a][b] == true) {
                        count++;
                    } else {
                        count = count;
                    }
                }

                if (count == num) {
                    win++;
                } else {
                    count = 0;
                }
            }

            count = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if ((a + b) == num) {
                        if (bingo[a][b] == true) {
                            count++;
                        } else {
                            count = count;
                        }
                    }
                }
                if (count == num) {
                    win++;
                } else {
                    count = 0;
                }
            }

            System.out.println(win);
        } catch (ValueException e) {
            System.out.println(e);

        }
    }
}

class ValueException extends RuntimeException {

    public ValueException(String message) {
        super(message);
    }
}

@fb0ee4a1c19666a15707152bb55a32c3@"
"r04546032","5","0.81","105200","@c11ac7b30202ec6b110dbbb2ae3959e1@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

// store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

// store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            if (stringCount < 2 || num < 2) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce = new LinkedHashSet<>();

            String[][] matrix = new String[num][num];
            boolean[][] bingo = new boolean[num][num];
     
            String[] line2 = br.readLine().split("","");

            if (line2.length != stringCount) {
                throw new ValueException(""重新輸入你的bingo"");
            }

            for (int i = 0; i < stringCount; i++) {
                Announce.add(line2[i]);
            }

            if (Announce.size() < 2 || stringCount != Announce.size()) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for (int a = 0; a < num; a++) {
                String[] line = br.readLine().split("","");
                for (int b = 0; b < num; b++) {
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }

            for (int i = 0; i < Announce.size(); i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < num; k++) {
                        if (announce[i].compareTo(matrix[j][k]) == 0) {
                            bingo[j][k] = true;
                        }

                    }
                }
            }
            int count = 0;
            int win = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (bingo[a][b] ==true) {
                        count = count;
                    } else {
                        count++;
                    }
                }
                if (count == num) {
                    win++;
                } else {
                    count = 0;
                }
            }

            count = 0;
            for (int c = 0; c < num; c++) {
                for (int r = 0; r < num; r++) {
                    if (bingo[r][c] == true) {
                        count++;
                    } else {
                        count = count;
                    }
                }
                if (count == num) {
                    win++;
                } else {
                    count = 0;
                }
            }

            count = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (a == b && bingo[a][b] == true) {
                        count++;
                    } else {
                        count = count;
                    }
                }

                if (count == num) {
                    win++;
                } else {
                    count = 0;
                }
            }

            count = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if ((a + b) == num) {
                        if (bingo[a][b] == true) {
                            count++;
                        } else {
                            count = count;
                        }
                    }
                }
                if (count == num) {
                    win++;
                } else {
                    count = 0;
                }
            }

            System.out.println(win);
        } catch (ValueException e) {
            System.out.println(e);

        }
    }
}

class ValueException extends RuntimeException {

    public ValueException(String message) {
        super(message);
    }
}

@c11ac7b30202ec6b110dbbb2ae3959e1@"
"r04546032","6","0.87","105248","@5612e03d3adbfb30334ad51f4097b63b@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;





public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2 )
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
            
            if(line2.length != stringCount)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            
               if(Announce.size()<2 || stringCount != Announce.size())
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
             // initilization of a String array in Java
            String[] announce = new String[Announce.size()];
            Announce.toArray(announce);
            for(int a = 0;a < num ;a++)
            {
                String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < Announce.size();i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
            int count = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            count = 0;
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
             count = 0;
            for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if(a == b && bingo[a][b] == true)
                    {
                        count++;
                    }
                    
                    else 
                    {
                        count = count;
                    }
                }
            
                if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
            
            
             count = 0;
             for(int a =0;a<num;a++)
            {
                for(int b = 0; b < num;b++)
                {
                    if((a+b) == num)
                   {
                         if(bingo[a][b] == true)
                    {
                        count++;
                    }
                    else 
                    {
                        count = count;
                    }
                   }
                }
                 if(count == num)
                {
                    win++;
                }
                else
                {
                    count = 0;
                }
            }
           
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
   
        }
    }
}

    
     class ValueException extends RuntimeException{
        public ValueException(String message)
        {
            super(message);
        }
}
@5612e03d3adbfb30334ad51f4097b63b@"
"r04921012","0","0","0","@d7e894a841a62227dca657bea96d2d6d@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author steven
 */
public class Bingo {

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
     public static void main(String[] args) throws Exception {
        // TODO code application logic here
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(""test.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] bool=new boolean[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");

            String[] line= new String[num];
            int counter=0;
            //while ((line=br.readLine().split("",""))!=null){
                
            for (int i=0; i<num;i++){
                line=br.readLine().split("","");
                matrix[counter]=line;
                counter++;
                
            }
            //System.out.println(matrix[0][2].equals(announce[0]));
            for (int y=0;y<num;y++){
                for (int x=0;x<num;x++){
                    for (int i=0;i<stringCount;i++){
                        //System.out.println(announce[0]);
                        //System.out.println(matrix[0][2]);
                        //System.out.println(announce[i]);
                        if (!bool[y][x]){
                            bool[y][x] = matrix[y][x].equals(announce[i]);
                        }
                    }
                    //System.out.println(bool[y][x]);
                }
            }
            int straightLine=0;
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[y][x]==false){
                        break;
                    }else{
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            boolean[][] newbool=new boolean[num][num];
            
            for (int y=0; y<num;y++){
                for (int x = 0; x< num ;x++){
                    newbool[x][y]=bool[y][x];
                }
            }
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (newbool[y][x]==false){
                        break;
                    }else{
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            
            for (int i=0;i<num;i++){
                if (bool[i][i]==false){
                    break;
                }else{
                    
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            for (int i=0;i<num;i++){
                if (newbool[i][i]==false){
                    break;
                }else{
                    
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            //System.out.println(bool[2][2]);
            System.out.println(straightLine);

            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
     }
}

@d7e894a841a62227dca657bea96d2d6d@"
"r04921012","0","0","0","@d108d5baba873757bf834e71402f02fb@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author steven
 */
public class Bingo {

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
     public static void main(String[] args) throws Exception {
        // TODO code application logic here
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(""test.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] bool=new boolean[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");

            String[] line= new String[num];
            int counter=0;
            //while ((line=br.readLine().split("",""))!=null){
                
            for (int i=0; i<num;i++){
                line=br.readLine().split("","");
                matrix[counter]=line;
                counter++;
                
            }
            //System.out.println(matrix[0][2].equals(announce[0]));
            for (int y=0;y<num;y++){
                for (int x=0;x<num;x++){
                    for (int i=0;i<stringCount;i++){
                        //System.out.println(announce[0]);
                        //System.out.println(matrix[0][2]);
                        //System.out.println(announce[i]);
                        if (!bool[y][x]){
                            bool[y][x] = matrix[y][x].equals(announce[i]);
                        }
                    }
                    //System.out.println(bool[y][x]);
                }
            }
            int straightLine=0;
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[y][x]==false){
                        break;
                    }else{
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            boolean[][] newbool=new boolean[num][num];
            
            for (int y=0; y<num;y++){
                for (int x = 0; x< num ;x++){
                    newbool[x][y]=bool[y][x];
                }
            }
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (newbool[y][x]==false){
                        break;
                    }else{
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            
            for (int i=0;i<num;i++){
                if (bool[i][i]==false){
                    break;
                }else{
                    
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            for (int i=0;i<num;i++){
                if (bool[i][num-i-1]==false){
                    break;
                }else{
                    
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            //System.out.println(bool[2][2]);
            System.out.println(straightLine);

            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
     }
}

@d108d5baba873757bf834e71402f02fb@"
"r04921012","0","0","0","@9a852a60e71be024f4631b6bcd2dd0b4@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author steven
 */
public class Bingo {

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
     public static void main(String[] args) throws Exception {
        // TODO code application logic here
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(""test.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] bool=new boolean[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");

            String[] line= new String[num];
            int counter=0;
            //while ((line=br.readLine().split("",""))!=null){
                
            for (int i=0; i<num;i++){
                line=br.readLine().split("","");
                matrix[counter]=line;
                counter++;
                
            }
            //System.out.println(matrix[0][2].equals(announce[0]));
            for (int y=0;y<num;y++){
                for (int x=0;x<num;x++){
                    for (int i=0;i<stringCount;i++){
                        //System.out.println(announce[0]);
                        //System.out.println(matrix[0][2]);
                        //System.out.println(announce[i]);
                        if (!bool[y][x]){
                            bool[y][x] = matrix[y][x].equals(announce[i]);
                        }
                    }
                    //System.out.println(bool[y][x]);
                }
            }
            int straightLine=0;
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[y][x]==false){
                        break;
                    }else{
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            /*boolean[][] newbool=new boolean[num][num];
            
            for (int y=0; y<num;y++){
                for (int x = 0; x< num ;x++){
                    newbool[x][y]=bool[y][x];
                }
            }*/
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[x][y]==false){
                        break;
                    }else{
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            
            for (int i=0;i<num;i++){
                if (bool[i][i]==false){
                    break;
                }else{
                    
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            for (int i=0;i<num;i++){
                if (bool[i][num-i-1]==false){
                    break;
                }else{
                    
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            //System.out.println(bool[2][2]);
            System.out.println(straightLine);

            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
     }
}

@9a852a60e71be024f4631b6bcd2dd0b4@"
"r03723070","0","0","0","@5634afb9d8fa7245c3c5f2faae2f9281@package hw0;

import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int [][] matrix_match = new int[num][num];
            for(int i = 0;i<num;i++)
                for(int j = 0;j<num;j++)
                    matrix_match[i][j] = 0;
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             int ans=0;
             announce = br.readLine().split("","");
             for(int i = 0;i<num;i++){
                matrix[i]  = br.readLine().split("","");
             }
             for(int i = 0;i<num;i++){
                for(int j = 0;j<num;j++){
                 //System.out.printf(""%s "",matrix[i][j]);
                    for(int k = 0; k<stringCount;k++){ 
                        if  (matrix[i][j].equals(announce [k]) ){
                              matrix_match[i][j]=1;
                        }
                    }
                }
            }
             
             
             
                for(int i = 0;i<num;i++){
                    int row = 0;
                    int column = 0;
                    for(int j = 0;j<num;j++){
                        if(matrix_match[i][j] == 1){
                            row++;
                        }
                        if(matrix_match[j][i] == 1){
                            column++;
                        }
                    } 
                    if(row==num)
                        ans++;
                    if(column==num)
                        ans++;    
                }
                 int diag = 0;
                 int invers_diag = 0;
                 for(int i = 0;i<num;i++){
                    
                     if(matrix_match[i][i]==1)
                         diag ++;
                     if(matrix_match[i][num-i-1]==1)
                         invers_diag ++;
                 }
                 if(diag==num)
                    ans++;
                if(invers_diag==num)
                    ans++;   
                
                
             System.out.printf(""%d\n"",ans);
        }
    }
}

@5634afb9d8fa7245c3c5f2faae2f9281@"
"r04921012","0","0","0","@feb8fcd1853dd6f66e0d9403f4f3cc71@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Arrays;

/**
 *
 * @author steven
 */
public class Bingo {

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
     public static void main(String[] args) throws Exception {
        // TODO code application logic here
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(""test.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] bool=new boolean[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");

            String[] line= new String[num];
            int counter=0;
            //while ((line=br.readLine().split("",""))!=null){
                
            for (int i=0; i<num;i++){
                line=br.readLine().split("","");
                matrix[counter]=line;
                counter++;
                
            }
            //System.out.println(matrix[0][2].equals(announce[0]));
            for (int y=0;y<num;y++){
                for (int x=0;x<num;x++){
                    for (int i=0;i<stringCount;i++){
                        //System.out.println(announce[0]);
                        //System.out.println(matrix[0][2]);
                        //System.out.println(announce[i]);
                        if (!bool[y][x]){
                            bool[y][x] = matrix[y][x].equals(announce[i]);
                        }
                    }
                    //System.out.println(bool[y][x]);
                }
            }
            int straightLine=0;
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[y][x]==false){
                        break;
                    }else{
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            /*boolean[][] newbool=new boolean[num][num];
            
            for (int y=0; y<num;y++){
                for (int x = 0; x< num ;x++){
                    newbool[x][y]=bool[y][x];
                }
            }*/
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[x][y]==false){
                        break;
                    }else{
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            
            for (int i=0;i<num;i++){
                if (bool[i][i]==false){
                    break;
                }else{
                    
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            for (int i=0;i<num;i++){
                if (bool[i][num-i-1]==false){
                    break;
                }else{
                    
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            //System.out.println(bool[2][2]);
            System.out.println(straightLine);

            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
     }
}

@feb8fcd1853dd6f66e0d9403f4f3cc71@"
"r04921012","0","0","0","@fb43c40fd39a8747aab665a1f7716f64@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Arrays;

/**
 *
 * @author steven
 */
public class Bingo {

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
     public static void main(String[] args) throws Exception {
        // TODO code application logic here
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(""test.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] bool=new boolean[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");

            String[] line= new String[num];
            int counter=0;
            //while ((line=br.readLine().split("",""))!=null){
                
            for (int i=0; i<num;i++){
                line=br.readLine().split("","");
                matrix[counter]=line;
                counter++;
                
            }
            //System.out.println(matrix[0][2].equals(announce[0]));
            for (int y=0;y<num;y++){
                for (int x=0;x<num;x++){
                    for (int i=0;i<stringCount;i++){
                        //System.out.println(announce[0]);
                        //System.out.println(matrix[0][2]);
                        //System.out.println(announce[i]);
                        if (!bool[y][x]){
                            bool[y][x] = matrix[y][x].equals(announce[i]);
                        }
                    }
                    //System.out.println(bool[y][x]);
                }
            }
            int straightLine=0;
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[y][x]==false){
                        break;
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            /*boolean[][] newbool=new boolean[num][num];
            
            for (int y=0; y<num;y++){
                for (int x = 0; x< num ;x++){
                    newbool[x][y]=bool[y][x];
                }
            }*/
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[x][y]==false){
                        break;
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            
            for (int i=0;i<num;i++){
                if (bool[i][i]==false){
                    break;
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            for (int i=0;i<num;i++){
                if (bool[i][num-i-1]==false){
                    break;
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            //System.out.println(bool[2][2]);
            System.out.println(straightLine);

            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
     }
}

@fb43c40fd39a8747aab665a1f7716f64@"
"r03228006","0","0","0","@1141d00802ad14064fc75e766b657fb7@
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Arrays;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author user
 */
public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            //char coun1 = coun[1];
                    
                 

            // initilization of a String array in Java(declares an array of integers and allocates memory)
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");
            String[][] matrix = new String[num][num];
            for (int i = 0; i < num; i++) {
                String[] temp = br.readLine().split("","");
                for (int j = 0; j < num; j++){
                 matrix[i][j] = temp[j];
                }}
            
            // Select stringCount announced countries
            String[][] selected = new String[num][num];
            for (int i = 0; i < num; i++) {
                for (int j = 1; j < num; j++){
                    for (int k = 0; k < stringCount; k++){
                      if(matrix[i][j].equals(announce[k])) {
                      selected[i][j] = ""1"" ;} 
                }}}

            //* check how many straight lines in the bingo matrix
            int straight = 0;
            String[] bingo = new String[num];
            Arrays.fill(bingo, ""1"");
            //int [][] selected1 = new int[][] {{1,1,1},{1,0,1},{1,1,0}};
            //String selected2 = selected.toString();
            //*check by row
            for (String[] row : selected){
                //System.out.println(Arrays.toString(row));
                if (row.equals(bingo)) {
                     straight ++ ;
                     //System.out.println(""T"");
                } 
                else if (Arrays.equals(row,bingo)) {
                     straight ++ ; 
                     //System.out.println(""True"");
                }
                //else { System.out.println(""FALSE"");}
            }
            //*check by coloum
            String one = ""1"";
            for (int col=0; col<num; col++){
                int tempc = 0;
                for(int i=0; i<num; i++){
                   String sel=selected[i][col];
                   if (!one.equals(sel)) {
                     tempc ++ ;} 
                }
                //System.out.println(tempc);
                if(tempc==0){
                     straight ++;}
            }
             //*check by diagonal
            String[] dl=new String[num];
            String[] dr=new String[num];
            for (int i=0; i<num; i++){
                   dl[i]= selected[i][i];
                   dr[i]= selected[i][num-i-1];
                   if (Arrays.equals(dl,bingo)) {
                     straight ++;}
                   if (Arrays.equals(dr,bingo)) {
                     straight ++;}
            }         
        
            //matrix[0][0] = br.readLine().split("","")[0];    
            //float[] values = new float[] {0.1f, 0.2f, 0.3f};
           
            // String read = null;
            //while ((read = br.readLine()) != null) {

            // allocate data to String array in Java
            //announce[] = {""1"",""2""};
            //matrix[][] = {{""1"",""2"",""3""},{""1"",""2"",""3""}};

            
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            //System.out.println(announce[0]+"",""+announce[1]);
            //System.out.println(br.readLine());   
            //System.out.println(br.readLine().split("","")); 
            //for (int i = 0; i < num; i++) {
                //for (int j = 0; j < num; j++){
                 //System.out.printf(matrix[i][j]);  
                //}
            //System.out.println();
            //}
            //System.out.println(Integer.toString(selected[0][0]));
            //for (String[] row : selected) {
                 //System.out.println(Arrays.toString(row));  
                //}
             //System.out.println(Arrays.toString(bingo));
             System.out.println(straight);
            }
        }
}

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
@1141d00802ad14064fc75e766b657fb7@"
"r03228006","5","0.87","104848","@6dfa96a3b852f46dcb356602a5b91ec0@
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Arrays;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author user
 */
public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            //char coun1 = coun[1];
                    
                 

            // initilization of a String array in Java(declares an array of integers and allocates memory)
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");
            String[][] matrix = new String[num][num];
            for (int i = 0; i < num; i++) {
                String[] temp = br.readLine().split("","");
                for (int j = 0; j < num; j++){
                 matrix[i][j] = temp[j];
                }}
            
            // Select stringCount announced countries
            String[][] selected = new String[num][num];
            for (int i = 0; i < num; i++) {
                for (int j = 1; j < num; j++){
                    for (int k = 0; k < stringCount; k++){
                      if(matrix[i][j].equals(announce[k])) {
                      selected[i][j] = ""1"" ;} 
                }}}

            //* check how many straight lines in the bingo matrix
            int straight = 0;
            String[] bingo = new String[num];
            Arrays.fill(bingo, ""1"");
            //int [][] selected1 = new int[][] {{1,1,1},{1,0,1},{1,1,0}};
            //String selected2 = selected.toString();
            //*check by row
            for (String[] row : selected){
                //System.out.println(Arrays.toString(row));
                if (row.equals(bingo)) {
                     straight ++ ;
                     //System.out.println(""T"");
                } 
                else if (Arrays.equals(row,bingo)) {
                     straight ++ ; 
                     //System.out.println(""True"");
                }
                //else { System.out.println(""FALSE"");}
            }
            //*check by coloum
            String one = ""1"";
            for (int col=0; col<num; col++){
                int tempc = 0;
                for(int i=0; i<num; i++){
                   String sel=selected[i][col];
                   if (!one.equals(sel)) {
                     tempc ++ ;} 
                }
                //System.out.println(tempc);
                if(tempc==0){
                     straight ++;}
            }
             //*check by diagonal
            String[] dl=new String[num];
            String[] dr=new String[num];
            for (int i=0; i<num; i++){
                   dl[i]= selected[i][i];
                   dr[i]= selected[i][num-i-1];
                   if (Arrays.equals(dl,bingo)) {
                     straight ++;}
                   if (Arrays.equals(dr,bingo)) {
                     straight ++;}
            }         
        
            //matrix[0][0] = br.readLine().split("","")[0];    
            //float[] values = new float[] {0.1f, 0.2f, 0.3f};
           
            // String read = null;
            //while ((read = br.readLine()) != null) {

            // allocate data to String array in Java
            //announce[] = {""1"",""2""};
            //matrix[][] = {{""1"",""2"",""3""},{""1"",""2"",""3""}};

            
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            //System.out.println(announce[0]+"",""+announce[1]);
            //System.out.println(br.readLine());   
            //System.out.println(br.readLine().split("","")); 
            //for (int i = 0; i < num; i++) {
                //for (int j = 0; j < num; j++){
                 //System.out.printf(matrix[i][j]);  
                //}
            //System.out.println();
            //}
            //System.out.println(Integer.toString(selected[0][0]));
            //for (String[] row : selected) {
                 //System.out.println(Arrays.toString(row));  
                //}
             //System.out.println(Arrays.toString(bingo));
             System.out.println(straight);
            }
        }
}

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
@6dfa96a3b852f46dcb356602a5b91ec0@"
"r03228006","5","0.85","105216","@0ab7d33649859ef4d3e0120302fb470d@
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Arrays;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author user
 */
public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            //char coun1 = coun[1];
                    
                 

            // initilization of a String array in Java(declares an array of integers and allocates memory)
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");
            String[][] matrix = new String[num][num];
            for (int i = 0; i < num; i++) {
                String[] temp = br.readLine().split("","");
                for (int j = 0; j < num; j++){
                 matrix[i][j] = temp[j];
                }}
            
            // Select stringCount announced countries
            String[][] selected = new String[num][num];
            for (int i = 0; i < num; i++) {
                for (int j = 1; j < num; j++){
                    for (int k = 0; k < stringCount; k++){
                      if(matrix[i][j].equals(announce[k])) {
                      selected[i][j] = ""1"" ;} 
                }}}

            //* check how many straight lines in the bingo matrix
            int straight = 0;
            String[] bingo = new String[num];
            Arrays.fill(bingo, ""1"");
            //int [][] selected1 = new int[][] {{1,1,1},{1,0,1},{1,1,0}};
            //String selected2 = selected.toString();
            //*check by row
            for (String[] row : selected){
                //System.out.println(Arrays.toString(row));
                if (row.equals(bingo)) {
                     straight ++ ;
                     //System.out.println(""T"");
                } 
                else if (Arrays.equals(row,bingo)) {
                     straight ++ ; 
                     //System.out.println(""True"");
                }
                //else { System.out.println(""FALSE"");}
            }
            //*check by coloum
            String one = ""1"";
            for (int col=0; col<num; col++){
                int tempc = 0;
                for(int i=0; i<num; i++){
                   String sel=selected[i][col];
                   if (!one.equals(sel)) {
                     tempc ++ ;} 
                }
                //System.out.println(tempc);
                if(tempc==0){
                     straight ++;}
            }
             //*check by diagonal
            String[] dl=new String[num];
            String[] dr=new String[num];
            for (int i=0; i<num; i++){
                   dl[i]= selected[i][i];
                   dr[i]= selected[i][num-i-1];
                   if (Arrays.equals(dl,bingo)) {
                     straight ++;}
                   if (Arrays.equals(dr,bingo)) {
                     straight ++;}
            }         
        
            //matrix[0][0] = br.readLine().split("","")[0];    
            //float[] values = new float[] {0.1f, 0.2f, 0.3f};
           
            // String read = null;
            //while ((read = br.readLine()) != null) {

            // allocate data to String array in Java
            //announce[] = {""1"",""2""};
            //matrix[][] = {{""1"",""2"",""3""},{""1"",""2"",""3""}};

            
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            //System.out.println(announce[0]+"",""+announce[1]);
            //System.out.println(br.readLine());   
            //System.out.println(br.readLine().split("","")); 
            //for (int i = 0; i < num; i++) {
                //for (int j = 0; j < num; j++){
                 //System.out.printf(matrix[i][j]);  
                //}
            //System.out.println();
            //}
            //System.out.println(Integer.toString(selected[0][0]));
            //for (String[] row : selected) {
                 //System.out.println(Arrays.toString(row));  
                //}
             //System.out.println(Arrays.toString(bingo));
             System.out.println(straight);
            }
        }
}

@0ab7d33649859ef4d3e0120302fb470d@"
"r04921012","0","0","0","@68a0a95eae830f185873baa5430e81a0@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author steven
 */
public class Bingo {

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
     public static void main(String[] args) throws Exception {
        // TODO code application logic here
        int straightLine=0;
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(""test.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] bool=new boolean[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            announce = br.readLine().split("","");

            String[] line= new String[num];
            int counter=0;
                
            for (int i=0; i<num;i++){
                line=br.readLine().split("","");
                matrix[counter]=line;
                counter++;
                
            }
            //System.out.println(matrix[0][2].equals(announce[0]));
            for (int y=0;y<num;y++){
                for (int x=0;x<num;x++){
                    for (int i=0;i<stringCount;i++){
                        //System.out.println(announce[0]);
                        //System.out.println(matrix[0][2]);
                        //System.out.println(announce[i]);
                        if (!bool[y][x]){
                            bool[y][x] = matrix[y][x].equals(announce[i]);
                        }
                    }
                    //System.out.println(bool[y][x]);
                }
            }
            
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[y][x]==false){
                        break;
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 

            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[x][y]==false){
                        break;
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            
            for (int i=0;i<num;i++){
                if (bool[i][i]==false){
                    break;
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            for (int i=0;i<num;i++){
                if (bool[i][num-i-1]==false){
                    break;
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            

        }
        System.out.println(straightLine);
     }
}

@68a0a95eae830f185873baa5430e81a0@"
"r03228006","5","0.85","105200","@3e6eaff5315495bf05fb0de509b1726e@
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Arrays;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author user
 */
public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style args[0]
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            //char coun1 = coun[1];
                    
                 

            // initilization of a String array in Java(declares an array of integers and allocates memory)
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");
            String[][] matrix = new String[num][num];
            for (int i = 0; i < num; i++) {
                String[] temp = br.readLine().split("","");
                for (int j = 0; j < num; j++){
                 matrix[i][j] = temp[j];
                }}
            
            // Select stringCount announced countries
            String[][] selected = new String[num][num];
            //Arrays.fill(selected, ""0"");
            for (int i = 0; i < num; i++) {
                for (int j = 1; j < num; j++){
                    for (int k = 0; k < stringCount; k++){
                      if(matrix[i][j].equals(announce[k])) {
                      selected[i][j] = ""1"" ;} 
                }}}

            //* check how many straight lines in the bingo matrix
            int straight = 0;
            String[] bingo = new String[num];
            Arrays.fill(bingo, ""1"");
            //int [][] selected1 = new int[][] {{1,1,1},{1,0,1},{1,1,0}};
            //String selected2 = selected.toString();
            //*check by row
            for (String[] row : selected){
                //System.out.println(Arrays.toString(row));
                if (row.equals(bingo)) {
                     straight ++ ;
                     //System.out.println(""T"");
                } 
                else if (Arrays.equals(row,bingo)) {
                     straight ++ ; 
                     //System.out.println(""True"");
                }
                //else { System.out.println(""FALSE"");}
            }
            //*check by coloum
            String one = ""1"";
            for (int col=0; col<num; col++){
                int tempc = 0;
                for(int i=0; i<num; i++){
                   String sel=selected[i][col];
                   if (!one.equals(sel)) {
                     tempc ++ ;} 
                }
                //System.out.println(tempc);
                if(tempc==0){
                     straight ++;}
            }
             //*check by diagonal
            String[] dl=new String[num];
            String[] dr=new String[num];
            for (int i=0; i<num; i++){
                   dl[i]= selected[i][i];
                   dr[i]= selected[i][num-i-1];}
            if (Arrays.equals(dl,bingo)) {
                     straight ++;}
            if (Arrays.equals(dr,bingo)) {
                     straight ++;}
                     
        
            //matrix[0][0] = br.readLine().split("","")[0];    
            //float[] values = new float[] {0.1f, 0.2f, 0.3f};
           
            // String read = null;
            //while ((read = br.readLine()) != null) {

            // allocate data to String array in Java
            //announce[] = {""1"",""2""};
            //matrix[][] = {{""1"",""2"",""3""},{""1"",""2"",""3""}};

            
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            //System.out.println(announce[0]+"",""+announce[1]);
            //System.out.println(br.readLine());   
            //System.out.println(br.readLine().split("","")); 
            //for (int i = 0; i < num; i++) {
                //for (int j = 0; j < num; j++){
                 //System.out.printf(matrix[i][j]);  
                //}
            //System.out.println();
            //}
            //System.out.println(Integer.toString(selected[0][0]));
            //for (String[] row : selected) {
                 //System.out.println(Arrays.toString(row));  
                //}
             //System.out.println(Arrays.toString(bingo));
             System.out.println(straight);
            }
        }
}

@3e6eaff5315495bf05fb0de509b1726e@"
"r04921012","10","0.084","106720","@d873a0667ac65931cdb4d921f83b847b@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package bingo;

import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author steven
 */
public class Bingo {

    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
     public static void main(String[] args) throws Exception {
        // TODO code application logic here
        int straightLine=0;
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(""test.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] bool=new boolean[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            announce = br.readLine().split("","");

            String[] line= new String[num];
            int counter=0;
                
            for (int i=0; i<num;i++){
                line=br.readLine().split("","");
                matrix[counter]=line;
                counter++;
                
            }
            //System.out.println(matrix[0][2].equals(announce[0]));
            for (int y=0;y<num;y++){
                for (int x=0;x<num;x++){
                    for (int i=0;i<stringCount;i++){
                        //System.out.println(announce[0]);
                        //System.out.println(matrix[0][2]);
                        //System.out.println(announce[i]);
                        if (!bool[y][x]){
                            bool[y][x] = matrix[y][x].equals(announce[i]);
                        }
                    }
                    //System.out.println(bool[y][x]);
                }
            }
            
            
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[y][x]==false){
                        break;
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 

            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[x][y]==false){
                        break;
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            } 
            
            for (int i=0;i<num;i++){
                if (bool[i][i]==false){
                    break;
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            for (int i=0;i<num;i++){
                if (bool[i][num-i-1]==false){
                    break;
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            

        }
        System.out.println(straightLine);
     }
}

@d873a0667ac65931cdb4d921f83b847b@"
"r03723070","10","0.091","106960","@bb2076710055f390072afd7f4540ef51@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int [][] matrix_match = new int[num][num];
            for(int i = 0;i<num;i++)
                for(int j = 0;j<num;j++)
                    matrix_match[i][j] = 0;
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             int ans=0;
             announce = br.readLine().split("","");
             for(int i = 0;i<num;i++){
                matrix[i]  = br.readLine().split("","");
             }
             for(int i = 0;i<num;i++){
                for(int j = 0;j<num;j++){
                 //System.out.printf(""%s "",matrix[i][j]);
                    for(int k = 0; k<stringCount;k++){ 
                        if  (matrix[i][j].equals(announce [k]) ){
                              matrix_match[i][j]=1;
                        }
                    }
                }
                //System.out.printf(""\n"");
            }
             
             
             
                for(int i = 0;i<num;i++){
                    int row = 0;
                    int column = 0;
                    for(int j = 0;j<num;j++){
                        if(matrix_match[i][j] == 1){
                            row++;
                        }
                        if(matrix_match[j][i] == 1){
                            column++;
                        }
                    } 
                    if(row==num)
                        ans++;
                    if(column==num)
                        ans++;    
                }
                 int diag = 0;
                 int invers_diag = 0;
                 for(int i = 0;i<num;i++){
                    
                     if(matrix_match[i][i]==1)
                         diag ++;
                     if(matrix_match[i][num-i-1]==1)
                         invers_diag ++;
                 }
                 if(diag==num)
                    ans++;
                if(invers_diag==num)
                    ans++;   
                
                
             System.out.printf(""%d\n"",ans);
        }
    }
}

@bb2076710055f390072afd7f4540ef51@"
"r03228006","10","0.082","106624","@f457a6ee4fdc8e1e20bd49198b108e22@
import java.io.BufferedReader;
import java.io.FileReader;
import java.util.Arrays;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author user
 */
public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style args[0]
        //args[0] is  just for juged system
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            //char coun1 = coun[1];
                    
                 

            // initilization of a String array in Java(declares an array of integers and allocates memory)
            String[] announce = new String[stringCount];
            announce = br.readLine().split("","");
            String[][] matrix = new String[num][num];
            for (int i = 0; i < num; i++) {
                String[] temp = br.readLine().split("","");
                for (int j = 0; j < num; j++){
                 matrix[i][j] = temp[j];
                }}
            
            // Select stringCount announced countries
            String[][] selected = new String[num][num];
            //Arrays.fill(selected, ""0"");
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++){
                    for (int k = 0; k < stringCount; k++){
                      if(matrix[i][j].equals(announce[k])) {
                      selected[i][j] = ""1"" ;} 
                }}}

            //* check how many straight lines in the bingo matrix
            int straight = 0;
            String[] bingo = new String[num];
            Arrays.fill(bingo, ""1"");
            //int [][] selected1 = new int[][] {{1,1,1},{1,0,1},{1,1,0}};
            //String selected2 = selected.toString();
            //*check by row
            for (String[] row : selected){
                //System.out.println(Arrays.toString(row));
                if (row.equals(bingo)) {
                     straight ++ ;
                     //System.out.println(""T"");
                } 
                else if (Arrays.equals(row,bingo)) {
                     straight ++ ; 
                     //System.out.println(""True"");
                }
                //else { System.out.println(""FALSE"");}
            }
            //*check by coloum
            String one = ""1"";
            for (int col=0; col<num; col++){
                int tempc = 0;
                for(int i=0; i<num; i++){
                   String sel=selected[i][col];
                   if (!one.equals(sel)) {
                     tempc ++ ;} 
                }
                //System.out.println(tempc);
                if(tempc==0){
                     straight ++;}
            }
             //*check by diagonal
            String[] dl=new String[num];
            String[] dr=new String[num];
            for (int i=0; i<num; i++){
                   dl[i]= selected[i][i];
                   dr[i]= selected[i][num-i-1];}
            if (Arrays.equals(dl,bingo)) {
                     straight ++;}
            if (Arrays.equals(dr,bingo)) {
                     straight ++;}
                     
        
            //matrix[0][0] = br.readLine().split("","")[0];    
            //float[] values = new float[] {0.1f, 0.2f, 0.3f};
           
            // String read = null;
            //while ((read = br.readLine()) != null) {

            // allocate data to String array in Java
            //announce[] = {""1"",""2""};
            //matrix[][] = {{""1"",""2"",""3""},{""1"",""2"",""3""}};

            
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            //System.out.println(announce[0]+"",""+announce[1]);
            //System.out.println(br.readLine());   
            //System.out.println(br.readLine().split("","")); 
            //for (int i = 0; i < num; i++) {
                //for (int j = 0; j < num; j++){
                 //System.out.printf(matrix[i][j]);  
                //}
            //System.out.println();
            //}
            //System.out.println(Integer.toString(selected[0][0]));
            //for (String[] row : selected) {
                 //System.out.println(Arrays.toString(row));  
                //}
             //System.out.println(Arrays.toString(bingo));
             System.out.println(straight);
            }
        }
}

@f457a6ee4fdc8e1e20bd49198b108e22@"
"b03704074","0","0","0","@6d016d2526e32f66fc735bd4e8e76edb@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
        int num1, num2;
        Scanner sc = new Scanner(System.in);
        System.out.println(""請輸入字串數目與陣列大小(不一定以逗號分開)："");
        num1 = sc.nextInt();
        num2 = sc.nextInt();
        System.out.println(""字串數目為："" + num1 );
        System.out.println(""陣列大小為："" + num2 +""乘"" + num2  );
        
        String[][] matrix;
        matrix=new String[num2][num2];
        String str1;
        String str2;
        System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = sc.next();
        String[]AfterSplit1 = str1.split("","");
        for (int i = 0; i < AfterSplit1.length; i++)
            System.out.println(AfterSplit1[i]);
        
        
        
            for (int i = 0; i < num2; i++)
            {   System.out.println(""請輸入第""+(i+1)+""排"");
                str2=sc.next();
                String[]AfterSplit2 = str2.split("","");
                
                for(int j=0;j< num2;j++)
                {
                    matrix[i][j]=AfterSplit2[j];
                    
            
                }
            }
            
            for (int i = 0; i < num2; i++)
            {
                for(int j=0;j< num2;j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }
            
                int count=0;
                for (int i = 0; i < num2; i++)
                {
                back:
                {
                    for(int j=0;j< num2;j++)
                    {
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][j]==AfterSplit1[m]) 
                                continue;
                            if(m==AfterSplit1.length && matrix[i][j]!=AfterSplit1[m])
                                break back;
                         } 
                    }
                }
                
                count++;
                }
                
                
                for (int i=0; i < num2; i++)
                {
                back:
                {
                    for(int j=0;j< num2;j++)
                    {
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[j][i]==AfterSplit1[m]) 
                                continue;
                            if(m==AfterSplit1.length && matrix[j][i]!=AfterSplit1[m])
                                break back;
                         } 
                    }
                }
                
                count++;
                }
                back:
                {
                for (int i=0; i < num2; i++)
                {   
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][i]==AfterSplit1[m]) 
                                continue;
                            if(m==AfterSplit1.length && matrix[i][i]!=AfterSplit1[m])
                                break back;
                        }
                count++;
                
                }
                }
                
                back:
                {
                for (int i=0; i < num2; i++)
                {   
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][num2-i-1]==AfterSplit1[m]) 
                                continue;
                            if(m==AfterSplit1.length && matrix[i][num2-i-1]!=AfterSplit1[m])
                                break back;
                        }
                count++;
                
                }
                }
                
                System.out.println(""有""+count+""條線"");
                
            
        }
}    


@6d016d2526e32f66fc735bd4e8e76edb@"
"r04228002","0","0","0","@86f1ac32ed732472f9387b468de6eb14@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.ArrayList;
import java.util.Arrays;
/**
 *
 * @author Lenovo
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        // TODO code application logic here
        //FileReader fr = new FileReader(args[0]);
        //BufferedReader br = new BufferedReader(fr);
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            String line,tempstring;
            String[] tempArray= new String[3];
            ArrayList data1 = new ArrayList();
            while((line = br.readLine())!=null){
            // read a line and split by ','
                tempstring = line;
                tempArray = tempstring.split("","");
                //String[] data = br.readLine().split("","");
                for(int i=0;i< tempArray.length;i++)
                {          
                    data1.add(tempArray[i]);
                }
            }
            String[] data = new String[ data1.size() ];
            data1.toArray(data);
        
        int stringCount = Integer.parseInt(data[0]);
        int num = Integer.parseInt(data[1]);
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
        
        //System.out.println(Arrays.deepToString(matrix));
        //System.out.println(Arrays.toString(data));
        announce[0]=data[2];
        announce[1]=data[3];
        for (int i = 0; i < 3; i++){
            for (int j = 0; j < 3; j++){
            matrix[i][j] = data[i*3+j+4];
        }
        }
        //System.out.println(Arrays.toString(announce));
        //System.out.println(Arrays.deepToString(matrix));
        
        int OutNum = 0;
        for (int i = 0; i < 3; i++){
            String S0 = matrix[i][0];
            String S1 = matrix[i][1];
            String S2 = matrix[i][2];
            if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
                  OutNum=OutNum+1;
                    }
            else {
                continue;
                }
        }
        for (int i = 0; i < 3; i++){
            String S0 = matrix[0][i];
            String S1 = matrix[1][i];
            String S2 = matrix[2][i];
            if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
                  OutNum=OutNum+1;
                    }
            else {
                continue;
                }
        }
        String S00 = matrix[0][0];
        String S11 = matrix[1][1];
        String S22 = matrix[2][2];
        if (Arrays.asList(announce).contains(S00) & Arrays.asList(announce).contains(S11) & Arrays.asList(announce).contains(S22)){
            OutNum = OutNum+1;
        }
        String S0 = matrix[0][2];
        String S1 = matrix[1][1];
        String S2 = matrix[2][0];
        if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
            OutNum = OutNum+1;
        }
        System.out.println(OutNum);
        }
} 
}
        
    
    




@86f1ac32ed732472f9387b468de6eb14@"
"r04228002","0","0","0","@711629fa65d4f60b849dc4b03db182a5@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.ArrayList;
import java.util.Arrays;
/**
 *
 * @author Lenovo
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //FileReader fr = new FileReader(args[0]);
        //BufferedReader br = new BufferedReader(fr);
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            String line,tempstring;
            String[] tempArray= new String[3];
            ArrayList data1 = new ArrayList();
            while((line = br.readLine())!=null){
            // read a line and split by ','
                tempstring = line;
                tempArray = tempstring.split("","");
                //String[] data = br.readLine().split("","");
                for(int i=0;i< tempArray.length;i++)
                {          
                    data1.add(tempArray[i]);
                }
            }
            String[] data = new String[ data1.size() ];
            data1.toArray(data);
        
        int stringCount = Integer.parseInt(data[0]);
        int num = Integer.parseInt(data[1]);
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
        
        //System.out.println(Arrays.deepToString(matrix));
        //System.out.println(Arrays.toString(data));
        announce[0]=data[2];
        announce[1]=data[3];
        for (int i = 0; i < 3; i++){
            for (int j = 0; j < 3; j++){
            matrix[i][j] = data[i*3+j+4];
        }
        }
        //System.out.println(Arrays.toString(announce));
        //System.out.println(Arrays.deepToString(matrix));
        
        int OutNum = 0;
        for (int i = 0; i < 3; i++){
            String S0 = matrix[i][0];
            String S1 = matrix[i][1];
            String S2 = matrix[i][2];
            if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
                  OutNum=OutNum+1;
                    }
            else {
                continue;
                }
        }
        for (int i = 0; i < 3; i++){
            String S0 = matrix[0][i];
            String S1 = matrix[1][i];
            String S2 = matrix[2][i];
            if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
                  OutNum=OutNum+1;
                    }
            else {
                continue;
                }
        }
        String S00 = matrix[0][0];
        String S11 = matrix[1][1];
        String S22 = matrix[2][2];
        if (Arrays.asList(announce).contains(S00) & Arrays.asList(announce).contains(S11) & Arrays.asList(announce).contains(S22)){
            OutNum = OutNum+1;
        }
        String S0 = matrix[0][2];
        String S1 = matrix[1][1];
        String S2 = matrix[2][0];
        if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
            OutNum = OutNum+1;
        }
        System.out.println(OutNum);
        }
} 
}
        
    
    



@711629fa65d4f60b849dc4b03db182a5@"
"b03611011","0","0","0","@d639149967613123c439b9551c294c26@
import java.io.FileReader;
import java.io.BufferedReader;
import java.sql.Array;
import java.util.Arrays;

public class Bingo {

    public static int amount = 0;

    private static void sumrow(int[][] d) {
        int order = 0;
        int column = 0;
        int sumrow = 0;
        int sumcolumn = 0;
        int l = d.length;

        while (order < l) {
            //sum of row
            while (column < l) {
                sumrow = d[order][column] + sumrow;
                sumcolumn = d[column][order] + sumcolumn;

                column++;
            }
            if (sumrow == l || sumcolumn == l) {
                amount++;
            }
            sumrow = 0;
            sumcolumn = 0;
            column = 0;
            order++;
        }
        order=0;
        sumrow=0;
        sumcolumn=0;
        while (order < (l + 1) / 2) {
            sumrow = d[(l - 1) / 2 + order][(l - 1) / 2 - order]+d[(l - 1) / 2 - order][(l - 1) / 2 + order] + sumrow;
            sumcolumn = d[(l - 1) / 2 + order][(l - 1) / 2 + order] +d[(l - 1) / 2 - order][(l - 1) / 2 - order]+ sumcolumn;
            order++;
        }
        if(d[(l - 1) / 2][(l - 1) / 2]==1){
        sumrow--;
        sumcolumn--;
        }
            if (sumrow == l) {
                amount++;
            }
            if ( sumcolumn == l) {
                amount++;
            }

    }

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(""input.txt""))) {

            //read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            String[] data1 = br.readLine().split("","");
            int i = 0;
            while (i < stringCount) {
                announce[i] = data1[i];
                i++;
            }
            int k = 0;
            int x = 0;

            while (k < num) {
                String[] data2 = br.readLine().split("","");
                while (x < num) {
                    matrix[k][x] = data2[x];
                    x++;
                }
                x = 0;
                k++;
            }
            int[][] judge = new int[num][num];
            int y = 0;
            int z = 0;
            x = 0;
            y = 0;
            z = 0;
            search:

            while (y < num) {
                z = 0;
                while (z < num) {
                    x = 0;
                    while (x < stringCount) {
                        if (matrix[y][z].equals(announce[x])) {
                            judge[y][z] = 1;
                        }
                        x++;
                        if (x > stringCount) {
                            x = 0;
                        }
                    }
                    z++;
                }
                y++;
            }

            sumrow(judge);
        }

        System.out.println(""there are ""+amount+""lines in the matrix"");
    }

    /*  now you can write your own solution to hw0
     *  you can follow the instruction described below:
     * 
     *  1. read the rest content of the file
     *  2. store the announce strings (2nd line of the file) in variable announce
     *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
     *  4. compare the matrix and announce strings (this is the tricky part)
     *  5. output how many 'straight line' are there in the matrix
     * 
     *  [note]
     *  you can use every data structure in standard Java packages (Java 8 supported)
     *  the packages in stdlib.jar and algs4.jar are also available for you to use
     *
     *  [hint]
     *  1. you should check whether Java pass the variable by references or by values.
     *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
     *     useful for solving problems. 
     */
}

@d639149967613123c439b9551c294c26@"
"r04945021","3","0.92","105552","@ad6931e4bb51ae6a2d5b7a7670065058@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // strings announced for Bingo game         
            String[] announcedata = br.readLine().split("","");
            announce=Arrays.copyOf(announcedata,stringCount);

            for (int n = 0; n < num; n++) {
                String[] matrixdata = br.readLine().split("","");
                matrix[n]=Arrays.copyOf(matrixdata,num);
            }

            int StraightLine = 0;
            int SameCountrow = 0;
            int SameCountcol = 0;
           

            for (int n = 0; n < num; n++) {
                for (int m = 0; m < num; m++) {
              
                    for (int i = 0; i < stringCount; i++) {
                        if (matrix[n][m].equals(announce[i])) {
                            SameCountrow++;
                        }
                        if (matrix[m][n].equals(announce[i])) {
                            SameCountcol++;                                                    
                        }    
                        if (SameCountrow!=0 ||SameCountcol!=0)
                            break;
                    }
                }
                if (SameCountrow == num) {
                    StraightLine++;
                }                
                if (SameCountcol == num) {
                    StraightLine++;
                }
                       SameCountrow = 0;
                       SameCountcol = 0;
            }
           int SameCountdia1 = 0;
           int SameCountdia2 = 0;
            int Num = num-1;
            for (int n = 0; n < num; n++) {
                for (int i = 0; i < stringCount; i++) {
                    if (matrix[n][Num].equals(announce[i])) {
                        SameCountdia2++;
                    }
                    if (matrix[n][n].equals(announce[i])) {
                        SameCountdia1++;
                    }
                    if (SameCountdia2!=0 ||SameCountdia1!=0)
                            break;
                }
                Num--;
  
            }
            if (SameCountdia1 == num) {
                StraightLine++;
            }
              if (SameCountdia2== num) {
                StraightLine++;
            }
 
            System.out.printf(""%d\n"", StraightLine);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}
    


@ad6931e4bb51ae6a2d5b7a7670065058@"
"r04945021","10","0.091","105600","@8fcad6180a52d01be36aca5eaea17da7@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // strings announced for Bingo game         
            String[] announcedata = br.readLine().split("","");
            announce=Arrays.copyOf(announcedata,stringCount);
 int same=0;
            for (int i = 0; i < stringCount; i++) {
                for (int j = 0; j < stringCount; j++) {
                    if (announce[j].equals(announce[i])) {
                        same++;
                        
                    }
                    
                }
                if (same > 1) {
                    announce[i] = ""NONO"";
                }
                same=0;
            } 
            
            for (int n = 0; n < num; n++) {
                String[] matrixdata = br.readLine().split("","");
                matrix[n]=Arrays.copyOf(matrixdata,num);
            }

            int StraightLine = 0;
            int SameCountrow = 0;
            int SameCountcol = 0;
           

            for (int n = 0; n < num; n++) {
                for (int m = 0; m < num; m++) {
              
                    for (int i = 0; i < stringCount; i++) {    
                        if (matrix[n][m].equals(announce[i])) {
                            SameCountrow++;
                        }
                        if (matrix[m][n].equals(announce[i])) {
                            SameCountcol++;                                                    
                        }    
                    }
                }
                if (SameCountrow == num) {
                    StraightLine++;
                }                
                if (SameCountcol == num) {
                    StraightLine++;
                }
                       SameCountrow = 0;
                       SameCountcol = 0;
            }
           int SameCountdia1 = 0;
           int SameCountdia2 = 0;
            int Num = num-1;
            for (int n = 0; n < num; n++) {
                for (int i = 0; i < stringCount; i++) {
                    if (matrix[n][Num].equals(announce[i])) {
                        SameCountdia2++;
                    }
                    if (matrix[n][n].equals(announce[i])) {
                        SameCountdia1++;
                    }
                }
                Num--;
  
            }
            if (SameCountdia1 == num) {
                StraightLine++;
            }
              if (SameCountdia2== num) {
                StraightLine++;
            }
 
            System.out.printf(""%d\n"", StraightLine);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}
    


@8fcad6180a52d01be36aca5eaea17da7@"
"r04631041","0","0","0","@304550e60d9a4284ef1cd4b8c8597501@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.FileReader;
import java.io.BufferedReader;
/**
 *
 * @author USER
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        try(BufferedReader br = new BufferedReader(new FileReader(""Bingo.txt""))){
           
            String[] data = br.readLine().split("","");// read a line and split by ','
            int stringCount = Integer.parseInt(data[0]);// store the first integer in variable stringCount (number of announced strings)

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data2=br.readLine().split("","");
            for (int i=0 ; i<stringCount ; i++){
                announce[i]= data2[i];
                System.out.print(announce[i]+""\t"");
            }
                System.out.println("""");
            for (int i=0 ; i<num ; i++){
                String[] data_temp=br.readLine().split("","");
                for (int j=0 ; j<num ; j++){
                    matrix[i][j]=data_temp[j];
                    System.out.print(matrix[i][j]+""\t"");
                    }
                System.out.println("""");
                }
             int [][] checking = new int[num][num];
             for (int i=0 ; i<num ; i++){
                 for (int j=0 ; j<num ; j++)
                     checking[i][j]=0;
             }
             for (int p=0 ; p<stringCount ; p++){
             for (int i=0 ; i<num ; i++){
               for (int j=0 ; j<num ; j++){
               if (matrix[i][j].equals(announce[p]))
                   checking[i][j]=1;
               }
           }
                 }
             //for (int i=0 ; i<num ; i++){
             //    for (int j=0 ; j<num ; j++)
             //        System.out.print(checking[i][j]+""\t"");
             //    System.out.println("""");
             //}
             //---------------------------Find Bingo line---------------------//
            int counter=0,counter_diagonal1=0,counter_diagonal2=0;
            for (int i=0 ; i<num ; i++){
            if (checking[i][i]==1)
                counter_diagonal1++;
            }
            for (int i=0 ; i<num ; i++){
            if (checking[i][(num-1)-i]==1)
                counter_diagonal2++;
            }
            if (counter_diagonal1==num)
                counter++;
            if (counter_diagonal2==num)
                counter++;
            
                for (int i=0 ; i<num ; i++){
                    int temp=0,temp2=0;
                    for (int j=0 ; j<num ; j++){
                        temp+=checking[i][j];
                        temp2+=checking[j][i];
                    }
                    if (temp==num)
                        counter++;
                    if (temp2==num)
                        counter++;
            }
                System.out.println(""Bingo line equals to ""+counter+"" ."");
             }
}
}
            
               
                
        

    
    


@304550e60d9a4284ef1cd4b8c8597501@"
"r04228002","4","0.89","105184","@3d2c9f3e05b9431b9598ed151cf737e4@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.FileReader;
import java.io.BufferedReader;
import java.util.ArrayList;
import java.util.Arrays;
/**
 *
 * @author Lenovo
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //FileReader fr = new FileReader(args[0]);
        //BufferedReader br = new BufferedReader(fr);
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            //String[] data = br.readLine().split("","");
            //System.out.println(data);
            
            String line,tempstring;
            String[] tempArray= new String[3];
            ArrayList data1 = new ArrayList();
            while((line = br.readLine())!=null){
            // read a line and split by ','
                tempstring = line;
                tempArray = tempstring.split("","");
                //String[] data = br.readLine().split("","");
                for(int i=0;i< tempArray.length;i++)
                {          
                    data1.add(tempArray[i]);
                }
            }
            String[] data = new String[ data1.size() ];
            data1.toArray(data);
        
        int stringCount = Integer.parseInt(data[0]);
        int num = Integer.parseInt(data[1]);
        String[] announce = new String[stringCount];
        String[][] matrix = new String[num][num];
        //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
        
        //System.out.println(Arrays.deepToString(matrix));
        //System.out.println(Arrays.toString(data));
        announce[0]=data[2];
        announce[1]=data[3];
        for (int i = 0; i < 3; i++){
            for (int j = 0; j < 3; j++){
            matrix[i][j] = data[i*3+j+4];
        }
        }
        //System.out.println(Arrays.toString(announce));
        //System.out.println(Arrays.deepToString(matrix));
        
        int OutNum = 0;
        for (int i = 0; i < 3; i++){
            String S0 = matrix[i][0];
            String S1 = matrix[i][1];
            String S2 = matrix[i][2];
            if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
                  OutNum=OutNum+1;
                    }
            else {
                continue;
                }
        }
        for (int i = 0; i < 3; i++){
            String S0 = matrix[0][i];
            String S1 = matrix[1][i];
            String S2 = matrix[2][i];
            if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
                  OutNum=OutNum+1;
                    }
            else {
                continue;
                }
        }
        String S00 = matrix[0][0];
        String S11 = matrix[1][1];
        String S22 = matrix[2][2];
        if (Arrays.asList(announce).contains(S00) & Arrays.asList(announce).contains(S11) & Arrays.asList(announce).contains(S22)){
            OutNum = OutNum+1;
        }
        String S0 = matrix[0][2];
        String S1 = matrix[1][1];
        String S2 = matrix[2][0];
        if (Arrays.asList(announce).contains(S0) & Arrays.asList(announce).contains(S1) & Arrays.asList(announce).contains(S2)){
            OutNum = OutNum+1;
        }
        System.out.println(OutNum);
        }
} 
}
        
    
    




@3d2c9f3e05b9431b9598ed151cf737e4@"
"r03525008","2","0.14","103856","@841968214ea1c698a0d9030592bbc76d@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){


        // 先用指定路徑來讀檔案，上傳作業前要改回用args[0]來指定檔案名稱
        // 也就是以下兩行要刪掉，上面那一行要被註解掉的要加回來，最後面的catch要拿掉
//        try {
//            BufferedReader br = new BufferedReader(new FileReader(""src/input2.txt""));
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//             System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */

            // store the announce strings (2nd line of the file) in variable announce
            announce = br.readLine().split("","");

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0 ; i < num ; i++){
                matrix[i] = br.readLine().split("","");
            }

            // compare the matrix and announce strings (this is the tricky part)
            int straightLines = 0;
            // check for rows
            for(int i = 0 ; i < num ; i++){
                boolean bingo = true;
                for(int j = 0 ; j < num ; j++){
                    boolean equal = false;
                    for(String eachAnnounce:announce){
                        if(matrix[i][j].equals(eachAnnounce)){
                            equal = true;
                        }
                    }
                    if(!equal) bingo = false;
                }
                if(bingo) straightLines++;
            }

            // check for columns
            for(int j = 0 ; j < num ; j++){
                boolean bingo = true;
                for(int i = 0 ; i < num ; i++){
                    boolean equal = false;
                    for(String eachAnnounce:announce){
                        if(matrix[i][j].equals(eachAnnounce)){
                            equal = true;
                        }
                    }
                    if(!equal) bingo = false;
                }
                if(bingo) straightLines++;
            }

            // check for left-up to right-down diagonals
            boolean bingo1 = true;
            for(int i = 0 ; i < num ; i++){
                boolean equal = false;
                for(String eachAnnounce:announce){
                    if(matrix[i][i].equals(eachAnnounce)){
                        equal = true;
                    }
                }
                if(!equal) bingo1 = false;
            }
            if(bingo1) straightLines++;

            // check for right-up to left-down diagonals
            boolean bingo2 = true;
            for(int i = 0 ; i < num ; i++){
                boolean equal = false;
                for(String eachAnnounce:announce){
                    if(matrix[i][2-i].equals(eachAnnounce)){
                        equal = true;
                    }
                }
                if(!equal) bingo2 = false;
            }
            if(bingo2) straightLines++;

            // output how many 'straight line' are there in the matrix
            System.out.print(straightLines);


        }
        // ""catch""這部分在上傳前要刪除
//        catch (Exception e) {
//            System.out.println(e.getMessage());
//        }
    }
}

@841968214ea1c698a0d9030592bbc76d@"
"r03525008","2","0.2","103344","@af1c8b92bc42601f65ef7dc3a3b00d38@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){


        // 先用指定路徑來讀檔案，上傳作業前要改回用args[0]來指定檔案名稱
        // 也就是以下兩行要刪掉，上面那一行要被註解掉的要加回來，最後面的catch要拿掉
//        try {
//            BufferedReader br = new BufferedReader(new FileReader(""src/input2.txt""));
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//             System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */

            // store the announce strings (2nd line of the file) in variable announce
            announce = br.readLine().split("","");

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0 ; i < num ; i++){
                matrix[i] = br.readLine().split("","");
            }

            // compare the matrix and announce strings (this is the tricky part)
            int straightLines = 0;
            // check for rows
            for(int i = 0 ; i < num ; i++){
                boolean bingo = true;
                for(int j = 0 ; j < num ; j++){
                    boolean equal = false;
                    for(String eachAnnounce:announce){
                        if(matrix[i][j].equals(eachAnnounce)){
                            equal = true;
                        }
                    }
                    if(!equal) bingo = false;
                }
                if(bingo) straightLines++;
            }

            // check for columns
            for(int j = 0 ; j < num ; j++){
                boolean bingo = true;
                for(int i = 0 ; i < num ; i++){
                    boolean equal = false;
                    for(String eachAnnounce:announce){
                        if(matrix[i][j].equals(eachAnnounce)){
                            equal = true;
                        }
                    }
                    if(!equal) bingo = false;
                }
                if(bingo) straightLines++;
            }

            // check for left-up to right-down diagonals
            boolean bingo1 = true;
            for(int i = 0 ; i < num ; i++){
                boolean equal = false;
                for(String eachAnnounce:announce){
                    if(matrix[i][i].equals(eachAnnounce)){
                        equal = true;
                    }
                }
                if(!equal) bingo1 = false;
            }
            if(bingo1) straightLines++;

            // check for right-up to left-down diagonals
            boolean bingo2 = true;
            for(int i = 0 ; i < num ; i++){
                boolean equal = false;
                for(String eachAnnounce:announce){
                    if(matrix[i][2-i].equals(eachAnnounce)){
                        equal = true;
                    }
                }
                if(!equal) bingo2 = false;
            }
            if(bingo2) straightLines++;

            br.close();
            // output how many 'straight line' are there in the matrix
            System.out.print(straightLines);


        }
        // ""catch""這部分在上傳前要刪除
//        catch (Exception e) {
//            System.out.println(e.getMessage());
//        }
    }
}

@af1c8b92bc42601f65ef7dc3a3b00d38@"
"b03704074","0","0","0","@e5d713970a5306e975465bded222ecf4@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
        String first;
        int[]num;
        num=new int[2];
        Scanner sc = new Scanner(System.in);
        System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        first = sc.next();
        String[]FirstSplit = first.split("","");
        for (int i = 0; i < FirstSplit.length; i++)
            num[i] = Integer.parseInt(FirstSplit[i]);
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String str1;
        String str2;
        System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = sc.next();
        String[]AfterSplit1 = str1.split("","");
        for (int i = 0; i < AfterSplit1.length; i++)
            System.out.println(AfterSplit1[i]);
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   System.out.println(""請輸入第""+(i+1)+""排"");
                str2=sc.next();
                String[]AfterSplit2 = str2.split("","");
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=AfterSplit2[j];
                    
            
                }
            }
            
            for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }
            //workhere
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {
                back:
                {
                    for(int j=0;j< num[1];j++)
                    {
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][j]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][j]!=AfterSplit1[m])
                                break back;
                         } 
                    }
                }
                
                count++;
                }
                
                
                for (int i=0; i < num[1]; i++)
                {
                back:
                {
                    for(int j=0;j< num[1];j++)
                    {
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[j][i]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[j][i]!=AfterSplit1[m])
                                break back;
                         } 
                    }
                }
                
                count++;
                }
                back:
                {
                for (int i=0; i < num[1]; i++)
                {   
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][i]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][i]!=AfterSplit1[m])
                                break back;
                        }
                count++;
                
                }
                }
                
                back:
                {
                for (int i=0; i < num[1]; i++)
                {   
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][num[1]-i-1]!=AfterSplit1[m])
                                break back;
                        }
                count++;
                
                }
                }
                
                System.out.println(""有""+count+""條線"");
                
            
        }
}    


@e5d713970a5306e975465bded222ecf4@"
"r04921104","0","0","0","@fa7cc08d89fe414e82283fbd2775978d@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hw0;

/**
 *
 * @author daf
 */
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) { // TODO code application logic here

        //Read input and pre-proccess all attribute
        BufferedReader br = null;
        String sCurrentLine;
        List<String[]> info = new ArrayList<String[]>();

        int numAnnounced, size;
        String[] keyName;
        String[][] binngoMtx;

        try {
            br = new BufferedReader(new FileReader(args[0]));

            while ((sCurrentLine = br.readLine()) != null) {
                String[] Line = sCurrentLine.split("","");
                info.add(sCurrentLine.split("",""));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        numAnnounced = Integer.valueOf(info.get(0)[0]);
        size = Integer.valueOf(info.get(0)[1]);
        keyName = info.get(1);
        binngoMtx = new String[size][size];
        for (int i = 0; i < size; i++) {
            binngoMtx[i] = info.get(i + 2);
        }

        //System.out.println();
        //Start game
        boolean[][] correctMap = new boolean[size][size];
        int[] straightlineIdx = new int[size * 2 + 2];
        int numstraightLine = 0;

        for (int row = 0; row < size; row++) {
            for (int col = 0; col < size; col++) {
                for (int k = 0; k < keyName.length; k++) {
                    if (binngoMtx[row][col].equals(keyName[k])) {
                        correctMap[row][col] = true;
                        break;
                    }
                }
                if (!correctMap[row][col]) {
                    straightlineIdx[row] = -1;
                    straightlineIdx[size + col] = -1;
                    if (row == col) {
                        straightlineIdx[size * 2 - 1] = -1;
                    }
                    if (row + col == 2) {
                        straightlineIdx[size * 2] = -1;
                    }
                }
            }
        }

        for (int c = 0; c < straightlineIdx.length; c++) {
            if (straightlineIdx[c] != -1) {
                numstraightLine++;
            }
        }
        System.out.print(numstraightLine);

    }

}

@fa7cc08d89fe414e82283fbd2775978d@"
"b03704074","0","0","0","@1c34d6c535d4fc7993bb120dd2ad7d81@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
        String first;
        int[]num;
        num=new int[2];
        Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        first = sc.next();
        String[]FirstSplit = first.split("","");
        for (int i = 0; i < FirstSplit.length; i++)
            num[i] = Integer.parseInt(FirstSplit[i]);
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String str1;
        String str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = sc.next();
        String[]AfterSplit1 = str1.split("","");
        //for (int i = 0; i < AfterSplit1.length; i++)
            //System.out.println(AfterSplit1[i]);
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=sc.next();
                String[]AfterSplit2 = str2.split("","");
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=AfterSplit2[j];
                    
            
                }
            }
            
            for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    //System.out.println(matrix[i][j]);
                }
            
            }
            //workhere
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {
                back:
                {
                    for(int j=0;j< num[1];j++)
                    {
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][j]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][j]!=AfterSplit1[m])
                                break back;
                         } 
                    }
                }
                
                count++;
                }
                
                
                for (int i=0; i < num[1]; i++)
                {
                back:
                {
                    for(int j=0;j< num[1];j++)
                    {
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[j][i]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[j][i]!=AfterSplit1[m])
                                break back;
                         } 
                    }
                }
                
                count++;
                }
                back:
                {
                for (int i=0; i < num[1]; i++)
                {   
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][i]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][i]!=AfterSplit1[m])
                                break back;
                        }
                count++;
                
                }
                }
                
                back:
                {
                for (int i=0; i < num[1]; i++)
                {   
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][num[1]-i-1]!=AfterSplit1[m])
                                break back;
                        }
                count++;
                
                }
                }
                
                System.out.println(count);
                
            
        }
}    


@1c34d6c535d4fc7993bb120dd2ad7d81@"
"b03704074","0","0","0","@a9f2a6eaa510cd0cd9d832812785beba@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
        String first;
        int[]num;
        num=new int[2];
        Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        first = sc.next();
        String[]FirstSplit = first.split("","");
        for (int i = 0; i < FirstSplit.length; i++)
        {
            num[i] = Integer.parseInt(FirstSplit[i]);
            
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String str1;
        String str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = sc.next();
        String[]AfterSplit1 = str1.split("","");
        //for (int i = 0; i < AfterSplit1.length; i++)
            //System.out.println(AfterSplit1[i]);
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=sc.next();
                String[]AfterSplit2 = str2.split("","");
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=AfterSplit2[j];
                    
            
                }
            }
            
            for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    //System.out.println(matrix[i][j]);
                }
            
            }
            //workhere
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {
                back:
                {
                    for(int j=0;j< num[1];j++)
                    {
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][j]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][j]!=AfterSplit1[m])
                                break back;
                         } 
                    }
                }
                
                count++;
                }
                
                
                for (int i=0; i < num[1]; i++)
                {
                back:
                {
                    for(int j=0;j< num[1];j++)
                    {
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[j][i]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[j][i]!=AfterSplit1[m])
                                break back;
                         } 
                    }
                }
                
                count++;
                }
                back:
                {
                for (int i=0; i < num[1]; i++)
                {   
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][i]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][i]!=AfterSplit1[m])
                                break back;
                        }
                count++;
                
                }
                }
                
                back:
                {
                for (int i=0; i < num[1]; i++)
                {   
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][num[1]-i-1]!=AfterSplit1[m])
                                break back;
                        }
                count++;
                
                }
                }
                
                System.out.println(count);
                
            
        }
}    


@a9f2a6eaa510cd0cd9d832812785beba@"
"r04921104","0","0","0","@a6ee5d5ec62cd2cc66e9a1264e8d4811@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hw0;

/**
 *
 * @author daf
 */
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) { // TODO code application logic here

        //Read input and pre-proccess all attribute
        BufferedReader br = null;
        String sCurrentLine;
        List<String[]> info = new ArrayList<String[]>();

        int numAnnounced, size;
        String[] keyName;
        String[][] binngoMtx;

        try {
            br = new BufferedReader(new FileReader(args[0]));

            while ((sCurrentLine = br.readLine()) != null) {
                String[] Line = sCurrentLine.split("","");
                info.add(sCurrentLine.split("",""));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        numAnnounced = Integer.valueOf(info.get(0)[0]);
        size = Integer.valueOf(info.get(0)[1]);
        keyName = info.get(1);
        binngoMtx = new String[size][size];
        for (int i = 0; i < size; i++) {
            binngoMtx[i] = info.get(i + 2);
        }

        //System.out.println();
        //Start game
        boolean[][] correctMap = new boolean[size][size];
        int[] straightlineIdx = new int[size * 2 + 2];
        int numstraightLine = 0;

        for (int row = 0; row < size; row++) {
            for (int col = 0; col < size; col++) {
                for (int k = 0; k < keyName.length; k++) {
                    if (binngoMtx[row][col].equals(keyName[k])) {
                        correctMap[row][col] = true;
                        break;
                    }
                }
                if (!correctMap[row][col]) {
                    straightlineIdx[row] = -1;
                    straightlineIdx[size + col] = -1;
                    if (row == col) {
                        straightlineIdx[size * 2] = -1;
                    }
                    if (row + col == size-1) {
                        straightlineIdx[size * 2 + 1] = -1;
                    }
                }
            }
        }

        for (int c = 0; c < straightlineIdx.length; c++) {
            if (straightlineIdx[c] != -1) {
                numstraightLine++;
            }
        }
        
        System.out.print(numstraightLine);
    }
}

@a6ee5d5ec62cd2cc66e9a1264e8d4811@"
"b03704074","0","0","0","@18a56b7d9f06272035f0c5503cac6b34@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
        String first;
        int[]num;
        num=new int[2];
        Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = sc.next();
        String[]FirstSplit = first.split("","");
        for (int i = 0; i < FirstSplit.length; i++)
        {
            num[i] = Integer.parseInt(FirstSplit[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String str1;
        String str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = sc.next();
        String[]AfterSplit1 = str1.split("","");
        //for (int i = 0; i < AfterSplit1.length; i++)
            //System.out.println(AfterSplit1[i]);
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=sc.next();
                String[]AfterSplit2 = str2.split("","");
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=AfterSplit2[j];
                    
            
                }
            }
            
            for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    //System.out.println(matrix[i][j]);
                }
            
            }
            //workhere
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {
                back:
                {
                    for(int j=0;j< num[1];j++)
                    {
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][j]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][j]!=AfterSplit1[m])
                                break back;
                         } 
                    }
                }
                
                count++;
                }
                
                
                for (int i=0; i < num[1]; i++)
                {
                back:
                {
                    for(int j=0;j< num[1];j++)
                    {
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[j][i]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[j][i]!=AfterSplit1[m])
                                break back;
                         } 
                    }
                }
                
                count++;
                }
                back:
                {
                for (int i=0; i < num[1]; i++)
                {   
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][i]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][i]!=AfterSplit1[m])
                                break back;
                        }
                count++;
                
                }
                }
                
                back:
                {
                for (int i=0; i < num[1]; i++)
                {   
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1]==AfterSplit1[m]) 
                                break;
                            if(m==AfterSplit1.length-1 && matrix[i][num[1]-i-1]!=AfterSplit1[m])
                                break back;
                        }
                count++;
                
                }
                }
                
                System.out.println(count);
                
            
        }
}    


@18a56b7d9f06272035f0c5503cac6b34@"
"r04921104","0","0","0","@bba35db5e3f2ce204236ae14d2b3dbad@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package hw0;

/**
 *
 * @author daf
 */
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) { // TODO code application logic here

        //Read input and pre-proccess all attribute
        BufferedReader br = null;
        String sCurrentLine;
        List<String[]> info = new ArrayList<String[]>();

        int numAnnounced, size;
        String[] keyName;
        String[][] binngoMtx;

        try {
            br = new BufferedReader(new FileReader(args[0]));

            while ((sCurrentLine = br.readLine()) != null) {
                String[] Line = sCurrentLine.split("","");
                info.add(sCurrentLine.split("",""));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        numAnnounced = Integer.valueOf(info.get(0)[0]);
        size = Integer.valueOf(info.get(0)[1]);
        keyName = info.get(1);
        binngoMtx = new String[size][size];
        for (int i = 0; i < size; i++) {
            binngoMtx[i] = info.get(i + 2);
        }

        //System.out.println();
        //Start game
        boolean[][] correctMap = new boolean[size][size];
        int[] straightlineIdx = new int[size * 2 + 2];
        int numstraightLine = 0;

        for (int row = 0; row < size; row++) {
            for (int col = 0; col < size; col++) {
                for (int k = 0; k < numAnnounced; k++) {
                    if (binngoMtx[row][col].equals(keyName[k])) {
                        correctMap[row][col] = true;
                        break;
                    }
                }
                if (!correctMap[row][col]) {
                    straightlineIdx[row] = -1;
                    straightlineIdx[size + col] = -1;
                    if (row == col) {
                        straightlineIdx[size * 2] = -1;
                    }
                    if (row + col == size-1) {
                        straightlineIdx[size * 2 + 1] = -1;
                    }
                }
            }
        }

        for (int c = 0; c < straightlineIdx.length; c++) {
            if (straightlineIdx[c] != -1) {
                numstraightLine++;
            }
            //System.out.println(straightlineIdx[c]);
        }
        System.out.print(numstraightLine);
       
        /*
        for (int i = 0; i < correctMap.length; i++) {
            for (int j = 0; j < correctMap[0].length; j++) {
                System.out.print(correctMap[i][j] + "" "");
            }
            System.out.print(""\n"");
        }
        */
        /*
        for(int k =0 ; k < keyName.length; k++){
            System.out.print(keyName[k]+"" "");
        }
        */
    }
    

}

@bba35db5e3f2ce204236ae14d2b3dbad@"
"r04921044","10","0.088","105216","@fb3bc96c9241e6757061077dcbfcb09a@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {
    public static void main(String[] args) throws Exception {
        try (BufferedReader buffer = new BufferedReader(new FileReader(args[0]))) {
            String[] numbersString = buffer.readLine().split("","");
            int crossCount = Integer.parseInt(numbersString[0]);
            int mapLength = Integer.parseInt(numbersString[1]);

            String[] crossNames = buffer.readLine().split("","");

            Boolean[][] map = new Boolean[mapLength][mapLength];

            for (int i=0; i<mapLength; ++i) {
                String[] mapNames = buffer.readLine().split("","");
                for (int j=0; j<mapLength; ++j) {
                    if (Arrays.asList(crossNames).contains(mapNames[j])) {
                        map[i][j] = true;
                    }
                    else {
                        map[i][j] = false;
                    }
                }
            }

            Bingo bingo = new Bingo();
            System.out.println(bingo.checkLineCount(map, mapLength));
        }
    }

    public int checkLineCount(Boolean[][] map, int mapLength) {
        int count = 0;

        // count row
        for (int i=0; i<mapLength; ++i) {
            Boolean shouldIncrement = true;
            for (int j=0; j<mapLength; ++j) {
                if (!map[i][j]) {
                    shouldIncrement = false;
                    break;
                }
            }
            if (shouldIncrement) {
                count++;
            }
        }

        // count column
        for (int i=0; i<mapLength; ++i) {
            Boolean shouldIncrement = true;
            for (int j=0; j<mapLength; ++j) {
                if (!map[j][i]) {
                    shouldIncrement = false;
                    break;
                }
            }
            if (shouldIncrement) {
                count++;
            }
        }

        // count diagonal
        Boolean shouldIncrement = true;
        for (int i=0; i<mapLength; ++i) {
            if (!map[i][i]) {
                shouldIncrement = false;
                break;
            }
        }
        if (shouldIncrement) {
            count++;
        }

        shouldIncrement = true;
        for (int i=0; i<mapLength; ++i) {
            if (!map[i][mapLength - i - 1]) {
                shouldIncrement = false;
                break;
            }
        }
        if (shouldIncrement) {
            count++;
        }

        return count;
    }
}
@fb3bc96c9241e6757061077dcbfcb09a@"
"r04546032","8","0.84","104976","@7975462f2cdd0c0fbffeb759cf89320c@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
            if(stringCount <2 || num <2 )
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce= new LinkedHashSet<String>();
          
            
            String[][] matrix = new String[num][num];
            boolean [][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");
            
            if(line2.length != stringCount)
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
            
            for(int i = 0 ; i < stringCount ; i++)
            {
                Announce.add(line2[i]);
            }
            
               if(Announce.size()<2 || stringCount != Announce.size())
            {
                throw new ValueException(""重新輸入你的bingo"");
            }
             // initilization of a String array in Java
            //String[] announce = new String[Announce.size()];
            String[] announce = Announce.toArray(new String[Announce.size()]);
            //Announce.toArray(announce);
             
            for(int a = 0;a < num ;a++)
            {
               String[] line = br.readLine().split("","");
                for(int b = 0; b < num ; b++)
                {                    
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }
            
            for(int i = 0; i < stringCount ;i++)
            {
                for(int j =0; j < num;j++)
                {
                    for(int k = 0; k < num;k++)
                    {
                        if(announce[i].compareTo(matrix[j][k])==0)
                        {
                            bingo[j][k] = true;
                        }
                       
                    }
                }
            }
             
            
            int count1 = 0;
            int win = 0;
            for(int a =0;a<num;a++)
            {
                for(int b =0; b<num;b++)
                {
                    if(bingo[a][b] == true)
                    {
                        count1++;
                    }
                    else 
                    {
                        count1 = count1;
                    }
                }
                if(count1 == num)
                {
                    win++;
                }
                else
                {
                    count1 = 0;
                }
            }
 
            int count2 = 0;
            
            for(int c = 0; c< num;c++)
            {
                for(int r = 0; r < num;r++)
                {
                     if(bingo[r][c] == true)
                    {
                        count2++;
                    }
                    else 
                    {
                        count2 = count2;
                    }
                }
                 if(count2 == num)
                {
                    win++;
                }
                else
                {
                    count2 = 0;
                }
            }
       
            int count3 = 0;
             
            for(int a =0 ; a<num ; a++)
            {
                
                    if(  bingo[a][a] == true)
                    {
                        count3++;
                    }
                    
                    else 
                    {
                        count3 = count3;
                    }
               
            }
              if(count3 == num)
                {
                    win++;
                }
                else
                {
                    count3 = 0;
                }
           
            
            int count4 = 0;
             for(int a =0;a<num;a++)
            {

                    if(bingo[a][num-a-1] == true)
                    {
                        count4++;
                    }
                    else 
                    {
                        count4 = count4;
                    }
            }
                if(count4 == num)
                {
                    win++;
                }
                else
                {
                    count4 = 0;
                }
             System.out.println(win);
        }
    catch(ValueException e){
        System.out.println(e);
   
        }
    }
}

    
     class ValueException extends RuntimeException{
        public ValueException(String message)
        {
            super(message);
        }
}

@7975462f2cdd0c0fbffeb759cf89320c@"
"r04546032","9","0.9","106704","@72f137d506622890a98fc8bd33c596fa@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            if (stringCount < 2 || num < 2) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce = new LinkedHashSet<String>();

            String[][] matrix = new String[num][num];
            boolean[][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");

            if (line2.length != stringCount) {
                throw new ValueException(""重新輸入你的bingo"");
            }

            for (int i = 0; i < stringCount; i++) {
                Announce.add(line2[i]);
            }

            if (Announce.size() < 2 || stringCount != Announce.size()) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            // initilization of a String array in Java
            //String[] announce = new String[Announce.size()];
            String[] announce = Announce.toArray(new String[Announce.size()]);
            //Announce.toArray(announce);

            for (int a = 0; a < num; a++) {
                String[] line = br.readLine().split("","");
                for (int b = 0; b < num; b++) {
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }

            for (int i = 0; i < Announce.size(); i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < num; k++) {
                        if (announce[i].compareTo(matrix[j][k]) == 0) {
                            bingo[j][k] = true;
                        }

                    }
                }
            }

            int count1 = 0;
            int win = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (bingo[a][b] == true) {
                        count1++;
                    } else {
                        count1 = count1;
                    }
                }
                if (count1 == num) {
                    win++;
                } else {
                    count1 = 0;
                }
            }

            int count2 = 0;

            for (int c = 0; c < num; c++) {
                for (int r = 0; r < num; r++) {
                    if (bingo[r][c] == true) {
                        count2++;
                    } else {
                        count2 = count2;
                    }
                }
                if (count2 == num) {
                    win++;
                } else {
                    count2 = 0;
                }
            }

            int count3 = 0;

            for (int a = 0; a < num; a++) {

                if (bingo[a][a] == true) {
                    count3++;
                } else {
                    count3 = count3;
                }

            }
            if (count3 == num) {
                win++;
            } else {
                count3 = 0;
            }

            int count4 = 0;
            for (int a = 0; a < num; a++) {

                if (bingo[a][num - a - 1] == true) {
                    count4++;
                } else {
                    count4 = count4;
                }
            }
            if (count4 == num) {
                win++;
            } else {
                count4 = 0;
            }
            System.out.println(win);
        } catch (ValueException e) {
            System.out.println(e);
        }
    }
}

class ValueException extends RuntimeException {

    public ValueException(String message) {
        super(message);
    }
}

@72f137d506622890a98fc8bd33c596fa@"
"r04546032","0","0.89","106720","@47b02e73f4ce178b8fcd098a6b1b8e7d@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            if (stringCount < 2 || num < 2) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce = new LinkedHashSet<String>();

            String[][] matrix = new String[num][num];
            boolean[][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");

            if (line2.length != stringCount) {
                throw new ValueException(""重新輸入你的bingo"");
            }

            for (int i = 0; i < stringCount; i++) {
                Announce.add(line2[i]);
            }

            if (Announce.size() < 2 || stringCount != Announce.size()) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            // initilization of a String array in Java
            //String[] announce = new String[Announce.size()];
            String[] announce = Announce.toArray(new String[Announce.size()]);
            //Announce.toArray(announce);

            for (int a = 0; a < num; a++) {
                String[] line = br.readLine().split("","");
                for (int b = 0; b < num; b++) {
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }

            for (int i = 0; i < Announce.size(); i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < num; k++) {
                        if (announce[i].compareTo(matrix[j][k]) == 0) {
                            bingo[j][k] = true;
                        }

                    }
                }
            }

            int count1 = 0;
            int win = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (bingo[a][b] == true) {
                        count1++;
                    } else {
                        count1 = count1;
                    }
                }
                if (count1 == num) {
                    win++;
                } else {
                    count1 = 0;
                }
            }
            System.out.println(win);
            int count2 = 0;

            for (int c = 0; c < num; c++) {
                for (int r = 0; r < num; r++) {
                    if (bingo[r][c] == true) {
                        count2++;
                    } else {
                        count2 = count2;
                    }
                }
                if (count2 == num) {
                    win++;
                } else {
                    count2 = 0;
                }
            }
  System.out.println(win);
            int count3 = 0;

            for (int a = 0; a < num; a++) {

                if (bingo[a][a] == true) {
                    count3++;
                } else {
                    count3 = count3;
                }

            }
            if (count3 == num) {
                win++;
            } else {
                count3 = 0;
            }
  System.out.println(win);
            int count4 = 0;
            for (int a = 0; a < num; a++) {

                if (bingo[a][num - a - 1] == true) {
                    count4++;
                } else {
                    count4 = count4;
                }
            }
            if (count4 == num) {
                win++;
            } else {
                count4 = 0;
            }
            System.out.println(win);
        } catch (ValueException e) {
            System.out.println(e);
        }
    }
}

class ValueException extends RuntimeException {

    public ValueException(String message) {
        super(message);
    }
}

@47b02e73f4ce178b8fcd098a6b1b8e7d@"
"r04546032","9","0.89","105232","@72f137d506622890a98fc8bd33c596fa@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            if (stringCount < 2 || num < 2) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce = new LinkedHashSet<String>();

            String[][] matrix = new String[num][num];
            boolean[][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");

            if (line2.length != stringCount) {
                throw new ValueException(""重新輸入你的bingo"");
            }

            for (int i = 0; i < stringCount; i++) {
                Announce.add(line2[i]);
            }

            if (Announce.size() < 2 || stringCount != Announce.size()) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            // initilization of a String array in Java
            //String[] announce = new String[Announce.size()];
            String[] announce = Announce.toArray(new String[Announce.size()]);
            //Announce.toArray(announce);

            for (int a = 0; a < num; a++) {
                String[] line = br.readLine().split("","");
                for (int b = 0; b < num; b++) {
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }

            for (int i = 0; i < Announce.size(); i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < num; k++) {
                        if (announce[i].compareTo(matrix[j][k]) == 0) {
                            bingo[j][k] = true;
                        }

                    }
                }
            }

            int count1 = 0;
            int win = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (bingo[a][b] == true) {
                        count1++;
                    } else {
                        count1 = count1;
                    }
                }
                if (count1 == num) {
                    win++;
                } else {
                    count1 = 0;
                }
            }

            int count2 = 0;

            for (int c = 0; c < num; c++) {
                for (int r = 0; r < num; r++) {
                    if (bingo[r][c] == true) {
                        count2++;
                    } else {
                        count2 = count2;
                    }
                }
                if (count2 == num) {
                    win++;
                } else {
                    count2 = 0;
                }
            }

            int count3 = 0;

            for (int a = 0; a < num; a++) {

                if (bingo[a][a] == true) {
                    count3++;
                } else {
                    count3 = count3;
                }

            }
            if (count3 == num) {
                win++;
            } else {
                count3 = 0;
            }

            int count4 = 0;
            for (int a = 0; a < num; a++) {

                if (bingo[a][num - a - 1] == true) {
                    count4++;
                } else {
                    count4 = count4;
                }
            }
            if (count4 == num) {
                win++;
            } else {
                count4 = 0;
            }
            System.out.println(win);
        } catch (ValueException e) {
            System.out.println(e);
        }
    }
}

class ValueException extends RuntimeException {

    public ValueException(String message) {
        super(message);
    }
}

@72f137d506622890a98fc8bd33c596fa@"
"r04921051","3","0.87","106688","@d8fc9362624d3f468eeedc6da56d201b@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            //matrix for bingo
            int[][] matrix_int = new int[num][num];
            
            //read the rest content of the file
            String[] country = br.readLine().split("","");
            
            for(int i = 0; i < num; i++){
                matrix[i] = br.readLine().split("","");
            }

            for(int w = 0; w < stringCount; w++){                           
                for(int i = 0;i < num; i++){
                    for(int j = 0;j < num; j++){
                        if(country[w].equals(matrix[i][j]))
                            matrix_int[i][j] = 1;
                    }
                }
            }
            
            int line = 0;
            
            //row  
            for(int i = 0; i < num; i++){
                int temp = matrix_int[i][0];
                for(int j = 1; j < num; j ++){
                    temp = temp + matrix_int[i][j];
                    }
                if(temp == 3)
                    line++;
            }    

            //column  
            for(int i = 0; i < num; i++){
                int temp = matrix_int[0][i];
                for(int j = 1; j < num; j ++){
                    temp = temp + matrix_int[j][i];
                    }
                if(temp == 3)
                    line++;
            }  
            
            // ""\""  
            int temp = matrix_int[0][0];
            for(int i = 1; i < num; i++){
                temp = temp + matrix_int[i][i];
            }                         
            if(temp == 3)
            line++;
            
            // ""/""  
            int temp2 = matrix_int[num - 1][0];
            for(int i = 1; i < num; i++){
                temp2 = temp2 + matrix_int[num-1-i][i];
            }                         
            if(temp2 == 3)
            line++;
            
                
            System.out.println(line);
            
        }
    }
}

@d8fc9362624d3f468eeedc6da56d201b@"
"r03525008","2","0.18","106096","@272716f4ef39d836947ea0adfabdc91e@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//             System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */

            // store the announce strings (2nd line of the file) in variable announce
            String[] lines = br.readLine().split("","");
            for(int i = 0 ; i < stringCount ; i++){
                announce[i] = lines[i];
            }

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0 ; i < num ; i++){
                String[] line = br.readLine().split("","");
                for(int j = 0 ; j < num ; j++){
                    matrix[i][j] = line[j];
                }
            }

            // compare the matrix and announce strings (this is the tricky part)
            int straightLines = 0;
            // check for rows
            for(int i = 0 ; i < num ; i++){
                boolean bingo = true;
                for(int j = 0 ; j < num ; j++){
                    boolean equal = false;
                    for(String eachAnnounce:announce){
                        if(matrix[i][j].equals(eachAnnounce)){
                            equal = true;
                        }
                    }
                    if(!equal) bingo = false;
                }
                if(bingo) straightLines++;
            }

            // check for columns
            for(int j = 0 ; j < num ; j++){
                boolean bingo = true;
                for(int i = 0 ; i < num ; i++){
                    boolean equal = false;
                    for(String eachAnnounce:announce){
                        if(matrix[i][j].equals(eachAnnounce)){
                            equal = true;
                        }
                    }
                    if(!equal) bingo = false;
                }
                if(bingo) straightLines++;
            }

            // check for left-up to right-down diagonals
            boolean bingo1 = true;
            for(int i = 0 ; i < num ; i++){
                boolean equal = false;
                for(String eachAnnounce:announce){
                    if(matrix[i][i].equals(eachAnnounce)){
                        equal = true;
                    }
                }
                if(!equal) bingo1 = false;
            }
            if(bingo1) straightLines++;

            // check for right-up to left-down diagonals
            boolean bingo2 = true;
            for(int i = 0 ; i < num ; i++){
                boolean equal = false;
                for(String eachAnnounce:announce){
                    if(matrix[i][2-i].equals(eachAnnounce)){
                        equal = true;
                    }
                }
                if(!equal) bingo2 = false;
            }
            if(bingo2) straightLines++;
            br.close();
            // output how many 'straight line' are there in the matrix
            System.out.print(straightLines);

        }
    }
}

@272716f4ef39d836947ea0adfabdc91e@"
"r04921051","0","0.87","106688","@9e2e31c501cff259b9c9508ed7a38c25@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            //matrix for bingo
            int[][] matrix_int = new int[num][num];
            
            //read the rest content of the file
            String[] country = br.readLine().split("","");
            
            for(int i = 0; i < num; i++){
                matrix[i] = br.readLine().split("","");
            }

            for(int w = 0; w < stringCount; w++){                           
                for(int i = 0;i < num; i++){
                    for(int j = 0;j < num; j++){
                        if(country[w].equals(matrix[i][j]))
                            matrix_int[i][j] = 1;
                    }
                }
            }
            
            int line = 0;
          
            //row  
            for(int i = 0; i < num; i++){
                int temp = matrix_int[i][0];
                for(int j = 1; j < num; j ++){
                    temp = temp + matrix_int[i][j];
                    }
                if(temp == num)
                    line++;
            }    

            //column  
            for(int i = 0; i < num; i++){
                int temp = matrix_int[0][i];
                for(int j = 1; j < num; j ++){
                    temp = temp + matrix_int[j][i];
                    }
                if(temp == num)
                    line++;
            }  
            
            // ""\""  
            int temp = matrix_int[0][0];
            for(int i = 1; i < num; i++){
                temp = temp + matrix_int[i][i];
            }                         
            if(temp == num)
            line++;
            
            // ""/""  
            int temp2 = matrix_int[num - 1][0];
            for(int i = 1; i < num; i++){
                temp2 = temp2 + matrix_int[num-1-i][i];
            }                         
            if(temp2 == num)
            line++;
            
                
            System.out.println(line);
@9e2e31c501cff259b9c9508ed7a38c25@"
"r04921051","10","0.093","106384","@cf5a5689abbe8a7bed9d48da7ba1fc6b@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            //matrix for bingo
            int[][] matrix_int = new int[num][num];
            
            //read the rest content of the file
            String[] country = br.readLine().split("","");
            
            for(int i = 0; i < num; i++){
                matrix[i] = br.readLine().split("","");
            }

            for(int w = 0; w < stringCount; w++){                           
                for(int i = 0;i < num; i++){
                    for(int j = 0;j < num; j++){
                        if(country[w].equals(matrix[i][j]))
                            matrix_int[i][j] = 1;
                    }
                }
            }
            
            int line = 0;
          
            //row  
            for(int i = 0; i < num; i++){
                int temp = matrix_int[i][0];
                for(int j = 1; j < num; j ++){
                    temp = temp + matrix_int[i][j];
                    }
                if(temp == num)
                    line++;
            }    

            //column  
            for(int i = 0; i < num; i++){
                int temp = matrix_int[0][i];
                for(int j = 1; j < num; j ++){
                    temp = temp + matrix_int[j][i];
                    }
                if(temp == num)
                    line++;
            }  
            
            // ""\""  
            int temp = matrix_int[0][0];
            for(int i = 1; i < num; i++){
                temp = temp + matrix_int[i][i];
            }                         
            if(temp == num)
            line++;
            
            // ""/""  
            int temp2 = matrix_int[num - 1][0];
            for(int i = 1; i < num; i++){
                temp2 = temp2 + matrix_int[num-1-i][i];
            }                         
            if(temp2 == num)
            line++;
            
                
            System.out.println(line);
            
            /*
            for(int i = 0; i < stringCount; i++)
                System.out.printf(country[i] + "","");
            
            System.out.printf(""\n"");
            
            for(int i = 0; i < num; i++){
                for(int j=0; j < num; j++)
                System.out.printf(matrix_int[i][j] + "","");
                System.out.printf(""\n"");
            }
            */
        }
    }
}

@cf5a5689abbe8a7bed9d48da7ba1fc6b@"
"r04546014","10","0.093","105680","@45910f008cfe5ddd7459fefd7d01e927@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.FileReader;
import java.io.BufferedReader;

/**
 *
 * @author Jayden
 */
public class Bingo {

    public static void main(String[] args) throws Exception {
        //讀檔(利用args[0]為檔名input)
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data;
            data = br.readLine().split("","");
            //城市數量為第一個數
            int countryCount = Integer.valueOf(data[0]);
            //矩陣大小為第二個數
            int matrixSize = Integer.valueOf(data[1]);

            String[] announce = new String[countryCount];
            String[][] matrix = new String[matrixSize][matrixSize];
            //定義好兩個陣列用來存儲檔案資料
            announce = br.readLine().split("","");
            //第二行為宣告的國家
            for (int i = 0; i < matrixSize; i++) {
                matrix[i] = br.readLine().split("","");
            }
            //第三行以後為Bingo內容

            int count = 0;
            byte[][] checkMatrix = new byte[matrixSize][matrixSize];
            for (int i = 0; i < matrixSize; i++) {
                int a = 0;
                for (int j = 0; j < matrixSize; j++) {
                    for (int k = 0; k < countryCount; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            checkMatrix[i][j] = 1;
                            a++;
                            break;
                        }
                    }
                }
                if (a == matrixSize) {
                    count++;
                }
            }
            //將所有的字檢查一次看有沒有可以圈起來的(圈起來設為1)
            //順便檢查是否有橫線可以畫(一條線count就++)

            for (int i = 0; i < matrixSize; i++) {
                int b = 0;
                for (int j = 0; j < matrixSize; j++) {
                    if (checkMatrix[j][i] == 1) {
                        b++;
                    }
                }
                if (b == matrixSize) {
                    count++;
                }
            }
            //檢查是否有直線可以畫

            int c = 0;
            int d = 0;
            for (int i = 0; i < matrixSize; i++) {
                if (checkMatrix[i][i] == 1) {
                    c++;
                }
                if (checkMatrix[i][matrixSize - 1 - i] == 1) {
                    d++;
                }
            }
            if (c == matrixSize) {
                count++;
            }
            if (d == matrixSize) {
                count++;
            }
            //檢查是否有協線可以畫
            System.out.println(count);

        }
    }

}

@45910f008cfe5ddd7459fefd7d01e927@"
"r04945039","0","0","0","@0c29686ce2fd00ffdcb95940fd6bf8ac@package bingo;


import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    
    
    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] checkmatrix = new int[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            

            announce = br.readLine().split("","");
            
            for (int layer=0;layer<=num-1;layer++){
                String[] temp=(br.readLine().split("",""));
                for (int co=0;co<=num-1;co++){
                    
            matrix[layer][co]=temp[co];
            }
            }
          
            for (int f1 = 0;f1<num;f1++){
                for (int f2=0;f2<num;f2++){
                    for (int condition=0;condition<stringCount;condition++){
                        if ((announce[condition]).equals(matrix[f1][f2])) {
                           checkmatrix[f1][f2]=1;
                        } 
                        else 
                        if (checkmatrix[f1][f2]!=0){
                        checkmatrix[f1][f2]=1;}                    
                }              
            }             
            }
            int line=0;           
            //rowlines
            for(int linecheck=0;linecheck<num;linecheck++){
                int summary=0;
                for(int columncheck=0;columncheck<num;columncheck++){
                        if( checkmatrix[linecheck][columncheck]!=0){
                            summary+=1;
                        } 
                }
                if (summary==num){
                    line=line+1;
                }                             
                
            }
            
            //columnlines
             for(int linecheck=0;linecheck<num;linecheck++){
                int summary=0;
                for(int columncheck=0;columncheck<num;columncheck++){
                        if( checkmatrix[columncheck][linecheck]!=0){
                            summary+=1;
                        } 
                }
                if (summary==num){
                    line=line+1;
                }                             
                
            }
             
             
             //Cross
             int summaryc1 =0;
             for(int linecheck=0;linecheck<num;linecheck++){
                    if(checkmatrix[linecheck][linecheck]!=0){
                            summaryc1+=1;
                        }             
             }
              if (summaryc1==num){
                    line=line+1;
                }           
             
             int summaryc2=0;
             for(int linecheck=0;linecheck<num;linecheck++){          
                    if(checkmatrix[linecheck][num-1-linecheck] !=0){
                            summaryc2+=1;
                        } 
             }
              if (summaryc2==num){
                    line=line+1;}                                  
            
                            System.out.println(line);
           
           
       
        }
            
    
        }
        
        }
           

@0c29686ce2fd00ffdcb95940fd6bf8ac@"
"r04945039","0","0","0","@0c29686ce2fd00ffdcb95940fd6bf8ac@package bingo;


import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    
    
    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] checkmatrix = new int[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            

            announce = br.readLine().split("","");
            
            for (int layer=0;layer<=num-1;layer++){
                String[] temp=(br.readLine().split("",""));
                for (int co=0;co<=num-1;co++){
                    
            matrix[layer][co]=temp[co];
            }
            }
          
            for (int f1 = 0;f1<num;f1++){
                for (int f2=0;f2<num;f2++){
                    for (int condition=0;condition<stringCount;condition++){
                        if ((announce[condition]).equals(matrix[f1][f2])) {
                           checkmatrix[f1][f2]=1;
                        } 
                        else 
                        if (checkmatrix[f1][f2]!=0){
                        checkmatrix[f1][f2]=1;}                    
                }              
            }             
            }
            int line=0;           
            //rowlines
            for(int linecheck=0;linecheck<num;linecheck++){
                int summary=0;
                for(int columncheck=0;columncheck<num;columncheck++){
                        if( checkmatrix[linecheck][columncheck]!=0){
                            summary+=1;
                        } 
                }
                if (summary==num){
                    line=line+1;
                }                             
                
            }
            
            //columnlines
             for(int linecheck=0;linecheck<num;linecheck++){
                int summary=0;
                for(int columncheck=0;columncheck<num;columncheck++){
                        if( checkmatrix[columncheck][linecheck]!=0){
                            summary+=1;
                        } 
                }
                if (summary==num){
                    line=line+1;
                }                             
                
            }
             
             
             //Cross
             int summaryc1 =0;
             for(int linecheck=0;linecheck<num;linecheck++){
                    if(checkmatrix[linecheck][linecheck]!=0){
                            summaryc1+=1;
                        }             
             }
              if (summaryc1==num){
                    line=line+1;
                }           
             
             int summaryc2=0;
             for(int linecheck=0;linecheck<num;linecheck++){          
                    if(checkmatrix[linecheck][num-1-linecheck] !=0){
                            summaryc2+=1;
                        } 
             }
              if (summaryc2==num){
                    line=line+1;}                                  
            
                            System.out.println(line);
           
           
       
        }
            
    
        }
        
        }
           

@0c29686ce2fd00ffdcb95940fd6bf8ac@"
"b03704074","0","0","0","@a656262073e3b4c2714ab6798b45c7f6@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
        String first;
        int[]num;
        num=new int[2];
        Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = sc.next();
        String[]FirstSplit = first.split("","");
        for (int i = 0; i < FirstSplit.length; i++)
        {
            num[i] = Integer.parseInt(FirstSplit[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String str1;
        String str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = sc.next();
        String[]AfterSplit1 = str1.split("","");
        //for (int i = 0; i < AfterSplit1.length; i++)
            //System.out.println(AfterSplit1[i]);
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=sc.next();
                String[]AfterSplit2 = str2.split("","");
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=AfterSplit2[j];
                    
            
                }
            }
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][j].equals(AfterSplit1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[j][i].equals(AfterSplit1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][i].equals(AfterSplit1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(AfterSplit1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
}    


@a656262073e3b4c2714ab6798b45c7f6@"
"r04631034","0","0","0","@af79d9e1c37700dd248f43cb6256880b@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

/**
 *
 * @author acer
 */
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.*;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
//        try(BufferedReader br = new BufferedReader(new FileReader(""C:/Users/acer/Desktop/hw0/input.txt""))){
            
         String[] data = br.readLine().split("","");

               String line;
               String target = """";
               StringBuffer sb = new StringBuffer();
               while ((line = br.readLine()) != null) {
                    target += "" "" + line;
               }

               String[] numbersArray = target.split("" "");

               int count = numbersArray.length;

               for (int i = 1; i < numbersArray.length; i++) {
               }

//            // store the first integer in variable stringCount (number of announced strings)
               int stringCount = Integer.parseInt(data[0]);
//            System.out.println(data.length);
//            // store the second integer in variable num (dimension of matrix: num * num)            
               int num = Integer.parseInt(data[1]);

               String[] announce = new String[stringCount];
               String[][] matrix = new String[num][num];

               String test1 = numbersArray[1];
               String[] test2 = test1.split("","");
               for (int j = 0; j < test2.length; j++) {
                    announce[j] = test2[j];
               }

               for (int i = 2; i < numbersArray.length; i++) {
                    String test3 = numbersArray[i];
                    String[] test4 = test3.split("","");
                    for (int j = 0; j < test4.length; j++) {
                         matrix[i - 2][j] = test4[j];
                    }
               }
               ArrayList<Integer> Column = new ArrayList<Integer>();
               ArrayList<Integer> Row = new ArrayList<Integer>();

               for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                         for (int k = 0; k < announce.length; k++) {
                              if (matrix[i][j].equals(announce[k]) == true) {
                                   Column.add(i + 1);
                                   Row.add(j + 1);
                              }
                         }
                    }
               }
               int output = 0;

               for (int j = 0; j < num; j++) {
                    int storage = 0;
                    for (int i = 0; i < Row.size(); i++) {
                         if (Column.get(i) == j + 1) {
                              storage++;
                         }
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               for (int j = 0; j < num; j++) {
                    int storage = 0;
                    for (int i = 0; i < Row.size(); i++) {
                         if (Row.get(i) == j + 1) {
                              storage++;
                         }
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               int storage = 0;
               for (int i = 0; i < Row.size(); i++) {
                    if (Row.get(i) == Column.get(i)) {
                         storage++;
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               storage = 0;
               for (int i = 0; i < Row.size(); i++) {
                    if (Row.get(i) + Column.get(i) == num + 1) {
                         storage++;
                    }
                    if (storage == num) {
                         output++;
                         storage = 0;
                    }
               }

               System.out.println(output);
          }
     }

}



@af79d9e1c37700dd248f43cb6256880b@"
"r04631034","10","0.13","111712","@91757bc342ce023ceec98b51b05f4bcc@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author acer
 */
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.*;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
//        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
//        try(BufferedReader br = new BufferedReader(new FileReader(""C:/Users/acer/Desktop/hw0/input.txt""))){
            
                 In in = new In(args[0]);
                  
                  
                  
                  
                  
                  
         String[] data = in.readLine().split("","");

               String line;
               String target = """";
               StringBuffer sb = new StringBuffer();
               while ((line = in.readLine()) != null) {
                    target += "" "" + line;
               }

               String[] numbersArray = target.split("" "");

               int count = numbersArray.length;

               for (int i = 1; i < numbersArray.length; i++) {
               }

//            // store the first integer in variable stringCount (number of announced strings)
               int stringCount = Integer.parseInt(data[0]);
//            System.out.println(data.length);
//            // store the second integer in variable num (dimension of matrix: num * num)            
               int num = Integer.parseInt(data[1]);

               String[] announce = new String[stringCount];
               String[][] matrix = new String[num][num];

               String test1 = numbersArray[1];
               String[] test2 = test1.split("","");
               for (int j = 0; j < test2.length; j++) {
                    announce[j] = test2[j];
               }

               for (int i = 2; i < numbersArray.length; i++) {
                    String test3 = numbersArray[i];
                    String[] test4 = test3.split("","");
                    for (int j = 0; j < test4.length; j++) {
                         matrix[i - 2][j] = test4[j];
                    }
               }
               ArrayList<Integer> Column = new ArrayList<Integer>();
               ArrayList<Integer> Row = new ArrayList<Integer>();

               for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                         for (int k = 0; k < announce.length; k++) {
                              if (matrix[i][j].equals(announce[k]) == true) {
                                   Column.add(i + 1);
                                   Row.add(j + 1);
                              }
                         }
                    }
               }
               int output = 0;

               for (int j = 0; j < num; j++) {
                    int storage = 0;
                    for (int i = 0; i < Row.size(); i++) {
                         if (Column.get(i) == j + 1) {
                              storage++;
                         }
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               for (int j = 0; j < num; j++) {
                    int storage = 0;
                    for (int i = 0; i < Row.size(); i++) {
                         if (Row.get(i) == j + 1) {
                              storage++;
                         }
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               int storage = 0;
               for (int i = 0; i < Row.size(); i++) {
                    if (Row.get(i) == Column.get(i)) {
                         storage++;
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               storage = 0;
               for (int i = 0; i < Row.size(); i++) {
                    if (Row.get(i) + Column.get(i) == num + 1) {
                         storage++;
                    }
                    if (storage == num) {
                         output++;
                         storage = 0;
                    }
               }

               System.out.println(output);
          }
//     }

}



@91757bc342ce023ceec98b51b05f4bcc@"
"r04921028","0","0","0","@1b001450402161b352d6980c82ad9d1a@package bingo;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
/**
 *
 * @author DANNY
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        int line;
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String buf[] = br.readLine().split("","");
            line = 0;
            int line1 = 0;
            int line2 = 0;
            int line3 = 0;
            int line4 = 0;
            int num = Integer.valueOf(buf[0]);
            int size = Integer.valueOf(buf[1]);
            String[][] data;
            data = new String[size][size];   
            String buf2[] = br.readLine().split("","");
            for(int i=0;i<size;i++){
                String buf3[] = br.readLine().split("","");
                for(int j=0;j<size;j++){
                    data[i][j] = buf3[j];               
                }
            }
            int   numbeango = 2*(size+1);
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    for(int k=0;k<num;k++){
                        if(data[i][j].equals(buf2[k])){
                            data[i][j] = buf2[0];
                        }  
                    }
                }
            }
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    if(data[i][0].equals(data[i][j])){
                        line1++;
                    }
                    if(data[0][i].equals(data[j][i])){
                        line2++;
                    }
                    if(data[0][0].equals(data[j][j])){
                        line3++;
                    }
                    if(data[0][size-1].equals(data[j][size-1-j])){
                        line4++;
                    }
                }
                if(line1== size||line2==size||line3==size||line4==size){
                    line++;
                }
                line1=0;
                line2=0;
                line3=0;
                line4=0;
            }
        }
/*----------------------------------------------------------------------------*/       
       System.out.println(line); 
    }
    
}
@1b001450402161b352d6980c82ad9d1a@"
"b99611017","0","0.13","111712","@c7960a8d6a64e227fb6e4d00d7489dd6@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.*;
import java.util.Scanner;
import java.lang.String;
import java.util.Arrays;
import java.util.*;
/**
 *
 * @author 閮勗?曀?
 */
public class Bingo 
{
    public static void main(String[] args)throws IOException 
    {
        /*try{
            FileInputStream fstream = new FileInputStream(""input.txt"");
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
  //Read File Line By Line
            while ((strLine = br.readLine()) != null)  {

                System.out.println (strLine);
            }
            in.close();
        }
        catch (Exception e){//Catch exception if any
   
            System.err.println(""Error: "" + e.getMessage());
  
        }*/
        File Data=new File(""input.txt""); //霈?交?獢?
        int len=(int)Data.length();      //??獢摨?
        FileReader ReadData=new FileReader(Data); 
        char buffer[];
        buffer=new char[len];
        ReadData.read(buffer);
        String str = new String(buffer);
        
        String[] token = str.split(""\n""); //?摮葡
        String[] row1=token[0].split("",""); 
        String[] row2=token[1].split("","");
        String[] row3=token[2].split("","");
        String[] row4=token[3].split("","");
        String[] row5=token[4].split("","");
        int announcedNum = Integer.valueOf(row1[0]);
        int matrixLen = Integer.valueOf(row1[1]);
        int lineCounter=0;

        int [][]matrix=new int[matrixLen][matrixLen];//摰?????摮?憿
        for(int i=0;i<matrixLen;i++)//撠?飛??
        {
            for(int j=0;j<matrixLen;j++)
            {
                matrix[i][j]=0;
            }
        }
        for(int i=0;i<2;i++) //???怨????
        {
            for(int j=0;j<3;j++)
            {
               if(row2[i].equals(row3[j]))
               {
                   matrix[0][j]++;
               }
                    
                
            }
        }
        for(int i=0;i<2;i++)
        {
            for(int j=0;j<3;j++)
            {
               if(row2[i].equals(row4[j]))
               {
                   matrix[1][j]++;
               }
                    
                
            }
        }
        for(int i=0;i<2;i++)
        {
            for(int j=0;j<3;j++)
            {
               if(row2[i].equals(row5[j]))
               {
                   matrix[2][j]++;
               }
                    
                
            }
        }
        if(matrix[0][0]+matrix[0][1]+matrix[0][2]==3)
        {
            lineCounter++;
        }
        if(matrix[1][0]+matrix[1][1]+matrix[1][2]==3)
        {
            lineCounter++;
        }
        if(matrix[2][0]+matrix[2][1]+matrix[2][2]==3)
        {
            lineCounter++;
        }
        if(matrix[0][0]+matrix[1][0]+matrix[2][0]==3)
        {
            lineCounter++;
        }
        if(matrix[0][1]+matrix[1][1]+matrix[2][1]==3)
        {
            lineCounter++;
        }
        if(matrix[0][2]+matrix[1][2]+matrix[2][2]==3)
        {
            lineCounter++;
        }
        if(matrix[0][0]+matrix[1][1]+matrix[2][2]==3)
        {
            lineCounter++;
        }
        if(matrix[2][0]+matrix[1][1]+matrix[0][2]==3)
        {
            lineCounter++;
        }
        System.out.println(""甇斗?摮???""+str);
        System.out.println(""撌脣撣?""+row2[0]+""隞亙?""+row2[1]+""??+announcedNum+""??獢?);
        System.out.println(""???憭批?:""+matrixLen+""X""+matrixLen);
        System.out.println(""蝮賢??+lineCounter+""璇??"");
   
        

 
    }
    
}

@c7960a8d6a64e227fb6e4d00d7489dd6@"
"r04945039","0","0","0","@0c29686ce2fd00ffdcb95940fd6bf8ac@package bingo;


import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    
    
    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] checkmatrix = new int[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            

            announce = br.readLine().split("","");
            
            for (int layer=0;layer<=num-1;layer++){
                String[] temp=(br.readLine().split("",""));
                for (int co=0;co<=num-1;co++){
                    
            matrix[layer][co]=temp[co];
            }
            }
          
            for (int f1 = 0;f1<num;f1++){
                for (int f2=0;f2<num;f2++){
                    for (int condition=0;condition<stringCount;condition++){
                        if ((announce[condition]).equals(matrix[f1][f2])) {
                           checkmatrix[f1][f2]=1;
                        } 
                        else 
                        if (checkmatrix[f1][f2]!=0){
                        checkmatrix[f1][f2]=1;}                    
                }              
            }             
            }
            int line=0;           
            //rowlines
            for(int linecheck=0;linecheck<num;linecheck++){
                int summary=0;
                for(int columncheck=0;columncheck<num;columncheck++){
                        if( checkmatrix[linecheck][columncheck]!=0){
                            summary+=1;
                        } 
                }
                if (summary==num){
                    line=line+1;
                }                             
                
            }
            
            //columnlines
             for(int linecheck=0;linecheck<num;linecheck++){
                int summary=0;
                for(int columncheck=0;columncheck<num;columncheck++){
                        if( checkmatrix[columncheck][linecheck]!=0){
                            summary+=1;
                        } 
                }
                if (summary==num){
                    line=line+1;
                }                             
                
            }
             
             
             //Cross
             int summaryc1 =0;
             for(int linecheck=0;linecheck<num;linecheck++){
                    if(checkmatrix[linecheck][linecheck]!=0){
                            summaryc1+=1;
                        }             
             }
              if (summaryc1==num){
                    line=line+1;
                }           
             
             int summaryc2=0;
             for(int linecheck=0;linecheck<num;linecheck++){          
                    if(checkmatrix[linecheck][num-1-linecheck] !=0){
                            summaryc2+=1;
                        } 
             }
              if (summaryc2==num){
                    line=line+1;}                                  
            
                            System.out.println(line);
           
           
       
        }
            
    
        }
        
        }
           

@0c29686ce2fd00ffdcb95940fd6bf8ac@"
"r04921028","0","0","0","@5fddec5476a163ce748690084018c918@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
/**
 *
 * @author DANNY
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        int line;
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String buf[] = br.readLine().split("","");
            line = 0;
            int line1 = 0;
            int line2 = 0;
            int line3 = 0;
            int line4 = 0;
            int num = Integer.valueOf(buf[0]);
            int size = Integer.valueOf(buf[1]);
            String[][] data;
            data = new String[size][size];   
            String buf2[] = br.readLine().split("","");
            for(int i=0;i<size;i++){
                String buf3[] = br.readLine().split("","");
                for(int j=0;j<size;j++){
                    data[i][j] = buf3[j];               
                }
            }
            int   numbeango = 2*(size+1);
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    for(int k=0;k<num;k++){
                        if(data[i][j].equals(buf2[k])){
                            data[i][j] = buf2[0];
                        }  
                    }
                }
            }
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    if(data[i][0].equals(data[i][j])){
                        line1++;
                    }
                    if(data[0][i].equals(data[j][i])){
                        line2++;
                    }
                    if(data[0][0].equals(data[j][j])){
                        line3++;
                    }
                    if(data[0][size-1].equals(data[j][size-1-j])){
                        line4++;
                    }
                }
                if(line1== size||line2==size||line3==size||line4==size){
                    line++;
                }
                line1=0;
                line2=0;
                line3=0;
                line4=0;
            }
        }
/*----------------------------------------------------------------------------*/       
       System.out.println(line); 
    }
    
}

@5fddec5476a163ce748690084018c918@"
"r04631006","5","1","106944","@98c082cc3266651763aefd17cb224a36@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            int k = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    if (matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])) {
                        bin[i][j] = 1;

                        k = k + 1;
                    }
                }
            }
            
            k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@98c082cc3266651763aefd17cb224a36@"
"r04546032","9","0.91","105216","@3918ec0cbd45a4389b3a7c03ad821a07@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            if (stringCount < 2 || num < 2) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce = new LinkedHashSet<String>();

            String[][] matrix = new String[num][num];
            boolean[][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");

            if (line2.length != stringCount) {
                throw new ValueException(""重新輸入你的bingo"");
            }

            for (int i = 0; i < stringCount; i++) {
                Announce.add(line2[i]);
            }

            if (Announce.size() < 2 || stringCount != Announce.size()) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            // initilization of a String array in Java
            //String[] announce = new String[Announce.size()];
            String[] announce = Announce.toArray(new String[Announce.size()]);
            //Announce.toArray(announce);

            for (int a = 0; a < num; a++) {
                String[] line = br.readLine().split("","");
                for (int b = 0; b < num; b++) {
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }

            for (int i = 0; i < Announce.size(); i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < num; k++) {
                        if (announce[i].compareTo(matrix[j][k]) == 0) {
                            bingo[j][k] = true;
                        }

                    }
                }
            }

            int count1 = 0;
            int win = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (bingo[a][b] == true) {
                        count1++;
                    } else {
                        count1 = count1;
                    }
                }
                if (count1 == num) {
                    win++;
                } else {
                    count1 = 0;
                }
            }

            int count2 = 0;

            for (int c = 0; c < num; c++) {
                for (int r = 0; r < num; r++) {
                    if (bingo[r][c] == true) {
                        count2++;
                    } else {
                        count2 = count2;
                    }
                }
                if (count2 == num) {
                    win++;
                } else {
                    count2 = 0;
                }
            }

            int count3 = 0;

            for (int a = 0; a < num; a++) {

                if (bingo[a][a] == true) {
                    count3++;
                } else {
                    count3 = count3;
                }

            }
            if (count3 == num) {
                win++;
            } else {
                count3 = 0;
            }

            int count4 = 0;
            for (int a = 0; a < num; a++) {

                if (bingo[a][num - a - 1] == true) {
                    count4++;
                } else {
                    count4 = count4;
                }
            }
            if (count4 == num) {
                win++;
            } else {
                count4 = 0;
            }
            System.out.println(win);
        } 
    }
}

class ValueException extends RuntimeException {

    public ValueException(String message) {
        super(message);
    }
}

@3918ec0cbd45a4389b3a7c03ad821a07@"
"r04945039","10","0.096","105232","@f9d36dda5b570aa523f1a005a4a51be2@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    
    
    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] checkmatrix = new int[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            

            announce = br.readLine().split("","");
            
            for (int layer=0;layer<=num-1;layer++){
                String[] temp=(br.readLine().split("",""));
                for (int co=0;co<=num-1;co++){
                    
            matrix[layer][co]=temp[co];
            }
            }
          
            for (int f1 = 0;f1<num;f1++){
                for (int f2=0;f2<num;f2++){
                    for (int condition=0;condition<stringCount;condition++){
                        if ((announce[condition]).equals(matrix[f1][f2])) {
                           checkmatrix[f1][f2]=1;
                        } 
                        else 
                        if (checkmatrix[f1][f2]!=0){
                        checkmatrix[f1][f2]=1;}                    
                }              
            }             
            }
            int line=0;           
            //rowlines
            for(int linecheck=0;linecheck<num;linecheck++){
                int summary=0;
                for(int columncheck=0;columncheck<num;columncheck++){
                        if( checkmatrix[linecheck][columncheck]!=0){
                            summary+=1;
                        } 
                }
                if (summary==num){
                    line=line+1;
                }                             
                
            }
            
            //columnlines
             for(int linecheck=0;linecheck<num;linecheck++){
                int summary=0;
                for(int columncheck=0;columncheck<num;columncheck++){
                        if( checkmatrix[columncheck][linecheck]!=0){
                            summary+=1;
                        } 
                }
                if (summary==num){
                    line=line+1;
                }                             
                
            }
             
             
             //Cross
             int summaryc1 =0;
             for(int linecheck=0;linecheck<num;linecheck++){
                    if(checkmatrix[linecheck][linecheck]!=0){
                            summaryc1+=1;
                        }             
             }
              if (summaryc1==num){
                    line=line+1;
                }           
             
             int summaryc2=0;
             for(int linecheck=0;linecheck<num;linecheck++){          
                    if(checkmatrix[linecheck][num-1-linecheck] !=0){
                            summaryc2+=1;
                        } 
             }
              if (summaryc2==num){
                    line=line+1;}                                  
            
                            System.out.println(line);
           
           
       
        }
            
    
        }
        
        }
           

@f9d36dda5b570aa523f1a005a4a51be2@"
"r04631006","5","0.98","106928","@918d4f91a7f21f71648cbd1baccb701d@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            int k = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    if (matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])) {
                        bin[i][j] = 1;

                        k = k + 1;
                    }
                }
            }
            
            k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@918d4f91a7f21f71648cbd1baccb701d@"
"r04945025","10","0.098","106656","@80010d3f199c3c4f968d3f65f20995e1@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    
    
    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] checkmatrix = new int[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            

            announce = br.readLine().split("","");
            
            for (int layer=0;layer<=num-1;layer++){
                String[] temp=(br.readLine().split("",""));
                for (int co=0;co<=num-1;co++){
                    
            matrix[layer][co]=temp[co];
            }
            }
          
            for (int f1 = 0;f1<num;f1++){
                for (int f2=0;f2<num;f2++){
                    for (int condition=0;condition<stringCount;condition++){
                        if ((announce[condition]).equals(matrix[f1][f2])) {
                           checkmatrix[f1][f2]=1;
                        } 
                        else 
                        if (checkmatrix[f1][f2]!=0){
                        checkmatrix[f1][f2]=1;}                    
                }              
            }             
            }
            int line=0;           
            //rowlines
            for(int linecheck=0;linecheck<num;linecheck++){
                int summary=0;
                for(int columncheck=0;columncheck<num;columncheck++){
                        if( checkmatrix[linecheck][columncheck]!=0){
                            summary+=1;
                        } 
                }
                if (summary==num){
                    line=line+1;
                }                             
                
            }
            
            //columnlines
             for(int linecheck=0;linecheck<num;linecheck++){
                int summary=0;
                for(int columncheck=0;columncheck<num;columncheck++){
                        if( checkmatrix[columncheck][linecheck]!=0){
                            summary+=1;
                        } 
                }
                if (summary==num){
                    line=line+1;
                }                             
                
            }
             
             
             //Cross
             int summaryc1 =0;
             for(int linecheck=0;linecheck<num;linecheck++){
                    if(checkmatrix[linecheck][linecheck]!=0){
                            summaryc1+=1;
                        }             
             }
              if (summaryc1==num){
                    line=line+1;
                }           
             
             int summaryc2=0;
             for(int linecheck=0;linecheck<num;linecheck++){          
                    if(checkmatrix[linecheck][num-1-linecheck] !=0){
                            summaryc2+=1;
                        } 
             }
              if (summaryc2==num){
                    line=line+1;}                                  
            
                            System.out.println(line);
           
           
       
        }
            
    
        }
        
        }

@80010d3f199c3c4f968d3f65f20995e1@"
"b99611017","0","0","0","@c7e7d912f5934ea8ed2dccbcdf2ea7fb@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.*;
import java.util.Scanner;
import java.lang.String;
import java.util.Arrays;
import java.util.*;
/**
 *
 * @author 許志鵬
 */
public class Bingo 
{
    public static void main(String[] args)throws IOException 
    {
        /*try{
            FileInputStream fstream = new FileInputStream(""input.txt"");
            DataInputStream in = new DataInputStream(fstream);
            BufferedReader br = new BufferedReader(new InputStreamReader(in));
            String strLine;
  //Read File Line By Line
            while ((strLine = br.readLine()) != null)  {

                System.out.println (strLine);
            }
            in.close();
        }
        catch (Exception e){//Catch exception if any
   
            System.err.println(""Error: "" + e.getMessage());
  
        }*/
        File Data=new File(""input.txt""); //讀入檔案
        int len=(int)Data.length();      //抓檔案長度
        FileReader ReadData=new FileReader(Data); 
        char buffer[];
        buffer=new char[len];
        ReadData.read(buffer);
        String str = new String(buffer);
        
        String[] token = str.split(""\n""); //分割字串
        String[] row1=token[0].split("",""); 
        String[] row2=token[1].split("","");
        String[] row3=token[2].split("","");
        String[] row4=token[3].split("","");
        String[] row5=token[4].split("","");
        int announcedNum = Integer.valueOf(row1[0]);
        int matrixLen = Integer.valueOf(row1[1]);
        int lineCounter=0;

        int [][]matrix=new int[matrixLen][matrixLen];//宣告陣列存取題目
        for(int i=0;i<matrixLen;i++)//將陣列歸零
        {
            for(int j=0;j<matrixLen;j++)
            {
                matrix[i][j]=0;
            }
        }
        for(int i=0;i<2;i++) //開始畫記陣列
        {
            for(int j=0;j<3;j++)
            {
               if(row2[i].equals(row3[j]))
               {
                   matrix[0][j]++;
               }
                    
                
            }
        }
        for(int i=0;i<2;i++)
        {
            for(int j=0;j<3;j++)
            {
               if(row2[i].equals(row4[j]))
               {
                   matrix[1][j]++;
               }
                    
                
            }
        }
        for(int i=0;i<2;i++)
        {
            for(int j=0;j<3;j++)
            {
               if(row2[i].equals(row5[j]))
               {
                   matrix[2][j]++;
               }
                    
                
            }
        }
        if(matrix[0][0]+matrix[0][1]+matrix[0][2]==3)
        {
            lineCounter++;
        }
        if(matrix[1][0]+matrix[1][1]+matrix[1][2]==3)
        {
            lineCounter++;
        }
        if(matrix[2][0]+matrix[2][1]+matrix[2][2]==3)
        {
            lineCounter++;
        }
        if(matrix[0][0]+matrix[1][0]+matrix[2][0]==3)
        {
            lineCounter++;
        }
        if(matrix[0][1]+matrix[1][1]+matrix[2][1]==3)
        {
            lineCounter++;
        }
        if(matrix[0][2]+matrix[1][2]+matrix[2][2]==3)
        {
            lineCounter++;
        }
        if(matrix[0][0]+matrix[1][1]+matrix[2][2]==3)
        {
            lineCounter++;
        }
        if(matrix[2][0]+matrix[1][1]+matrix[0][2]==3)
        {
            lineCounter++;
        }
        System.out.println(""此文字檔為:""+str);
        System.out.println(""已公布:""+row2[0]+""以及""+row2[1]+""共""+announcedNum+""個答案"");
        System.out.println(""陣列大小:""+matrixLen+""X""+matrixLen);
        System.out.println(""總共有""+lineCounter+""條連線"");
   
        

 
    }
    
}

@c7e7d912f5934ea8ed2dccbcdf2ea7fb@"
"r04921028","0","0","0","@9270b4a7e7c149db1b8c297d8e5b99a9@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
/**
 *
 * @author DANNY
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String buf[] = br.readLine().split("","");
            int line = 0;
            int line1 = 0;
            int line2 = 0;
            int line3 = 0;
            int line4 = 0;
            int num = Integer.valueOf(buf[0]);
            int size = Integer.valueOf(buf[1]);
            String[][] data;
            data = new String[size][size];   
            String buf2[] = br.readLine().split("","");
            for(int i=0;i<size;i++){
                String buf3[] = br.readLine().split("","");
                for(int j=0;j<size;j++){
                    data[i][j] = buf3[j];               
                }
            }
            int   numbeango = 2*(size+1);
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    for(int k=0;k<num;k++){
                        if(data[i][j].equals(buf2[k])){
                            data[i][j] = buf2[0];
                        }  
                    }
                }
            }
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    if(data[i][0].equals(data[i][j])){
                        line1++;
                    }
                    if(data[0][i].equals(data[j][i])){
                        line2++;
                    }
                    if(data[0][0].equals(data[j][j])){
                        line3++;
                    }
                    if(data[0][size-1].equals(data[j][size-1-j])){
                        line4++;
                    }
                }
                if(line1== size||line2==size||line3==size||line4==size){
                    line++;
                }
                line1=0;
                line2=0;
                line3=0;
                line4=0;
            }
            System.out.println(line);
        }
    }
    
}

@9270b4a7e7c149db1b8c297d8e5b99a9@"
"r04921028","0","0","0","@8a38e92b9d7da0fed054999885af295f@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
/**
 *
 * @author DANNY
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String buf[] = br.readLine().split("","");
            int line = 0;
            int line1 = 0;
            int line2 = 0;
            int line3 = 0;
            int line4 = 0;
            int num = Integer.valueOf(buf[0]);
            int size = Integer.valueOf(buf[1]);
            String[][] data;
            data = new String[size][size];   
            String buf2[] = br.readLine().split("","");
            for(int i=0;i<size;i++){
                String buf3[] = br.readLine().split("","");
                for(int j=0;j<size;j++){
                    data[i][j] = buf3[j];               
                }
            }
            int   numbeango = 2*(size+1);
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    for(int k=0;k<num;k++){
                        if(data[i][j].equals(buf2[k])){
                            data[i][j] = buf2[0];
                        }  
                    }
                }
            }
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    if(data[i][0].equals(data[i][j])){
                        line1++;
                    }
                    if(data[0][i].equals(data[j][i])){
                        line2++;
                    }
                    if(data[0][0].equals(data[j][j])){
                        line3++;
                    }
                    if(data[0][size-1].equals(data[j][size-1-j])){
                        line4++;
                    }
                }
                if(line1== size||line2==size||line3==size||line4==size){
                    line++;
                }
                line1=0;
                line2=0;
                line3=0;
                line4=0;
            }
            System.out.printf(""%d"",line);
        }
    }
    
}

@8a38e92b9d7da0fed054999885af295f@"
"r04921028","6","0.97","105488","@4f1018a01a0e1060b337a1da0efd3ee1@import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
/**
 *
 * @author DANNY
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String buf[] = br.readLine().split("","");
            int line = 0;
            int line1 = 0;
            int line2 = 0;
            int line3 = 0;
            int line4 = 0;
            int num = Integer.valueOf(buf[0]);
            int size = Integer.valueOf(buf[1]);
            String[][] data;
            data = new String[size][size];   
            String buf2[] = br.readLine().split("","");
            for(int i=0;i<size;i++){
                String buf3[] = br.readLine().split("","");
                for(int j=0;j<size;j++){
                    data[i][j] = buf3[j];               
                }
            }
            int   numbeango = 2*(size+1);
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    for(int k=0;k<num;k++){
                        if(data[i][j].equals(buf2[k])){
                            data[i][j] = buf2[0];
                        }  
                    }
                }
            }
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    if(data[i][0].equals(data[i][j])){
                        line1++;
                    }
                    if(data[0][i].equals(data[j][i])){
                        line2++;
                    }
                    if(data[0][0].equals(data[j][j])){
                        line3++;
                    }
                    if(data[0][size-1].equals(data[j][size-1-j])){
                        line4++;
                    }
                }
                if(line1== size||line2==size||line3==size||line4==size){
                    line++;
                }
                line1=0;
                line2=0;
                line3=0;
                line4=0;
            }
            System.out.printf(""%d"",line);
        }
    }
    
}
@4f1018a01a0e1060b337a1da0efd3ee1@"
"r04546032","9","0.97","105216","@75683fe50b2058639547d49fa940a0d6@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            if (stringCount < 2 || num < 2) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce = new LinkedHashSet<String>();

            String[][] matrix = new String[num][num];
            boolean[][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");

            if (line2.length != stringCount) {
                throw new ValueException(""重新輸入你的bingo"");
            }

            for (int i = 0; i < stringCount; i++) {
                Announce.add(line2[i]);
            }

            if (Announce.size() < 2 || stringCount != Announce.size()) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            // initilization of a String array in Java
            //String[] announce = new String[Announce.size()];
            String[] announce = Announce.toArray(new String[Announce.size()]);
            //Announce.toArray(announce);

            for (int a = 0; a < num; a++) {
                String[] line = br.readLine().split("","");
                for (int b = 0; b < num; b++) {
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }

            for (int i = 0; i < Announce.size(); i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < num; k++) {
                        if (announce[i].compareTo(matrix[j][k]) == 0) {
                            bingo[j][k] = true;
                        }

                    }
                }
            }

            int count1 = 0;
            int win = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (bingo[a][b] == true) {
                        count1++;
                    } 
                }
                if (count1 == num) {
                    win++;
                } else {
                    count1 = 0;
                }
            }

            int count2 = 0;

            for (int c = 0; c < num; c++) {
                for (int r = 0; r < num; r++) {
                    if (bingo[r][c] == true) {
                        count2++;
                    } 
                }
                if (count2 == num) {
                    win++;
                } else {
                    count2 = 0;
                }
            }

            int count3 = 0;

            for (int a = 0; a < num; a++) {

                if (bingo[a][a] == true) {
                    count3++;
                } 
            }
            if (count3 == num) {
                win++;
            } 

            int count4 = 0;
            for (int a = 0; a < num; a++) {

                if (bingo[a][num - a - 1] == true) {
                    count4++;
                } 
            }
            if (count4 == num) {
                win++;
            } 
            System.out.println(win);
        } 
    }
}

class ValueException extends RuntimeException {

    public ValueException(String message) {
        super(message);
    }
}

@75683fe50b2058639547d49fa940a0d6@"
"r04546032","9","1.04","105184","@be7cebe6bb518225543e2241d87c57d4@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            if (stringCount < 2 || num < 2) {
                throw new ValueException(""重新輸入你的bingo"");
            }
            LinkedHashSet<String> Announce = new LinkedHashSet<String>();

            String[][] matrix = new String[num][num];
            boolean[][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");

            if (line2.length != stringCount) {
                throw new ValueException(""重新輸入你的bingo"");
            }

            for (int i = 0; i < stringCount; i++) {
                Announce.add(line2[i]);
            }

//            if (Announce.size() < 2 || stringCount != Announce.size()) {
//                throw new ValueException(""重新輸入你的bingo"");
//            }
            // initilization of a String array in Java
            //String[] announce = new String[Announce.size()];
            String[] announce = Announce.toArray(new String[Announce.size()]);
            //Announce.toArray(announce);

            for (int a = 0; a < num; a++) {
                String[] line = br.readLine().split("","");
                for (int b = 0; b < num; b++) {
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }

            for (int i = 0; i < Announce.size(); i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < num; k++) {
                        if (announce[i].compareTo(matrix[j][k]) == 0) {
                            bingo[j][k] = true;
                        }

                    }
                }
            }

            int count1 = 0;
            int win = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (bingo[a][b] == true) {
                        count1++;
                    } 
                }
                if (count1 == num) {
                    win++;
                } else {
                    count1 = 0;
                }
            }

            int count2 = 0;

            for (int c = 0; c < num; c++) {
                for (int r = 0; r < num; r++) {
                    if (bingo[r][c] == true) {
                        count2++;
                    } 
                }
                if (count2 == num) {
                    win++;
                } else {
                    count2 = 0;
                }
            }

            int count3 = 0;

            for (int a = 0; a < num; a++) {

                if (bingo[a][a] == true) {
                    count3++;
                } 
            }
            if (count3 == num) {
                win++;
            } 

            int count4 = 0;
            for (int a = 0; a < num; a++) {

                if (bingo[a][num - a - 1] == true) {
                    count4++;
                } 
            }
            if (count4 == num) {
                win++;
            } 
            System.out.println(win);
        } 
    }
}

class ValueException extends RuntimeException {

    public ValueException(String message) {
        super(message);
    }
}

@be7cebe6bb518225543e2241d87c57d4@"
"r04546032","9","0.91","105008","@67308edbf239a74d2a719e622b03ca4b@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

//            if (stringCount < 2 || num < 2) {
//                throw new ValueException(""重新輸入你的bingo"");
//            }
            LinkedHashSet<String> Announce = new LinkedHashSet<String>();

            String[][] matrix = new String[num][num];
            boolean[][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");

//            if (line2.length != stringCount) {
//                throw new ValueException(""重新輸入你的bingo"");
//            }

            for (int i = 0; i < stringCount; i++) {
                Announce.add(line2[i]);
            }

//            if (Announce.size() < 2 || stringCount != Announce.size()) {
//                throw new ValueException(""重新輸入你的bingo"");
//            }
            // initilization of a String array in Java
            //String[] announce = new String[Announce.size()];
            String[] announce = Announce.toArray(new String[Announce.size()]);
            //Announce.toArray(announce);

            for (int a = 0; a < num; a++) {
                String[] line = br.readLine().split("","");
                for (int b = 0; b < num; b++) {
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }

            for (int i = 0; i < Announce.size(); i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < num; k++) {
                        if (announce[i].compareTo(matrix[j][k]) == 0) {
                            bingo[j][k] = true;
                        }

                    }
                }
            }

            int count1 = 0;
            int win = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (bingo[a][b] == true) {
                        count1++;
                    } 
                }
                if (count1 == num) {
                    win++;
                } else {
                    count1 = 0;
                }
            }

            int count2 = 0;

            for (int c = 0; c < num; c++) {
                for (int r = 0; r < num; r++) {
                    if (bingo[r][c] == true) {
                        count2++;
                    } 
                }
                if (count2 == num) {
                    win++;
                } else {
                    count2 = 0;
                }
            }

            int count3 = 0;

            for (int a = 0; a < num; a++) {

                if (bingo[a][a] == true) {
                    count3++;
                } 
            }
            if (count3 == num) {
                win++;
            } 

            int count4 = 0;
            for (int a = 0; a < num; a++) {

                if (bingo[a][num - a - 1] == true) {
                    count4++;
                } 
            }
            if (count4 == num) {
                win++;
            } 
            System.out.println(win);
        } 
    }
}

class ValueException extends RuntimeException {

    public ValueException(String message) {
        super(message);
    }
}

@67308edbf239a74d2a719e622b03ca4b@"
"r04546032","9","0.8","103904","@67308edbf239a74d2a719e622b03ca4b@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.LinkedHashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

//            if (stringCount < 2 || num < 2) {
//                throw new ValueException(""重新輸入你的bingo"");
//            }
            LinkedHashSet<String> Announce = new LinkedHashSet<String>();

            String[][] matrix = new String[num][num];
            boolean[][] bingo = new boolean[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] line2 = br.readLine().split("","");

//            if (line2.length != stringCount) {
//                throw new ValueException(""重新輸入你的bingo"");
//            }

            for (int i = 0; i < stringCount; i++) {
                Announce.add(line2[i]);
            }

//            if (Announce.size() < 2 || stringCount != Announce.size()) {
//                throw new ValueException(""重新輸入你的bingo"");
//            }
            // initilization of a String array in Java
            //String[] announce = new String[Announce.size()];
            String[] announce = Announce.toArray(new String[Announce.size()]);
            //Announce.toArray(announce);

            for (int a = 0; a < num; a++) {
                String[] line = br.readLine().split("","");
                for (int b = 0; b < num; b++) {
                    matrix[a][b] = line[b];
                    bingo[a][b] = false;
                }
            }

            for (int i = 0; i < Announce.size(); i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < num; k++) {
                        if (announce[i].compareTo(matrix[j][k]) == 0) {
                            bingo[j][k] = true;
                        }

                    }
                }
            }

            int count1 = 0;
            int win = 0;
            for (int a = 0; a < num; a++) {
                for (int b = 0; b < num; b++) {
                    if (bingo[a][b] == true) {
                        count1++;
                    } 
                }
                if (count1 == num) {
                    win++;
                } else {
                    count1 = 0;
                }
            }

            int count2 = 0;

            for (int c = 0; c < num; c++) {
                for (int r = 0; r < num; r++) {
                    if (bingo[r][c] == true) {
                        count2++;
                    } 
                }
                if (count2 == num) {
                    win++;
                } else {
                    count2 = 0;
                }
            }

            int count3 = 0;

            for (int a = 0; a < num; a++) {

                if (bingo[a][a] == true) {
                    count3++;
                } 
            }
            if (count3 == num) {
                win++;
            } 

            int count4 = 0;
            for (int a = 0; a < num; a++) {

                if (bingo[a][num - a - 1] == true) {
                    count4++;
                } 
            }
            if (count4 == num) {
                win++;
            } 
            System.out.println(win);
        } 
    }
}

class ValueException extends RuntimeException {

    public ValueException(String message) {
        super(message);
    }
}

@67308edbf239a74d2a719e622b03ca4b@"
"r04921028","10","0.095","106960","@81e3264c24d95338bc9850dc6d966bab@import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
/**
 *
 * @author DANNY
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String buf[] = br.readLine().split("","");
            int line = 0;
            int line1 = 0;
            int line2 = 0;
            int line3 = 0;
            int line4 = 0;
            int num = Integer.valueOf(buf[0]);
            int size = Integer.valueOf(buf[1]);
            String[][] data;
            data = new String[size][size];   
            String buf2[] = br.readLine().split("","");
            for(int i=0;i<size;i++){
                String buf3[] = br.readLine().split("","");
                for(int j=0;j<size;j++){
                    data[i][j] = buf3[j];               
                }
            }
            int   numbeango = 2*(size+1);
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    for(int k=0;k<num;k++){
                        if(data[i][j].equals(buf2[k])){
                            data[i][j] = buf2[0];
                        }  
                    }
                }
            }
            for(int i=0;i<size;i++){
                for(int j=0;j<size;j++){
                    if(data[i][0].equals(data[i][j])){
                        line1++;
                    }
                    if(data[0][i].equals(data[j][i])){
                        line2++;
                    }
                }
                if(line1== size){
                        line++;
                    }
                if(line2== size){
                        line++;
                    }
                
                
                line1=0;
                line2=0;
            }
            for(int j=0;j<size;j++){
                    if(data[0][0].equals(data[j][j])){
                                line3++;
                            }
                    if(data[0][size-1].equals(data[j][size-1-j])){
                        line4++;
                    }
            }
                if(line3== size){
                        line++;
                    }
                if(line4== size){
                        line++;
                    }
            System.out.printf(""%d"",line);
        }
    }
    
}
@81e3264c24d95338bc9850dc6d966bab@"
"r03945012","0","0.22","107744","@b8012191e16596996be5ea7f65b22b12@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Scanner;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\n""
                    + ""dimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            // using Scanner (Step.1)
            Scanner inputdata = new Scanner(br);
            // read announce data by nextLine (Step.2)
            announce = inputdata.nextLine().split("","");

            // read dimension of matrix (Step.3)
            for (int i = 0; i < num; i++) {
                matrix[i] = inputdata.nextLine().split("","");
            }
            // label zeros(3*3)
            int[][] label = new int[num][num];
            for (int[] row : label) {
                java.util.Arrays.fill(row, 0);
            }
            // if match 0 being 1
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix[0].length; j++) {
                    for (String announce1 : announce) {
                        if (matrix[i][j].equals(announce1)) {
                            label[i][j] = 1;
                        }
                    }
                }
            }

            // caculate the number of bingo line
            int countline = 0;
            int diag_sum = 0;
            int antidiag_sum = 0;
            // bingo count total line
            for (int i = 0; i < num; i++) {
                // diag bingo
                diag_sum += label[i][i];
                antidiag_sum += label[i][2 - i];
                // row_col bingo
                int row_sum = 0;
                int col_sum = 0;
                for (int j = 0; j < num; j++) {
                    row_sum += label[i][j];
                    col_sum += label[j][i];
                }
                if (row_sum == 3)
                    countline++;
                if (col_sum == 3)
                    countline++;
            }
            if (diag_sum == 3)
                countline++;
            if (antidiag_sum == 3)
                countline++;
            System.out.printf(""outputline: %d\n"", countline);
        }

    }
}

@b8012191e16596996be5ea7f65b22b12@"
"r04945025","0","0.095","106960","@a04d1d2793507b232c73ca3b25f55466@123
@a04d1d2793507b232c73ca3b25f55466@"
"r04945025","0","0.095","106960","@a04d1d2793507b232c73ca3b25f55466@123
@a04d1d2793507b232c73ca3b25f55466@"
"r04945025","0","0.095","106960","@a04d1d2793507b232c73ca3b25f55466@123
@a04d1d2793507b232c73ca3b25f55466@"
"r04945025","0","0.22","107744","@0e8a5892a880af912c7de3e1c6d1a567@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.HashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            HashSet<String> hash = new HashSet<String>();
            String[] data = br.readLine().split("","");
            int count = 0;
            int set = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            boolean[][] bingo = new boolean[num][num];
            boolean[][] result = new boolean[2 * num + 2][num];
            boolean[] cmp = new boolean[num];

            Point2D point = new Point2D(2.1, 3.1);
            data = br.readLine().split("","");
            for(int i = 0; i < set; i++){
                if(!hash.contains(data[i])) hash.add(data[i]);
            }

            for(int i = 0; i < num; i++){
                data = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    if(hash.contains(data[j])) bingo[i][j] = true;
                }
            }

            for(int i = 0; i < num; i++){
                result[i] = bingo[i];
                for(int j = 0; j < num; j++) {
                    result[num + j][i] = bingo[i][j];
                    if(i == j){
                        result[2 * num][i] = bingo[i][i];
                    }
                    if(i + j == num - 1){
                        result[2 * num + 1][j] = bingo[i][j];
                    }
                }
            }

            /*for(int i = 0; i < 2 * num + 2; i++){
                if(i == num || i == 2*num){
                    System.err.printf(""-----------------------------------\n"");
                }
                for(int j = 0; j < num; j++){
                    System.err.printf(""%b\t"", result[i][j]);
                }
                System.err.printf(""\n"");
            }*/

            for(int i = 0; i < num; i++){
                cmp[i] = true;
            }

            for(int i = 0; i < num * 2 + 2; i++){
                if(Arrays.equals(cmp, result[i])) count++;
            }
            System.out.printf(""%d\n"", count);
        }
    }
}

@0e8a5892a880af912c7de3e1c6d1a567@"
"b03611011","0","1.02","106880","@1b33c5c686b0a2e399b761b724625eb4@
import java.io.FileReader;
import java.io.BufferedReader;
import java.sql.Array;
import java.util.Arrays;

public class Bingo {

    public static int amount = 0;

    private static void sumrow(int[][] d) {
        int order = 0;
        int column = 0;
        int sumrow = 0;
        int sumcolumn = 0;
        int l = d.length;

        while (order < l) {
            //sum of row
            while (column < l) {
                sumrow = d[order][column] + sumrow;
                sumcolumn = d[column][order] + sumcolumn;

                column++;
            }
            if (sumrow == l || sumcolumn == l) {
                amount++;
            }
            sumrow = 0;
            sumcolumn = 0;
            column = 0;
            order++;
        }
        order=0;
        sumrow=0;
        sumcolumn=0;
        while (order < (l + 1) / 2) {
            sumrow = d[(l - 1) / 2 + order][(l - 1) / 2 - order]+d[(l - 1) / 2 - order][(l - 1) / 2 + order] + sumrow;
            sumcolumn = d[(l - 1) / 2 + order][(l - 1) / 2 + order] +d[(l - 1) / 2 - order][(l - 1) / 2 - order]+ sumcolumn;
            order++;
        }
        if(d[(l - 1) / 2][(l - 1) / 2]==1){
        sumrow--;
        sumcolumn--;
        }
            if (sumrow == l) {
                amount++;
            }
            if ( sumcolumn == l) {
                amount++;
            }

    }

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            //read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            String[] data1 = br.readLine().split("","");
            int i = 0;
            while (i < stringCount) {
                announce[i] = data1[i];
                i++;
            }
            int k = 0;
            int x = 0;

            while (k < num) {
                String[] data2 = br.readLine().split("","");
                while (x < num) {
                    matrix[k][x] = data2[x];
                    x++;
                }
                x = 0;
                k++;
            }
            int[][] judge = new int[num][num];
            int y=0;
            int z;
            search:

            while (y < num) {
                z = 0;
                while (z < num) {
                    x = 0;
                    while (x < stringCount) {
                        if (matrix[y][z].equals(announce[x])) {
                            judge[y][z] = 1;
                        }
                        x++;
                        if (x > stringCount) {
                            x = 0;
                        }
                    }
                    z++;
                }
                y++;
            }

            sumrow(judge);
        }

        System.out.println(""there are ""+amount+"" lines in the matrix"");
    }

    /*  now you can write your own solution to hw0
     *  you can follow the instruction described below:
     * 
     *  1. read the rest content of the file
     *  2. store the announce strings (2nd line of the file) in variable announce
     *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
     *  4. compare the matrix and announce strings (this is the tricky part)
     *  5. output how many 'straight line' are there in the matrix
     * 
     *  [note]
     *  you can use every data structure in standard Java packages (Java 8 supported)
     *  the packages in stdlib.jar and algs4.jar are also available for you to use
     *
     *  [hint]
     *  1. you should check whether Java pass the variable by references or by values.
     *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
     *     useful for solving problems. 
     */
}

@1b33c5c686b0a2e399b761b724625eb4@"
"r03945012","0","0.24","108480","@01438ff8b376dc078857d62b31be6f7f@
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Scanner;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            
            Scanner inputdata = new Scanner(br);
            String[] data;
            data = inputdata.nextLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d%n""
                    + ""dimension of matrix: %d x %d%n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            // using Scanner (Step.1)
            // read announce data by nextLine (Step.2)
            String[] announce = inputdata.nextLine().split("","");

            // read dimension of matrix (Step.3)
            for (int i = 0; i < num; i++) {
                matrix[i] = inputdata.nextLine().split("","");
            }
            // label zeros(3*3)
            int[][] label = new int[num][num];
            for (int[] row : label) {
                java.util.Arrays.fill(row, 0);
            }
            // if match 0 being 1
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix[0].length; j++) {
                    for (String announce1 : announce) {
                        if (matrix[i][j].equals(announce1)) {
                            label[i][j] = 1;
                        }
                    }
                }
            }

            // caculate the number of bingo line
            int countline = 0;
            int diag_sum = 0;
            int antidiag_sum = 0;
            // bingo count total line
            for (int i = 0; i < num; i++) {
                // diag bingo
                diag_sum += label[i][i];
                antidiag_sum += label[i][2 - i];
                // row_col bingo
                int row_sum = 0;
                int col_sum = 0;
                for (int j = 0; j < num; j++) {
                    row_sum += label[i][j];
                    col_sum += label[j][i];
                }
                if (row_sum == 3)
                    countline++;
                if (col_sum == 3)
                    countline++;
            }
            if (diag_sum == 3)
                countline++;
            if (antidiag_sum == 3)
                countline++;
            System.out.printf(""outputline: %d%n"", countline);
        }

    }
}

@01438ff8b376dc078857d62b31be6f7f@"
"r03945012","0","0.23","109872","@9682ee867ca127b0414a482700395033@
import java.io.BufferedReader;
import java.util.Scanner;
import java.io.FileInputStream;
import java.io.InputStream;
import java.io.Reader;
import java.io.InputStreamReader;
public class Bingo {

    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try (InputStream in = new FileInputStream(args[0]);
             Reader reader = new InputStreamReader(in);
             BufferedReader br = new BufferedReader(reader)) {
        
            Scanner inputdata = new Scanner(br);
            String[] data;
            data = inputdata.nextLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d%n""
                    + ""dimension of matrix: %d x %d%n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            // using Scanner (Step.1)
            // read announce data by nextLine (Step.2)
            String[] announce = inputdata.nextLine().split("","");

            // read dimension of matrix (Step.3)
            for (int i = 0; i < num; i++) {
                matrix[i] = inputdata.nextLine().split("","");
            }
            // label zeros(3*3)
            int[][] label = new int[num][num];
            for (int[] row : label) {
                java.util.Arrays.fill(row, 0);
            }
            // if match 0 being 1
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix[0].length; j++) {
                    for (String announce1 : announce) {
                        if (matrix[i][j].equals(announce1)) {
                            label[i][j] = 1;
                        }
                    }
                }
            }

            // caculate the number of bingo line
            int countline = 0;
            int diag_sum = 0;
            int antidiag_sum = 0;
            // bingo count total line
            for (int i = 0; i < num; i++) {
                // diag bingo
                diag_sum += label[i][i];
                antidiag_sum += label[i][2 - i];
                // row_col bingo
                int row_sum = 0;
                int col_sum = 0;
                for (int j = 0; j < num; j++) {
                    row_sum += label[i][j];
                    col_sum += label[j][i];
                }
                if (row_sum == 3)
                    countline++;
                if (col_sum == 3)
                    countline++;
            }
            if (diag_sum == 3)
                countline++;
            if (antidiag_sum == 3)
                countline++;
            System.out.printf(""outputline: %d%n"", countline);
        }
    }
}


@9682ee867ca127b0414a482700395033@"
"b03611011","0","0.86","104624","@7ba348335d3c04fe7514bda7fb71c254@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static int amount = 0;
    public static void main(String[] args) throws Exception {
        System.out.println(args[0]);

        // read file from args[0] in Java 7 style
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            //read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            String[] data1 = br.readLine().split("","");
            int i = 0;
            while (i < stringCount) {
                announce[i] = data1[i];
                i++;
            }
            int k = 0;
            int x = 0;

            while (k < num) {
                String[] data2 = br.readLine().split("","");
                while (x < num) {
                    matrix[k][x] = data2[x];
                    x++;
                }
                x = 0;
                k++;
            }
            int[][] judge = new int[num][num];
            int y=0;
            int z;
            search:

            while (y < num) {
                z = 0;
                while (z < num) {
                    x = 0;
                    while (x < stringCount) {
                        if (matrix[y][z].equals(announce[x])) {
                            judge[y][z] = 1;
                        }
                        x++;
                        if (x > stringCount) {
                            x = 0;
                        }
                    }
                    z++;
                }
                y++;
            }

            sumrow(judge);
        }

        System.out.println(""there are ""+amount+"" lines in the matrix"");
    }
        private static void sumrow(int[][] d) {
        int order = 0;
        int column = 0;
        int sumrow = 0;
        int sumcolumn = 0;
        int l = d.length;

        while (order < l) {
            //sum of row
            while (column < l) {
                sumrow = d[order][column] + sumrow;
                sumcolumn = d[column][order] + sumcolumn;

                column++;
            }
            if (sumrow == l || sumcolumn == l) {
                amount++;
            }
            sumrow = 0;
            sumcolumn = 0;
            column = 0;
            order++;
        }
        order=0;
        sumrow=0;
        sumcolumn=0;
        while (order < (l + 1) / 2) {
            sumrow = d[(l - 1) / 2 + order][(l - 1) / 2 - order]+d[(l - 1) / 2 - order][(l - 1) / 2 + order] + sumrow;
            sumcolumn = d[(l - 1) / 2 + order][(l - 1) / 2 + order] +d[(l - 1) / 2 - order][(l - 1) / 2 - order]+ sumcolumn;
            order++;
        }
        if(d[(l - 1) / 2][(l - 1) / 2]==1){
        sumrow--;
        sumcolumn--;
        }
            if (sumrow == l) {
                amount++;
            }
            if ( sumcolumn == l) {
                amount++;
            }

    }
}

@7ba348335d3c04fe7514bda7fb71c254@"
"b03704074","0","0","0","@a656262073e3b4c2714ab6798b45c7f6@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
        String first;
        int[]num;
        num=new int[2];
        Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = sc.next();
        String[]FirstSplit = first.split("","");
        for (int i = 0; i < FirstSplit.length; i++)
        {
            num[i] = Integer.parseInt(FirstSplit[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String str1;
        String str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = sc.next();
        String[]AfterSplit1 = str1.split("","");
        //for (int i = 0; i < AfterSplit1.length; i++)
            //System.out.println(AfterSplit1[i]);
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=sc.next();
                String[]AfterSplit2 = str2.split("","");
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=AfterSplit2[j];
                    
            
                }
            }
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][j].equals(AfterSplit1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[j][i].equals(AfterSplit1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][i].equals(AfterSplit1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < AfterSplit1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(AfterSplit1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
}    


@a656262073e3b4c2714ab6798b45c7f6@"
"r03945012","0","0.2","107664","@2c54b81d7fd9a92ea0a1dea73f70f41f@

import java.io.BufferedReader;
import java.util.Scanner;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.InputStreamReader;

public class Bingo {

    public static void main(String[] args) throws Exception{
        
        InputStream is = null; 
        InputStreamReader isr = null;
        BufferedReader br = null;
        
        try{
            is = new FileInputStream(args[0]);
            isr = new InputStreamReader(is);
            br = new BufferedReader(isr);
            
            Scanner inputdata = new Scanner(br);
            String[] data;
            data = inputdata.nextLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d%n""
                    + ""dimension of matrix: %d x %d%n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            // using Scanner (Step.1)
            // read announce data by nextLine (Step.2)
            String[] announce = inputdata.nextLine().split("","");

            // read dimension of matrix (Step.3)
            for (int i = 0; i < num; i++) {
                matrix[i] = inputdata.nextLine().split("","");
            }
            // label zeros(3*3)
            int[][] label = new int[num][num];
            for (int[] row : label) {
                java.util.Arrays.fill(row, 0);
            }
            // if match 0 being 1
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix[0].length; j++) {
                    for (String announce1 : announce) {
                        if (matrix[i][j].equals(announce1)) {
                            label[i][j] = 1;
                        }
                    }
                }
            }

            // caculate the number of bingo line
            int countline = 0;
            int diag_sum = 0;
            int antidiag_sum = 0;
            // bingo count total line
            for (int i = 0; i < num; i++) {
                // diag bingo
                diag_sum += label[i][i];
                antidiag_sum += label[i][2 - i];
                // row_col bingo
                int row_sum = 0;
                int col_sum = 0;
                for (int j = 0; j < num; j++) {
                    row_sum += label[i][j];
                    col_sum += label[j][i];
                }
                if (row_sum == num)
                    countline++;
                if (col_sum == num)
                    countline++;
            }
            if (diag_sum == num)
                countline++;
            if (antidiag_sum == num)
                countline++;
            System.out.printf(""outputline: %d%n"", countline);
        }
        catch(FileNotFoundException | NumberFormatException e){
        }
        finally{
          // releases resources associated with the streams
            if(is!=null)
                is.close();
            if(isr!=null)
                isr.close();
            if(br!=null)
                br.close();
        }
    }
}


@2c54b81d7fd9a92ea0a1dea73f70f41f@"
"b03611011","0","0.86","103776","@436e6d722c50b41984b238bed31f62f4@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static int amount = 0;

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            //read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            String[] data1 = br.readLine().split("","");
            int i = 0;
            while (i < stringCount) {
                announce[i] = data1[i];
                i++;
            }
            int k = 0;
            int x = 0;

            while (k < num) {
                String[] data2 = br.readLine().split("","");
                while (x < num) {
                    matrix[k][x] = data2[x];
                    x++;
                }
                x = 0;
                k++;
            }
            int[][] judge = new int[num][num];
            int y = 0;
            int z;
            search:

            while (y < num) {
                z = 0;
                while (z < num) {
                    x = 0;
                    while (x < stringCount) {
                        if (matrix[y][z].equals(announce[x])) {
                            judge[y][z] = 1;
                        }
                        x++;
                        if (x > stringCount) {
                            x = 0;
                        }
                    }
                    z++;
                }
                y++;
            }

            sumrow(judge);
        }

        System.out.println(""there are "" + amount + "" lines in the matrix"");
    }

    private static void sumrow(int[][] d) {
        int order = 0;
        int column = 0;
        int sumrow = 0;
        int sumcolumn = 0;
        int l = d.length;

        while (order < l) {
            //sum of row
            while (column < l) {
                sumrow = d[order][column] + sumrow;
                sumcolumn = d[column][order] + sumcolumn;

                column++;
            }
            if (sumrow == l) {
                amount++;
            }
            if (sumcolumn == l) {
                amount++;
            }
            sumrow = 0;
            sumcolumn = 0;
            column = 0;
            order++;
        }
        order = 0;
        sumrow = 0;
        sumcolumn = 0;
        while (order < l) {
            sumrow = d[0 + order][0 + order] + sumrow;
            sumcolumn = d[l-1 - order][0 + order] + sumcolumn;
            order++;
        }
        if (sumrow == l) {
            amount++;
        }
        if (sumcolumn == l) {
            amount++;
        }

    }
}

@436e6d722c50b41984b238bed31f62f4@"
"r03525008","10","0.078","103616","@a2b4936678679874ef5ccbf277ea76dd@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){


            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//             System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             *
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             *
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems.
             */

            // store the announce strings (2nd line of the file) in variable announce
            String[] lines = br.readLine().split("","");
            for(int i = 0 ; i < stringCount ; i++){
                announce[i] = lines[i];
            }

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0 ; i < num ; i++){
                String[] line = br.readLine().split("","");
                for(int j = 0 ; j < num ; j++){
                    matrix[i][j] = line[j];
                }
            }

            // compare the matrix and announce strings (this is the tricky part)
            int straightLines = 0;

            // check for rows
            for(int i = 0 ; i < num ; i++){
                boolean bingo = true;
                for(int j = 0 ; j < num ; j++){
                    boolean equal = false;
                    for(String eachAnnounce:announce){
                        if(matrix[i][j].equals(eachAnnounce)){
                            equal = true;
                        }
                    }
                    if(!equal) bingo = false;
                }
                if(bingo) straightLines++;
            }

            // check for columns
            for(int j = 0 ; j < num ; j++){
                boolean bingo = true;
                for(int i = 0 ; i < num ; i++){
                    boolean equal = false;
                    for(String eachAnnounce:announce){
                        if(matrix[i][j].equals(eachAnnounce)){
                            equal = true;
                        }
                    }
                    if(!equal) bingo = false;
                }
                if(bingo) straightLines++;
            }

            // check for left-up to right-down diagonals
            boolean bingo1 = true;
            for(int i = 0 ; i < num ; i++){
                boolean equal = false;
                for(String eachAnnounce:announce){
                    if(matrix[i][i].equals(eachAnnounce)){
                        equal = true;
                    }
                }
                if(!equal) bingo1 = false;
            }
            if(bingo1) straightLines++;

            // check for right-up to left-down diagonals
            boolean bingo2 = true;
            for(int i = 0 ; i < num ; i++){
                boolean equal = false;
                for(String eachAnnounce:announce){
                    if(matrix[i][num-1-i].equals(eachAnnounce)){
                        equal = true;
                    }
                }
                if(!equal) bingo2 = false;
            }
            if(bingo2) straightLines++;
            br.close();
            // output how many 'straight line' are there in the matrix
            System.out.println(straightLines);


        }
    }
}

@a2b4936678679874ef5ccbf277ea76dd@"
"r04921104","10","0.073","103632","@5275c19d4314717e17ad3e24f7b7d164@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author daf
 */
import java.io.BufferedReader;
import java.io.FileNotFoundException;
import java.io.FileReader;
import java.io.IOException;
import java.util.List;
import java.util.ArrayList;

public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception { // TODO code application logic here

        //Read input and pre-proccess all attribute
        BufferedReader br = null;
        String sCurrentLine;
        List<String[]> info = new ArrayList<String[]>();

        int numAnnounced, size;
        String[] keyName;
        String[][] binngoMtx;

        try {
            br = new BufferedReader(new FileReader(args[0]));

            while ((sCurrentLine = br.readLine()) != null) {
                String[] Line = sCurrentLine.split("","");
                info.add(sCurrentLine.split("",""));
            }
        } catch (IOException e) {
            e.printStackTrace();
        }

        numAnnounced = Integer.valueOf(info.get(0)[0]);
        size = Integer.valueOf(info.get(0)[1]);
        keyName = info.get(1);
        binngoMtx = new String[size][size];
        for (int i = 0; i < size; i++) {
            binngoMtx[i] = info.get(i + 2);
        }

        //System.out.println();
        //Start game
        boolean[][] correctMap = new boolean[size][size];
        int[] straightlineIdx = new int[size * 2 + 2];
        int numstraightLine = 0;

        for (int row = 0; row < size; row++) {
            for (int col = 0; col < size; col++) {
                for (int k = 0; k < numAnnounced; k++) {
                    if (binngoMtx[row][col].equals(keyName[k])) {
                        correctMap[row][col] = true;
                        break;
                    }
                }
                if (!correctMap[row][col]) {
                    straightlineIdx[row] = -1;
                    straightlineIdx[size + col] = -1;
                    if (row == col) {
                        straightlineIdx[size * 2] = -1;
                    }
                    if (row + col == size-1) {
                        straightlineIdx[size * 2 + 1] = -1;
                    }
                }
            }
        }

        for (int c = 0; c < straightlineIdx.length; c++) {
            if (straightlineIdx[c] != -1) {
                numstraightLine++;
            }
            //System.out.println(straightlineIdx[c]);
        }
        System.out.print(numstraightLine);
       
        /*
        for (int i = 0; i < correctMap.length; i++) {
            for (int j = 0; j < correctMap[0].length; j++) {
                System.out.print(correctMap[i][j] + "" "");
            }
            System.out.print(""\n"");
        }
        */
        /*
        for(int k =0 ; k < keyName.length; k++){
            System.out.print(keyName[k]+"" "");
        }
        */
    }
    

}

@5275c19d4314717e17ad3e24f7b7d164@"
"b03611011","0","0.82","104272","@934be439cbd74cc43799dd0ffa94084f@
import java.io.FileReader;
import java.io.BufferedReader;
public class Bingo {
    private static int amount = 0;
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            //read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data1 = br.readLine().split("","");
            int i = 0;
            while (i < stringCount) {
                announce[i] = data1[i];
                i++;
            }
            int k = 0;
            int x = 0;
            while (k < num) {
                String[] data2 = br.readLine().split("","");
                while (x < num) {
                    matrix[k][x] = data2[x];
                    x++;
                }
                x = 0;
                k++;
            }
            int[][] judge = new int[num][num];
            int y = 0;
            int z;
            search:

            while (y < num) {
                z = 0;
                while (z < num) {
                    x = 0;
                    while (x < stringCount) {
                        if (matrix[y][z].equals(announce[x])) {
                            judge[y][z] = 1;
                        }
                        x++;
                        if (x > stringCount) {
                            x = 0;
                        }
                    }
                    z++;
                }
                y++;
            }
            sumrow(judge);
        }
        System.out.println(""there are "" + amount + "" lines in the matrix"");
    }
    private static void sumrow(int[][] d) {
        int order = 0;
        int column = 0;
        int sumrow = 0;
        int sumcolumn = 0;
        int l = d.length;

        while (order < l) {
            //sum of row
            while (column < l) {
                sumrow = d[order][column] + sumrow;
                sumcolumn = d[column][order] + sumcolumn;
                column++;
            }
            if (sumrow == l) {
                amount++;
            }
            if (sumcolumn == l) {
                amount++;
            }
            sumrow = 0;
            sumcolumn = 0;
            column = 0;
            order++;
        }
        order = 0;
        sumrow = 0;
        sumcolumn = 0;
        while (order < l) {
            sumrow = d[0 + order][0 + order] + sumrow;
            sumcolumn = d[l-1 - order][0 + order] + sumcolumn;
            order++;
        }
        if (sumrow == l) {
            amount++;
        }
        if (sumcolumn == l) {
            amount++;
        }

    }
}

@934be439cbd74cc43799dd0ffa94084f@"
"b03611011","0","0.87","103680","@4eec7790bf721ad24d8a39192299ca54@
import java.io.FileReader;
import java.io.BufferedReader;
public class Bingo {
    private static int amount = 0;
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            //read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data1 = br.readLine().split("","");
            int i = 0;
            while (i < stringCount) {
                announce[i] = data1[i];
                i++;
            }
            int k = 0;
            int x = 0;
            while (k < num) {
                String[] data2 = br.readLine().split("","");
                while (x < num) {
                    matrix[k][x] = data2[x];
                    x++;
                }
                x = 0;
                k++;
            }
            int[][] judge = new int[num][num];
            int y = 0;
            int z;
            search:

            while (y < num) {
                z = 0;
                while (z < num) {
                    x = 0;
                    while (x < stringCount) {
                        if (matrix[y][z].equals(announce[x])) {
                            judge[y][z] = 1;
                        }
                        x++;
                        if (x > stringCount) {
                            x = 0;
                        }
                    }
                    z++;
                }
                y++;
            }
            sumrow(judge);
        }
        System.out.println( amount );
    }
    private static void sumrow(int[][] d) {
        int order = 0;
        int column = 0;
        int sumrow = 0;
        int sumcolumn = 0;
        int l = d.length;

        while (order < l) {
            //sum of row
            while (column < l) {
                sumrow = d[order][column] + sumrow;
                sumcolumn = d[column][order] + sumcolumn;
                column++;
            }
            if (sumrow == l) {
                amount++;
            }
            if (sumcolumn == l) {
                amount++;
            }
            sumrow = 0;
            sumcolumn = 0;
            column = 0;
            order++;
        }
        order = 0;
        sumrow = 0;
        sumcolumn = 0;
        while (order < l) {
            sumrow = d[0 + order][0 + order] + sumrow;
            sumcolumn = d[l-1 - order][0 + order] + sumcolumn;
            order++;
        }
        if (sumrow == l) {
            amount++;
        }
        if (sumcolumn == l) {
            amount++;
        }

    }
}

@4eec7790bf721ad24d8a39192299ca54@"
"b03611011","10","0.081","103552","@629e58abf33f08dbcb2ab59b02b62596@
import java.io.FileReader;
import java.io.BufferedReader;
public class Bingo {
    private static int amount = 0;
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            //read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data1 = br.readLine().split("","");
            int i = 0;
            while (i < stringCount) {
                announce[i] = data1[i];
                i++;
            }
            int k = 0;
            int x = 0;
            while (k < num) {
                String[] data2 = br.readLine().split("","");
                while (x < num) {
                    matrix[k][x] = data2[x];
                    x++;
                }
                x = 0;
                k++;
            }
            int[][] judge = new int[num][num];
            int y = 0;
            int z;
            search:

            while (y < num) {
                z = 0;
                while (z < num) {
                    x = 0;
                    while (x < stringCount) {
                        if (matrix[y][z].equals(announce[x])) {
                            judge[y][z] = 1;
                        }
                        x++;
                        if (x > stringCount) {
                            x = 0;
                        }
                    }
                    z++;
                }
                y++;
            }
            sumrow(judge);
        }
        System.out.println( amount );
    }
    private static void sumrow(int[][] d) {
        int order = 0;
        int column = 0;
        int sumrow = 0;
        int sumcolumn = 0;
        int l = d.length;

        while (order < l) {
            //sum of row
            while (column < l) {
                sumrow = d[order][column] + sumrow;
                sumcolumn = d[column][order] + sumcolumn;
                column++;
            }
            if (sumrow == l) {
                amount++;
            }
            if (sumcolumn == l) {
                amount++;
            }
            sumrow = 0;
            sumcolumn = 0;
            column = 0;
            order++;
        }
        order = 0;
        sumrow = 0;
        sumcolumn = 0;
        while (order < l) {
            sumrow = d[0 + order][0 + order] + sumrow;
            sumcolumn = d[l-1 - order][0 + order] + sumcolumn;
            order++;
        }
        if (sumrow == l) {
            amount++;
        }
        if (sumcolumn == l) {
            amount++;
        }

    }
}

@629e58abf33f08dbcb2ab59b02b62596@"
"r04945025","0","0.081","103552","@0e8a5892a880af912c7de3e1c6d1a567@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.HashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            HashSet<String> hash = new HashSet<String>();
            String[] data = br.readLine().split("","");
            int count = 0;
            int set = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            boolean[][] bingo = new boolean[num][num];
            boolean[][] result = new boolean[2 * num + 2][num];
            boolean[] cmp = new boolean[num];

            Point2D point = new Point2D(2.1, 3.1);
            data = br.readLine().split("","");
            for(int i = 0; i < set; i++){
                if(!hash.contains(data[i])) hash.add(data[i]);
            }

            for(int i = 0; i < num; i++){
                data = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    if(hash.contains(data[j])) bingo[i][j] = true;
                }
            }

            for(int i = 0; i < num; i++){
                result[i] = bingo[i];
                for(int j = 0; j < num; j++) {
                    result[num + j][i] = bingo[i][j];
                    if(i == j){
                        result[2 * num][i] = bingo[i][i];
                    }
                    if(i + j == num - 1){
                        result[2 * num + 1][j] = bingo[i][j];
                    }
                }
            }

            /*for(int i = 0; i < 2 * num + 2; i++){
                if(i == num || i == 2*num){
                    System.err.printf(""-----------------------------------\n"");
                }
                for(int j = 0; j < num; j++){
                    System.err.printf(""%b\t"", result[i][j]);
                }
                System.err.printf(""\n"");
            }*/

            for(int i = 0; i < num; i++){
                cmp[i] = true;
            }

            for(int i = 0; i < num * 2 + 2; i++){
                if(Arrays.equals(cmp, result[i])) count++;
            }
            System.out.printf(""%d\n"", count);
        }
    }
}

@0e8a5892a880af912c7de3e1c6d1a567@"
"b01b01039","0","0.86","103744","@f5c5b31dcffd66cc86ba6e8ea4325dbf@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] board = new boolean[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            // read cross conuntry
            data = br.readLine().split("","");
            for(int idx = 0; idx < stringCount; idx++){
                announce[idx] = data[idx];
            }       
                        
            // read board
            for(int row = 0; row < num; row++) {
                data = br.readLine().split("","");
                for(int col = 0; col < num; col++){
                    matrix[row][col] = data[col];
                    board[row][col] = false;
                    //System.out.printf(""%s "",data[col]);
                }
                //System.out.printf(""\n"");
            }
            // answer reading
            //int ans = Integer.parseInt(br.readLine());
            // checking announce
            for(String s : announce){
                //System.out.println(s);
                for(int row = 0; row < num; row++){
                    for(int col = 0; col < num; col++){
                        board[row][col] = board[row][col] | s.equals(matrix[row][col]);
                        //System.out.printf(""%b "",board[row][col]);
                    }
                    //System.out.printf(""\n"");
                }
            }
            int count = game_check(board);
            System.out.println(count);
            //System.out.println(game_check(board) == ans);
            //return count;
        }
    }
    // for checking rows
    public static int row_check(boolean[][] board){
        int count = 0;// how many rows are straight lines
        boolean out =true; // Is the country be announced in the Bingo game
        int num = board[0].length;
        for(int row = 0; row < num; row++){
            int col = 0;
            out = true;
            do{
                out = out & board[row][col];
                col++;
            }while(out && col < num);
            if(out)count++;
            //System.out.println(out);
        }
        return count;
    }
    // for checking columns
    public static int col_check(boolean[][] board){
        return row_check(matrix_trans(board));
    }
    // for checking diagonals
    public static int cross_check(boolean[][] board){
        int count = 0;
        int num = board[0].length;
        boolean out_l2r = true;
        boolean out_r2l = true;
        // left to right diagonal check
        for(int idx = 0; idx < num; idx++){
            out_l2r = out_l2r & board[idx][idx];
            if(!out_l2r) break;
        }
        // right to left diagonal check
        for(int idx = 0; idx < num; idx++){
            out_r2l = out_r2l & board[idx][-idx-1+num];
            if(!out_r2l) break;
        }
        if(out_l2r)count++;
        //System.out.println(out_l2r);
        if(out_r2l)count++;
        //System.out.println(out_r2l);
        return count;
    }
    // Suming lines
    public static int game_check(boolean[][] board){
        return row_check(board) + col_check(board) + cross_check(board);
    }
    // For martrx transform row -> col; col -> row
    public static boolean[][] matrix_trans(boolean[][] matrix){
        int num = matrix[0].length;
        boolean[][] t_matrix = new boolean[num][num];
        for(int row = 0; row < num; row++){
            for(int col = 0; col < num; col++){
                t_matrix[row][col] = matrix[col][row];
            }
        }
        return t_matrix;
    }
}

@f5c5b31dcffd66cc86ba6e8ea4325dbf@"
"b01b01039","10","0.09","106416","@2ed04387945cf80b3392718dc5da197f@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] board = new boolean[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            // read cross conuntry
            data = br.readLine().split("","");
            for(int idx = 0; idx < stringCount; idx++){
                announce[idx] = data[idx];
            }       
                        
            // read board
            for(int row = 0; row < num; row++) {
                data = br.readLine().split("","");
                for(int col = 0; col < num; col++){
                    matrix[row][col] = data[col];
                    board[row][col] = false;
                    //System.out.printf(""%s "",data[col]);
                }
                //System.out.printf(""\n"");
            }
            // answer reading
            //int ans = Integer.parseInt(br.readLine());
            // checking announce
            for(String s : announce){
                //System.out.println(s);
                for(int row = 0; row < num; row++){
                    for(int col = 0; col < num; col++){
                        board[row][col] = board[row][col] | s.equals(matrix[row][col]);
                        //System.out.printf(""%b "",board[row][col]);
                    }
                    //System.out.printf(""\n"");
                }
            }
            int count = game_check(board);
            System.out.println(count);
            //System.out.println(game_check(board) == ans);
            //return count;
        }
    }
    // for checking rows
    public static int row_check(boolean[][] board){
        int count = 0;// how many rows are straight lines
        boolean out =true; // Is the country be announced in the Bingo game
        int num = board[0].length;
        for(int row = 0; row < num; row++){
            int col = 0;
            out = true;
            do{
                out = out & board[row][col];
                col++;
            }while(out && col < num);
            if(out)count++;
            //System.out.println(out);
        }
        return count;
    }
    // for checking columns
    public static int col_check(boolean[][] board){
        return row_check(matrix_trans(board));
    }
    // for checking diagonals
    public static int cross_check(boolean[][] board){
        int count = 0;
        int num = board[0].length;
        boolean out_l2r = true;
        boolean out_r2l = true;
        // left to right diagonal check
        for(int idx = 0; idx < num; idx++){
            out_l2r = out_l2r & board[idx][idx];
            if(!out_l2r) break;
        }
        // right to left diagonal check
        for(int idx = 0; idx < num; idx++){
            out_r2l = out_r2l & board[idx][-idx-1+num];
            if(!out_r2l) break;
        }
        if(out_l2r)count++;
        //System.out.println(out_l2r);
        if(out_r2l)count++;
        //System.out.println(out_r2l);
        return count;
    }
    // Suming lines
    public static int game_check(boolean[][] board){
        return row_check(board) + col_check(board) + cross_check(board);
    }
    // For martrx transform row -> col; col -> row
    public static boolean[][] matrix_trans(boolean[][] matrix){
        int num = matrix[0].length;
        boolean[][] t_matrix = new boolean[num][num];
        for(int row = 0; row < num; row++){
            for(int col = 0; col < num; col++){
                t_matrix[row][col] = matrix[col][row];
            }
        }
        return t_matrix;
    }
}

@2ed04387945cf80b3392718dc5da197f@"
"b03704074","0","0","0","@21ed77b1a04c03f411c96ab29432fc76@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
         
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = br.readLine().split("","");
        
        for (int i = 0; i < first.length; i++)
        {
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1;
        String[] str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                    
            
                }
            }
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}




@21ed77b1a04c03f411c96ab29432fc76@"
"b02611012","10","0.098","106864","@917744ca59b549c83fc23d276e02a62a@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.FileReader;
import java.io.BufferedReader;


/**
 *
 * @author user
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            announce = br.readLine().split("","");
            
            for (int i = 0; i < num; i++) {
                String[] mattemp = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = mattemp[j];
                }  
            }
            
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        if (matrix[i][j].equals(announce[k])==true) {
                            matrix[i][j]=(""1"");
                        }
                    }
                }
            }
            int bingocount=0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrix[i][j].equals(""1"")==true) {
                        if (j==num-1) {
                            bingocount++;
                        }
                    }
                    else
                        break;
                }
                for (int j = 0; j < num; j++) {
                    if (matrix[j][i].equals(""1"")==true) {
                        if (j==num-1) {
                            bingocount++;
                        }
                    }
                    else
                        break;
                }
            }
            for (int i = 0; i < num; i++) {
                if (matrix[i][i].equals(""1"")==true) {
                        if (i==num-1) {
                            bingocount++;
                        }
                    }
                    else
                        break;
            }
            for (int i = 0; i < num; i++) {
                if (matrix[i][num-1-i].equals(""1"")==true) {
                        if (i==num-1) {
                            bingocount++;
                        }
                    }
                    else
                        break;
            }
            
            

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""""+bingocount);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@917744ca59b549c83fc23d276e02a62a@"
"b03704074","0","0","0","@f81a065bb2cd4194b8a908c5403626a5@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
         
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = br.readLine().split("","");
        
        for (int i = 0; i < first.length; i++)
        {
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1;
        String[] str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                    
            
                }
            }
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}




@f81a065bb2cd4194b8a908c5403626a5@"
"b03704074","0","0","0","@f81a065bb2cd4194b8a908c5403626a5@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
         
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = br.readLine().split("","");
        
        for (int i = 0; i < first.length; i++)
        {
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1;
        String[] str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                    
            
                }
            }
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}




@f81a065bb2cd4194b8a908c5403626a5@"
"b03704074","0","0","0","@f81a065bb2cd4194b8a908c5403626a5@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
         
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = br.readLine().split("","");
        
        for (int i = 0; i < first.length; i++)
        {
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1;
        String[] str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                    
            
                }
            }
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}




@f81a065bb2cd4194b8a908c5403626a5@"
"b03704074","0","0","0","@f81a065bb2cd4194b8a908c5403626a5@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
         
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = br.readLine().split("","");
        
        for (int i = 0; i < first.length; i++)
        {
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1;
        String[] str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                    
            
                }
            }
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}




@f81a065bb2cd4194b8a908c5403626a5@"
"b03704074","10","0.1","106672","@c99b5b841269eb8e51c678a9845325d1@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
         
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = br.readLine().split("","");
        
        for (int i = 0; i < first.length; i++)
        {
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1;
        String[] str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
        
        
        
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                    
            
                }
            }
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}




@c99b5b841269eb8e51c678a9845325d1@"
"b03704074","10","0.085","104432","@5e235be865dd10bd3facce3c4c94be13@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
         
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = br.readLine().split("","");
        
        for (int i = 0; i < first.length; i++)
        {
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        flag=0;
        while(flag==0)
        {flag=1;
            str1 = br.readLine().split("","");
            for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    flag=0;
                }
            }
        }
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                    
            
                }
            }
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}




@5e235be865dd10bd3facce3c4c94be13@"
"r04631034","10","0.146","111648","@7470986df618ef6ca955a0eeb5754240@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


/**
 *
 * @author acer
 */
import java.io.FileReader;
import java.io.BufferedReader;
import java.util.*;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
//        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
//        try(BufferedReader br = new BufferedReader(new FileReader(""C:/Users/acer/Desktop/hw0/input.txt""))){
            
                 In in = new In(args[0]);
                  
                  
                  
                  
                  
//          String[] data = br.readLine().split("","");
                 
         String[] data = in.readLine().split("","");

               String line;
               String target = """";
               StringBuffer sb = new StringBuffer();
               while ((line = in.readLine()) != null) {
//               while ((line = br.readLine()) != null) {
                        
                    target += "" "" + line;
               }

               String[] numbersArray = target.split("" "");

               int count = numbersArray.length;

               for (int i = 1; i < numbersArray.length; i++) {
               }

//            // store the first integer in variable stringCount (number of announced strings)
               int stringCount = Integer.parseInt(data[0]);
//            System.out.println(data.length);
//            // store the second integer in variable num (dimension of matrix: num * num)            
               int num = Integer.parseInt(data[1]);

               String[] announce = new String[stringCount];
               String[][] matrix = new String[num][num];

               String test1 = numbersArray[1];
               String[] test2 = test1.split("","");
               for (int j = 0; j < test2.length; j++) {
                    announce[j] = test2[j];
               }

               for (int i = 2; i < numbersArray.length; i++) {
                    String test3 = numbersArray[i];
                    String[] test4 = test3.split("","");
                    for (int j = 0; j < test4.length; j++) {
                         matrix[i - 2][j] = test4[j];
                    }
               }
               ArrayList<Integer> Column = new ArrayList<Integer>();
               ArrayList<Integer> Row = new ArrayList<Integer>();

               for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                         for (int k = 0; k < announce.length; k++) {
                              if (matrix[i][j].equals(announce[k]) == true) {
                                   Column.add(i + 1);
                                   Row.add(j + 1);
                              }
                         }
                    }
               }
               int output = 0;

               for (int j = 0; j < num; j++) {
                    int storage = 0;
                    for (int i = 0; i < Row.size(); i++) {
                         if (Column.get(i) == j + 1) {
                              storage++;
                         }
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               for (int j = 0; j < num; j++) {
                    int storage = 0;
                    for (int i = 0; i < Row.size(); i++) {
                         if (Row.get(i) == j + 1) {
                              storage++;
                         }
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               
               int storage = 0;
               for (int i = 0; i < Row.size(); i++) {
                    if (Row.get(i) == Column.get(i)) {
                         storage++;
                    }
                    if (storage == num) {
                         output++;
                    }
               }
               
               storage = 0;
               for (int i = 0; i < Row.size(); i++) {
                    if (Row.get(i) + Column.get(i) == num + 1) {
                         storage++;
                    }
                    if (storage == num) {
                         output++;
                         storage = 0;
                    }
               }
               if(output != 0 )
               {
               System.out.println(output);
               }
               else 
               {
                         System.out.println(""0"");
               }
          }
//     }

}



@7470986df618ef6ca955a0eeb5754240@"
"b03611033","0","0","0","@4fccfe04684de7a72737f7b8ac7198f6@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;

/**
 *
 * @author user
 */
public class Bingo {
    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */    
    public static void main(String[] args) throws Exception 
    {
            // read file from args[0] in Java 7 style
            try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            //String str = null;
            // if((str = br.readLine()) != null)
            
            int [] strcount = new int[stringCount];
            int [] strnum = new int[num];
            
            data = br.readLine().split("","");
            for (int i=0;i<stringCount;i++)
            {
                announce[i]=data[i];
                strcount[i]=i;
                //System.out.println(announce[i]);
            }
            
            int[][] aftercom = new int[num][num];
            for(int j=0;j<num;j++)
            {
                strnum[j]=j;
                data = br.readLine().split("","");
                for(int k=0;k<num;k++)
                {
                    matrix[j][k]=data[k];
                    for(int i:strcount)
                    {
                        if(matrix[j][k].equals(announce[i]))
                        {
                            aftercom[j][k]=1;
                            break;
                        }
                    }
                }
            }
            int bingoline=0;
            for(int j:strnum)
            {
                for(int k:strnum)
                {
                    if(aftercom[j][k]!=1)
                    {
                        break;
                    }
                    if(k==num-1)
                    {
                        bingoline++;
                    }
                }  
            }
            for(int j:strnum)
            {
                for(int k:strnum)
                {
                    if(aftercom[k][j]!=1)
                    {
                        break;
                    }
                    if(k==num-1)
                    {
                        bingoline++;
                    }
                }
            }
            
            for(int j:strnum)
            {
                if(aftercom[j][j]!=1)
                {
                    break;
                }
                if(j==num-1)
                {
                    bingoline++;
                }
            }
            for(int j:strnum)
            {
                if(aftercom[j][num-1-j]!=1)
                {
                    break;
                }
                if(j==num-1)
                {
                    bingoline++;
                }
            }
            System.out.println(bingoline);
        }
    }
}


@4fccfe04684de7a72737f7b8ac7198f6@"
"r04631036","4","1.05","105504","@9c808f60cc0632725515780edc2feefb@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[] temp = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] check = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            announce = br.readLine().split("","");
//            System.out.printf(""announce[0]=%s\n"", announce[0]);
//            System.out.printf(""announce[1]=%s\n"", announce[1]);

            for (int i = 0; i < num; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = temp[j];
//                    System.out.printf(""matrix[%d][%d]=%s\n"", i, j, matrix[i][j]);
                }
            }
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    check[i][j] = 0;
//                    System.out.printf(""check[%d][%d]=%s\n"",i,j,check[i][j]);
                }
            }
            int count = 0;
            int output = 0;
//            System.out.printf("" %s , %s \n"", announce[0], announce[1]);
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
//                    System.out.printf(""matrix[%d][%d]=%s\n"",i,j,matrix[i][j]);
                    if (matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])) {
                        check[i][j] = 1;
                    }
//                    System.out.printf(""check[%d][%d]=%s\n"", i, j, check[i][j]);
                }
            }
            int row = 0;
            for (int i = 0; i < num; i++) {
                row = 0;
                for (int j = 0; j < num; j++) {
                    row += check[i][j];
                    if (row == num) {
                        output++;
                    }
                }
                //System.out.printf(""%s\n"", row);
            }
            int col = 0;
            for (int i = 0; i < num; i++) {
                col = 0;
                for (int j = 0; j < num; j++) {
                    col += check[j][i];
                    if (col == num) {
                        output++;
                    }
                }
                //System.out.printf(""%s\n"", col);
            }
            int dia = 0;
            int invdia = 0;
            for (int i = 0; i < num; i++) {
                dia += check[i][i];
                if (dia == 3) {
                    output++;
                }
            }
            for (int i = 0; i < num; i++) {
                invdia += check[num-1-i][i];
                if (invdia == 3) {
                    output++;
                }
            }
//            System.out.printf(""output=%s\n"", output);
            System.out.printf(""%d\n"", output);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@9c808f60cc0632725515780edc2feefb@"
"b03611033","10","0.085","103616","@c019d3dadd56fa59f61248c72adf4a6d@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;

/**
 *
 * @author user
 */
public class Bingo {
    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */    
    public static void main(String[] args) throws Exception 
    {
            // read file from args[0] in Java 7 style
            try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            //String str = null;
            // if((str = br.readLine()) != null)
            
            int [] strcount = new int[stringCount];
            int [] strnum = new int[num];
            
            data = br.readLine().split("","");
            for (int i=0;i<stringCount;i++)
            {
                announce[i]=data[i];
                strcount[i]=i;
                //System.out.println(announce[i]);
            }
            
            int[][] aftercom = new int[num][num];
            for(int j=0;j<num;j++)
            {
                strnum[j]=j;
                data = br.readLine().split("","");
                for(int k=0;k<num;k++)
                {
                    matrix[j][k]=data[k];
                    for(int i:strcount)
                    {
                        if(matrix[j][k].equals(announce[i]))
                        {
                            aftercom[j][k]=1;
                            break;
                        }
                    }
                }
            }
            int bingoline=0;
            for(int j:strnum)
            {
                for(int k:strnum)
                {
                    if(aftercom[j][k]!=1)
                    {
                        break;
                    }
                    if(k==num-1)
                    {
                        bingoline++;
                    }
                }  
            }
            for(int j:strnum)
            {
                for(int k:strnum)
                {
                    if(aftercom[k][j]!=1)
                    {
                        break;
                    }
                    if(k==num-1)
                    {
                        bingoline++;
                    }
                }
            }
            
            for(int j:strnum)
            {
                if(aftercom[j][j]!=1)
                {
                    break;
                }
                if(j==num-1)
                {
                    bingoline++;
                }
            }
            for(int j:strnum)
            {
                if(aftercom[j][num-1-j]!=1)
                {
                    break;
                }
                if(j==num-1)
                {
                    bingoline++;
                }
            }
            System.out.println(bingoline);
        }
    }
}


@c019d3dadd56fa59f61248c72adf4a6d@"
"r04631036","0","1.03","106672","@20ee08e40bcd5ae18ff8fd90d897881a@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[] temp = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] check = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            announce = br.readLine().split("","");
//            System.out.printf(""announce[0]=%s\n"", announce[0]);
//            System.out.printf(""announce[1]=%s\n"", announce[1]);

            for (int i = 0; i < num; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = temp[j];
//                    System.out.printf(""matrix[%d][%d]=%s\n"", i, j, matrix[i][j]);
                }
            }
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    check[i][j] = 0;
//                    System.out.printf(""check[%d][%d]=%s\n"",i,j,check[i][j]);
                }
            }
            int count = 0;
            int output = 0;
//            System.out.printf("" %s , %s \n"", announce[0], announce[1]);
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
//                    System.out.printf(""matrix[%d][%d]=%s\n"",i,j,matrix[i][j]);
                    if (matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])) {
                        check[i][j] = 1;
                    }
//                    System.out.printf(""check[%d][%d]=%s\n"", i, j, check[i][j]);
                }
            }
            int row = 0;
            for (int i = 0; i < num; i++) {
                row = 0;
                for (int j = 0; j < num; j++) {
                    row += check[i][j];
                    if (row == num) {
                        output++;
                    }
                }
//                System.out.printf(""row=%s\n"", row);
            }
            int col = 0;
            for (int i = 0; i < num; i++) {
                col = 0;
                for (int j = 0; j < num; j++) {
                    col += check[j][i];
                    if (col == num) {
                        output++;
                    }
                }
//                System.out.printf(""col=%s\n"", col);
            }
            int dia = 0;
            int invdia = 0;
            for (int i = 0; i < num; i++) {
                dia += check[i][i];
                if (dia == num) {
                    output++;
                }
            }
            for (int i = 0; i < num; i++) {
                invdia += check[num - 1 - i][i];
                if (invdia == num) {
                    output++;
                }
            }
            System.out.printf(""output=%s\n"", output);
//            System.out.printf(""output=%d\n"", output);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@20ee08e40bcd5ae18ff8fd90d897881a@"
"r04631036","5","0.86","104864","@79295ab81e885699c0a5d2bfbcecf8b7@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[] temp = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] check = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            announce = br.readLine().split("","");
//            System.out.printf(""announce[0]=%s\n"", announce[0]);
//            System.out.printf(""announce[1]=%s\n"", announce[1]);

            for (int i = 0; i < num; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = temp[j];
//                    System.out.printf(""matrix[%d][%d]=%s\n"", i, j, matrix[i][j]);
                }
            }
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    check[i][j] = 0;
//                    System.out.printf(""check[%d][%d]=%s\n"",i,j,check[i][j]);
                }
            }
            int count = 0;
            int output = 0;
//            System.out.printf("" %s , %s \n"", announce[0], announce[1]);
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
//                    System.out.printf(""matrix[%d][%d]=%s\n"",i,j,matrix[i][j]);
                    if (matrix[i][j].equals(announce[0]) || matrix[i][j].equals(announce[1])) {
                        check[i][j] = 1;
                    }
//                    System.out.printf(""check[%d][%d]=%s\n"", i, j, check[i][j]);
                }
            }
            int row = 0;
            for (int i = 0; i < num; i++) {
                row = 0;
                for (int j = 0; j < num; j++) {
                    row += check[i][j];
                    if (row == num) {
                        output++;
                    }
                }
//                System.out.printf(""row=%s\n"", row);
            }
            int col = 0;
            for (int i = 0; i < num; i++) {
                col = 0;
                for (int j = 0; j < num; j++) {
                    col += check[j][i];
                    if (col == num) {
                        output++;
                    }
                }
//                System.out.printf(""col=%s\n"", col);
            }
            int dia = 0;
            int invdia = 0;
            for (int i = 0; i < num; i++) {
                dia += check[i][i];
                if (dia == num) {
                    output++;
                }
            }
            for (int i = 0; i < num; i++) {
                invdia += check[num - 1 - i][i];
                if (invdia == num) {
                    output++;
                }
            }
//            System.out.printf(""output=%s\n"", output);
            System.out.printf(""%d\n"", output);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@79295ab81e885699c0a5d2bfbcecf8b7@"
"r04631036","10","0.099","106912","@42897b90dc13aa1546ac18f30d967dc7@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[] temp = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] check = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            announce = br.readLine().split("","");
//            System.out.printf(""announce[0]=%s\n"", announce[0]);
//            System.out.printf(""announce[1]=%s\n"", announce[1]);

            for (int i = 0; i < num; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = temp[j];
//                    System.out.printf(""matrix[%d][%d]=%s\n"", i, j, matrix[i][j]);
                }
            }
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    check[i][j] = 0;
//                    System.out.printf(""check[%d][%d]=%s\n"",i,j,check[i][j]);
                }
            }
            int count = 0;
            int output = 0;
//            System.out.printf("" %s , %s \n"", announce[0], announce[1]);
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
//                    System.out.printf(""matrix[%d][%d]=%s\n"",i,j,matrix[i][j]);
                    for(int k=0;k<stringCount;k++)
                    if (matrix[i][j].equals(announce[k]))
                    {
                        check[i][j] = 1;
                    }
//                    System.out.printf(""check[%d][%d]=%s\n"", i, j, check[i][j]);
                }
            }
            int row = 0;
            for (int i = 0; i < num; i++) {
                row = 0;
                for (int j = 0; j < num; j++) {
                    row += check[i][j];
                    if (row == num) {
                        output++;
                    }
                }
//                System.out.printf(""row=%s\n"", row);
            }
            int col = 0;
            for (int i = 0; i < num; i++) {
                col = 0;
                for (int j = 0; j < num; j++) {
                    col += check[j][i];
                    if (col == num) {
                        output++;
                    }
                }
//                System.out.printf(""col=%s\n"", col);
            }
            int dia = 0;
            int invdia = 0;
            for (int i = 0; i < num; i++) {
                dia += check[i][i];
                if (dia == num) {
                    output++;
                }
            }
            for (int i = 0; i < num; i++) {
                invdia += check[num - 1 - i][i];
                if (invdia == num) {
                    output++;
                }
            }
//            System.out.printf(""output=%s\n"", output);
            System.out.printf(""%d\n"", output);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@42897b90dc13aa1546ac18f30d967dc7@"
"b01703032","6","0.74","103376","@bc87db8e3932236599f537287ffe3afb@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            String[] array=new String[num]; 
            String temp=null;
            int count=0;
            int line=0;

            String[] data1 = br.readLine().split("","");
            {
                for(int i=0; i< stringCount ; i++)
                {
                announce[i]= data1[i];

                }
            }
            
           while((temp=br.readLine())!=null){
            array=temp.split("","");//从文件中读到的行数据转换为一维数组。
            for(int i=0;i<num;i++){
               matrix[count][i]=array[i];
                 }
             count++;
              }
           
           for(int i=0;i<stringCount;i++)
           {
             for(int j=0;j<num;j++)
             {
             for(int k=0;k<num;k++)
             {
             if (matrix[j][k].equals(announce[i]))
             {
             matrix[j][k]=""0"";
             }
             else
             {
             continue;
             }
             }
             }
                            }
          for(int j=0;j<num;j++)
           {
               int count1=0;
               for(int k=0;k<num;k++)
               {
                   if(matrix[j][k]==""0"")  
                     count1++; 
                   else
                     break;          
               }   
               if(count1==num)
                line++;     
            } 
                      
          for(int j=0;j<num;j++)
           {
               int count1=0;
               for(int k=0;k<num;k++)
               {
                   if(matrix[k][j]==""0"")
                   {  count1++;}
                   else
                   { break;}
               }
               if(count1==num)
               line++;
            }           

          int count1=0;
           for(int j=0;j<num;j++)
           {
               if(matrix[j][j]==""0"")
                 count1++;
               else if(matrix[j][num-j-1]==""0"")
                 count1++;          
               break;
            }
               if(count1==num)
                   line++;
               
            
           System.out.println(line);
           
            /* printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num); */
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
        
    }

@bc87db8e3932236599f537287ffe3afb@"
"b01703032","6","0.93","105232","@305b4fcd0a5653ff2260195c958185f9@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            String[] array=new String[num]; 
            String temp=null;
            int count=0;
            int line=0;

            String[] data1 = br.readLine().split("","");
            {
                for(int i=0; i< stringCount ; i++)
                {
                announce[i]= data1[i];

                }
            }
            
           while((temp=br.readLine())!=null){
            array=temp.split("","");//从文件中读到的行数据转换为一维数组。
            for(int i=0;i<num;i++){
               matrix[count][i]=array[i];
                 }
             count++;
              }
           
           for(int i=0;i<stringCount;i++)
           {
             for(int j=0;j<num;j++)
             {
             for(int k=0;k<num;k++)
             {
             if (matrix[j][k].equals(announce[i]))
             {
             matrix[j][k]=""0"";
             }
             else
             {
             continue;
             }
             }
             }
                            }
          for(int j=0;j<num;j++)
           {
               int count1=0;
               for(int k=0;k<num;k++)
               {
                   if(""0"".equals(matrix[j][k]))  
                     count1++; 
                   else
                     break;          
               }   
               if(count1==num)
                line++;     
            } 
                      
          for(int j=0;j<num;j++)
           {
               int count1=0;
               for(int k=0;k<num;k++)
               {
                   if(""0"".equals(matrix[k][j]))
                   {  count1++;}
                   else
                   { break;}
               }
               if(count1==num)
               line++;
            }           

          int count1=0;
           for(int j=0;j<num;j++)
           {
               if(""0"".equals(matrix[j][j]))
                 count1++;
               else if(""0"".equals(matrix[j][num-j-1]))
                 count1++;          
               break;
            }
               if(count1==num)
                   line++;
               
           int count2=0;
           for(int j=0;j<num;j++)
           {
               if(""0"".equals(matrix[j][num-j-1]))
                 count2++;          
               break;
            }
               if(count2==num)
                   line++;
                                  
            
           System.out.println(line);
           
            /* printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num); */
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
        
    }

@305b4fcd0a5653ff2260195c958185f9@"
"r04631025","0","1.02","105424","@caf4396a65e9d0cad74ac73fc1016144@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.FileReader;
import java.io.BufferedReader;

/**
 *
 * @author Tim
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrixCheck = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            announce = br.readLine().split("","");
            

            for (int i = 0; i < num; i++) {
                matrix[i] = br.readLine().split("","");
            }
            
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrixCheck[i][j] = 1;
                        } else {
                            matrixCheck[i][j] = 0;
                        }
                    
                    }
                }
            }
           
            int sum;
            int straightline=0;
            //count the row
            for (int i = 0; i < num; i++) {
                sum = 0;
                for (int j = 0; j < num; j++) {
                    sum = matrixCheck[i][j]++;
                }
                if(sum==num){
                    straightline++;
                }
            }
            //count the column
            for (int j = 0; j < num; j++) {
                sum = 0;
                for (int i = 0; i < num; i++) {
                    sum = matrixCheck[i][j]++;
                }
                if(sum==num){
                    straightline++;
                }
            }
            //count the diagonal
            sum=0;
            for(int i=0;i<num;i++){
                sum=matrixCheck[i][i]++;
            }
            if(sum==num){
                straightline++;
            }
            
            sum=0;
            for(int i=0;i<num;i++){                
                sum=matrixCheck[i][num-1]++;
                num--;
            }
            if(sum==num){
                straightline++;
            }
            
            System.out.printf(""Total straight line :%d\n"", straightline);

                /*  now you can write your own solution to hw0
                 *  you can follow the instruction described below:
                 * 
                 *  1. read the rest content of the file
                 *  2. store the announce strings (2nd line of the file) in variable announce
                 *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
                 *  4. compare the matrix and announce strings (this is the tricky part)
                 *  5. output how many 'straight line' are there in the matrix
                 * 
                 *  [note]
                 *  you can use every data structure in standard Java packages (Java 8 supported)
                 *  the packages in stdlib.jar and algs4.jar are also available for you to use
                 *
                 *  [hint]
                 *  1. you should check whether Java pass the variable by references or by values.
                 *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
                 *     useful for solving problems. 
                 */
            }

        }
    
}

@caf4396a65e9d0cad74ac73fc1016144@"
"r04631025","5","1.01","105488","@d182c72c186182c1b109a2e31f3c6d7b@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.FileReader;
import java.io.BufferedReader;

/**
 *
 * @author Tim
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrixCheck = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
          //  System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            announce = br.readLine().split("","");
            

            for (int i = 0; i < num; i++) {
                matrix[i] = br.readLine().split("","");
            }
            
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrixCheck[i][j] = 1;
                        } else {
                            matrixCheck[i][j] = 0;
                        }
                    
                    }
                }
            }
           
            int sum;
            int straightline=0;
            //count the row
            for (int i = 0; i < num; i++) {
                sum = 0;
                for (int j = 0; j < num; j++) {
                    sum = matrixCheck[i][j]++;
                }
                if(sum==num){
                    straightline++;
                }
            }
            //count the column
            for (int j = 0; j < num; j++) {
                sum = 0;
                for (int i = 0; i < num; i++) {
                    sum = matrixCheck[i][j]++;
                }
                if(sum==num){
                    straightline++;
                }
            }
            //count the diagonal
            sum=0;
            for(int i=0;i<num;i++){
                sum=matrixCheck[i][i]++;
            }
            if(sum==num){
                straightline++;
            }
            
            sum=0;
            for(int i=0;i<num;i++){                
                sum=matrixCheck[i][num-1]++;
                num--;
            }
            if(sum==num){
                straightline++;
            }
            
            System.out.printf(""%d"", straightline);

                /*  now you can write your own solution to hw0
                 *  you can follow the instruction described below:
                 * 
                 *  1. read the rest content of the file
                 *  2. store the announce strings (2nd line of the file) in variable announce
                 *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
                 *  4. compare the matrix and announce strings (this is the tricky part)
                 *  5. output how many 'straight line' are there in the matrix
                 * 
                 *  [note]
                 *  you can use every data structure in standard Java packages (Java 8 supported)
                 *  the packages in stdlib.jar and algs4.jar are also available for you to use
                 *
                 *  [hint]
                 *  1. you should check whether Java pass the variable by references or by values.
                 *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
                 *     useful for solving problems. 
                 */
            }

        }
    
}

@d182c72c186182c1b109a2e31f3c6d7b@"
"r04631025","5","1.02","106640","@d182c72c186182c1b109a2e31f3c6d7b@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.FileReader;
import java.io.BufferedReader;

/**
 *
 * @author Tim
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrixCheck = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
          //  System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            announce = br.readLine().split("","");
            

            for (int i = 0; i < num; i++) {
                matrix[i] = br.readLine().split("","");
            }
            
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrixCheck[i][j] = 1;
                        } else {
                            matrixCheck[i][j] = 0;
                        }
                    
                    }
                }
            }
           
            int sum;
            int straightline=0;
            //count the row
            for (int i = 0; i < num; i++) {
                sum = 0;
                for (int j = 0; j < num; j++) {
                    sum = matrixCheck[i][j]++;
                }
                if(sum==num){
                    straightline++;
                }
            }
            //count the column
            for (int j = 0; j < num; j++) {
                sum = 0;
                for (int i = 0; i < num; i++) {
                    sum = matrixCheck[i][j]++;
                }
                if(sum==num){
                    straightline++;
                }
            }
            //count the diagonal
            sum=0;
            for(int i=0;i<num;i++){
                sum=matrixCheck[i][i]++;
            }
            if(sum==num){
                straightline++;
            }
            
            sum=0;
            for(int i=0;i<num;i++){                
                sum=matrixCheck[i][num-1]++;
                num--;
            }
            if(sum==num){
                straightline++;
            }
            
            System.out.printf(""%d"", straightline);

                /*  now you can write your own solution to hw0
                 *  you can follow the instruction described below:
                 * 
                 *  1. read the rest content of the file
                 *  2. store the announce strings (2nd line of the file) in variable announce
                 *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
                 *  4. compare the matrix and announce strings (this is the tricky part)
                 *  5. output how many 'straight line' are there in the matrix
                 * 
                 *  [note]
                 *  you can use every data structure in standard Java packages (Java 8 supported)
                 *  the packages in stdlib.jar and algs4.jar are also available for you to use
                 *
                 *  [hint]
                 *  1. you should check whether Java pass the variable by references or by values.
                 *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
                 *     useful for solving problems. 
                 */
            }

        }
    
}

@d182c72c186182c1b109a2e31f3c6d7b@"
"r04228002","10","0.099","105296","@cf45df75cb3ab0ac6a9f062cdaf4f1f9@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.FileReader;
import java.io.BufferedReader;
import java.util.ArrayList;
import java.util.Arrays;
/**
 *
 * @author Lenovo
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //FileReader fr = new FileReader(args[0]);
        //BufferedReader br = new BufferedReader(fr);
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            String[] row1 = br.readLine().split("","");
            //System.out.println(data);
        
            int stringCount = Integer.parseInt(row1[0]);
            int num = Integer.parseInt(row1[1]);
            String[] announce = br.readLine().split("","");
            //String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            for (int i =0; i < num; i++){
                String[] Temparray = br.readLine().split("","");
                for (int j = 0; j < num; j++){
                    matrix[i][j] = Temparray[j];
                }
            }
        //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            //System.out.println(Arrays.deepToString(matrix));
            //System.out.println(Arrays.toString(data));
        
        int OutNum = num*2+2;
        for (int i = 0; i < num; i++){
            for (int j = 0; j < num; j++){
                if (Arrays.asList(announce).contains(matrix[i][j])){
                    continue;
                }
                else {
                    OutNum = OutNum - 1;
                    break; 
                }
            }
        }
        
        for (int i = 0; i < num; i++){
            for (int j = 0; j < num; j++){
            if (Arrays.asList(announce).contains(matrix[j][i])){
                continue;
            }
            else {
                OutNum=OutNum-1;
                break;
                }
            }
        }
        
        for (int i = 0; i < num; i++){
            if (Arrays.asList(announce).contains(matrix[i][i])){
                continue;
            }
            else{
                OutNum = OutNum - 1;
                break;
            }
        }
        
        for (int i = 0; i < num; i++){
            if (Arrays.asList(announce).contains(matrix[i][num-1-i])){
                continue;
            }
            else{
                OutNum = OutNum - 1;
                break;
            }
        }
        
        System.out.println(OutNum);
        }
} 
}
        
    
    




@cf45df75cb3ab0ac6a9f062cdaf4f1f9@"
"r04631025","9","0.9","106928","@f2943be10466177c59c8e78fc92e3d58@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.FileReader;
import java.io.BufferedReader;

/**
 *
 * @author Tim
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrixCheck = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
          //  System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            announce = br.readLine().split("","");
            for(int i=0;i<num;i++)
            {
                for(int j=0;j<num;j++){
                    matrixCheck[i][j]=0;
                }
            }

            for (int i = 0; i < num; i++) {
                matrix[i] = br.readLine().split("","");
            }
            
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrixCheck[i][j] = 1;
                        } 
                    
                    }
                }
            }

            int sum;
            int straightline=0;
            //count the row
            for (int i = 0; i < num; i++) {
                sum = 0;
                for (int j = 0; j < num; j++) {
                    sum = sum+matrixCheck[i][j];
                }
                if(sum==num){
                    straightline=straightline+1;
                }
            }

            //count the column
            for (int j = 0; j < num; j++) {
                sum = 0;
                for (int i = 0; i < num; i++) {
                    sum =sum+matrixCheck[i][j];
                }
                if(sum==num){
                    straightline++;
                }
            }
            //count the diagonal
            sum=0;
            for(int i=0;i<num;i++){
                sum=sum+matrixCheck[i][i];
            }
            if(sum==num){
                straightline++;
            }
            
            sum=0;
            for(int i=0;i<num;i++){                
                sum=sum+matrixCheck[i][num-i-1];
            }
            if(sum==num){
                straightline++;
            }
            
            System.out.printf(""%d"", straightline);

                /*  now you can write your own solution to hw0
                 *  you can follow the instruction described below:
                 * 
                 *  1. read the rest content of the file
                 *  2. store the announce strings (2nd line of the file) in variable announce
                 *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
                 *  4. compare the matrix and announce strings (this is the tricky part)
                 *  5. output how many 'straight line' are there in the matrix
                 * 
                 *  [note]
                 *  you can use every data structure in standard Java packages (Java 8 supported)
                 *  the packages in stdlib.jar and algs4.jar are also available for you to use
                 *
                 *  [hint]
                 *  1. you should check whether Java pass the variable by references or by values.
                 *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
                 *     useful for solving problems. 
                 */
            }

        }
    
}

@f2943be10466177c59c8e78fc92e3d58@"
"b03611041","0","1.01","105552","@3cf46a9dc8f225bb52a33704d1df4d6a@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] mp = new boolean[num][num];
            String CurrentLine;

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            announce=br.readLine().split("","");
            int lines=0;

            for(int i=0;i<num;i++){
                matrix[i]=br.readLine().split("","");
            }
//            System.out.printf(""%s\n "",announce[0]);

            for(int i=0;i<num;i++){
                for(int j=0;j<num;j++){
                    for(int k=0;k<announce.length;k++) {
                        if(announce[k].equals(matrix[i][j])){
                            mp[i][j]=true;
                            break;
                        }
                        else mp[i][j]=false;
                    }
                }
            }

//            boolean a=mp[0][0]&mp[0][1];
//            System.out.printf(a);
            boolean diag=true,rdiag=true;
            for(int i=0;i<num;i++){
                boolean row=true,col=true;
                diag&=mp[i][i];
                rdiag&=mp[num-i-1][i];
                for(int j=0;j<num;j++) {
                    row&=mp[i][j];
                    col&=mp[j][i];
                }
                if(row==true)lines++;
                if(col==true)lines++;
            }
            if(diag==true)lines++;
            if(rdiag==true)lines++;
//
//
//            for(int i=0;i<num;i++){
//                for(int j=0;j<num;j++){
//                    System.out.printf(""%s "",matrix[i][j]);
//                }
//                System.out.printf(""\n"");
//            }
//
//            for(int i=0;i<num;i++){
//                for(int j=0;j<num;j++){
//                    System.out.printf(""%b "",mp[i][j]);
//                }
//                System.out.printf(""\n"");
//            }

            System.out.printf(""%d"",lines);
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }
}

@3cf46a9dc8f225bb52a33704d1df4d6a@"
"b03611041","10","0.1","105488","@b4f46cac207293a41895e550a9ce6525@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] mp = new boolean[num][num];
            String CurrentLine;

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            announce=br.readLine().split("","");
            int lines=0;

            for(int i=0;i<num;i++){
                matrix[i]=br.readLine().split("","");
            }
//            System.out.printf(""%s\n "",announce[0]);

            for(int i=0;i<num;i++){
                for(int j=0;j<num;j++){
                    for(int k=0;k<announce.length;k++) {
                        if(announce[k].equals(matrix[i][j])){
                            mp[i][j]=true;
                            break;
                        }
                        else mp[i][j]=false;
                    }
                }
            }

//            boolean a=mp[0][0]&mp[0][1];
//            System.out.printf(a);
            boolean diag=true,rdiag=true;
            for(int i=0;i<num;i++){
                boolean row=true,col=true;
                diag&=mp[i][i];
                rdiag&=mp[num-i-1][i];
                for(int j=0;j<num;j++) {
                    row&=mp[i][j];
                    col&=mp[j][i];
                }
                if(row==true)lines++;
                if(col==true)lines++;
            }
            if(diag==true)lines++;
            if(rdiag==true)lines++;
//
//
//            for(int i=0;i<num;i++){
//                for(int j=0;j<num;j++){
//                    System.out.printf(""%s "",matrix[i][j]);
//                }
//                System.out.printf(""\n"");
//            }
//
//            for(int i=0;i<num;i++){
//                for(int j=0;j<num;j++){
//                    System.out.printf(""%b "",mp[i][j]);
//                }
//                System.out.printf(""\n"");
//            }

            System.out.printf(""%d"",lines);
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }
}

@b4f46cac207293a41895e550a9ce6525@"
"r04631006","9","1.01","105504","@3f7b9a3b6de4f9b8280bb93fe665b548@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            int k = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

            k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@3f7b9a3b6de4f9b8280bb93fe665b548@"
"b03611003","0","0","0","@401c9d7be772dee4a132e9682c29e4c1@package bingo;

import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
//            ========================================================================================
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++) {
                matrix[i] = br.readLine().split("","");
            }
            int[][] crossedout = new int[num][num];

//            store to-be-crossedout into String[] announce, bingo into String[][] matrix. creat a counter int[][] crossedout
//            System.out.print(matrix[2][0]);
            for (int j = 0; j < stringCount; j++) {

//                check every announce
                for (int row = 0; row < num; row++) {
                    for (int col = 0; col < num; col++) {
                        if (matrix[row][col].equals(announce[j])) {
                            crossedout[row][col] = 1;
                        }
                    }
                }
            }

//            for (int row = 0; row < matrix.length; row++) {
//                for (int column = 0; column < matrix[row].length; column++) {
//                    System.out.println(crossedout[row][column] + "" "");
//                }
//                System.out.println();
//            }
//       
//              show the crossedout counter      
            int counter = 0;

            for (int row = 0; row < num; row++) {
                int thisrow = 0;
                for (int col = 0; col < num; col++) {
                    thisrow += crossedout[row][col];
                }
                if (thisrow == num) {
                    counter++;
                }
            }
//            check rows

            for (int col = 0; col < num; col++) {
                int thiscol = 0;
                for (int row = 0; row < num; row++) {
                    thiscol += crossedout[row][col];
                }
                if (thiscol == num) {
                    counter++;
                }
            }
//            check cols
            int cross1 = 0;
            int cross2 = 0;

            for (int i = 0; i < num; i++) {
                cross1 += crossedout[i][i];   
                cross2 += crossedout[i][num - 1 - i];
            }
            
            if(cross1 == num){
                counter++;
            }
            if(cross2 == num){
                counter++;
            }
//            check cross
            
            
            System.out.print(counter);
            

        }
    }
}

@401c9d7be772dee4a132e9682c29e4c1@"
"b03611003","0","0","0","@401c9d7be772dee4a132e9682c29e4c1@package bingo;

import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
//            ========================================================================================
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++) {
                matrix[i] = br.readLine().split("","");
            }
            int[][] crossedout = new int[num][num];

//            store to-be-crossedout into String[] announce, bingo into String[][] matrix. creat a counter int[][] crossedout
//            System.out.print(matrix[2][0]);
            for (int j = 0; j < stringCount; j++) {

//                check every announce
                for (int row = 0; row < num; row++) {
                    for (int col = 0; col < num; col++) {
                        if (matrix[row][col].equals(announce[j])) {
                            crossedout[row][col] = 1;
                        }
                    }
                }
            }

//            for (int row = 0; row < matrix.length; row++) {
//                for (int column = 0; column < matrix[row].length; column++) {
//                    System.out.println(crossedout[row][column] + "" "");
//                }
//                System.out.println();
//            }
//       
//              show the crossedout counter      
            int counter = 0;

            for (int row = 0; row < num; row++) {
                int thisrow = 0;
                for (int col = 0; col < num; col++) {
                    thisrow += crossedout[row][col];
                }
                if (thisrow == num) {
                    counter++;
                }
            }
//            check rows

            for (int col = 0; col < num; col++) {
                int thiscol = 0;
                for (int row = 0; row < num; row++) {
                    thiscol += crossedout[row][col];
                }
                if (thiscol == num) {
                    counter++;
                }
            }
//            check cols
            int cross1 = 0;
            int cross2 = 0;

            for (int i = 0; i < num; i++) {
                cross1 += crossedout[i][i];   
                cross2 += crossedout[i][num - 1 - i];
            }
            
            if(cross1 == num){
                counter++;
            }
            if(cross2 == num){
                counter++;
            }
//            check cross
            
            
            System.out.print(counter);
            

        }
    }
}

@401c9d7be772dee4a132e9682c29e4c1@"
"b03611003","0","0","0","@401c9d7be772dee4a132e9682c29e4c1@package bingo;

import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
//            ========================================================================================
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++) {
                matrix[i] = br.readLine().split("","");
            }
            int[][] crossedout = new int[num][num];

//            store to-be-crossedout into String[] announce, bingo into String[][] matrix. creat a counter int[][] crossedout
//            System.out.print(matrix[2][0]);
            for (int j = 0; j < stringCount; j++) {

//                check every announce
                for (int row = 0; row < num; row++) {
                    for (int col = 0; col < num; col++) {
                        if (matrix[row][col].equals(announce[j])) {
                            crossedout[row][col] = 1;
                        }
                    }
                }
            }

//            for (int row = 0; row < matrix.length; row++) {
//                for (int column = 0; column < matrix[row].length; column++) {
//                    System.out.println(crossedout[row][column] + "" "");
//                }
//                System.out.println();
//            }
//       
//              show the crossedout counter      
            int counter = 0;

            for (int row = 0; row < num; row++) {
                int thisrow = 0;
                for (int col = 0; col < num; col++) {
                    thisrow += crossedout[row][col];
                }
                if (thisrow == num) {
                    counter++;
                }
            }
//            check rows

            for (int col = 0; col < num; col++) {
                int thiscol = 0;
                for (int row = 0; row < num; row++) {
                    thiscol += crossedout[row][col];
                }
                if (thiscol == num) {
                    counter++;
                }
            }
//            check cols
            int cross1 = 0;
            int cross2 = 0;

            for (int i = 0; i < num; i++) {
                cross1 += crossedout[i][i];   
                cross2 += crossedout[i][num - 1 - i];
            }
            
            if(cross1 == num){
                counter++;
            }
            if(cross2 == num){
                counter++;
            }
//            check cross
            
            
            System.out.print(counter);
            

        }
    }
}

@401c9d7be772dee4a132e9682c29e4c1@"
"b99611017","0","0","0","@67280d58710c1c18e031105f427ead69@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.*;
import java.util.Scanner;
import java.lang.String;
import java.util.Arrays;
import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    public static void main(String[] args) throws IOException {
        try {
            File Data = new File(""input.txt""); //讀入檔案
            int len = (int) Data.length();      //抓檔案長度
            FileReader ReadData = new FileReader(Data);
            char buffer[];
            buffer = new char[len];
            ReadData.read(buffer);
            String str = new String(buffer);
            
            String[] token = str.split(""\n""); //分割字串
            int tokenLen=token.length;
            String matr="""";
            for(int i=0;i<tokenLen;i++)
            {
                matr=matr+token[i]+"","";
                
            }
            String[] ans=matr.split("","");
            
            int annoucedNum=Integer.valueOf(ans[0]);
            int size=Integer.valueOf(ans[1]);
            String[] announced=new String[annoucedNum]; //儲存公布國名用
            String[][] countr=new String[size][size];   //賓果板
            int k=2+annoucedNum;                                    //以下配置賓果板
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    countr[i][j]=ans[k];
                    k++;
                }
            }
            int[][] score=new int[size][size];      //紀錄賓果配對情況
            for(int i=0;i<size;i++)                 //記分板歸零
            {
                for(int j=0;j<size;j++)
                {
                    score[i][j]=0;
                }
            }
            for(int i=annoucedNum;i<annoucedNum+annoucedNum;i++)          //開始劃記計分板
            {
                for(int j=0;j<size;j++)
                {
                    for(int l=0;l<size;l++)
                    {
                        if(countr[j][l].equals(ans[i]))
                        {
                            score[j][l]++;
                        }
                    }
                }
            }
            int lineNum=0;                 //儲存連線數量
            if(score[0][0]+score[0][1]+score[0][2]==3)
            {
                lineNum++;
            }
            if(score[1][0]+score[1][1]+score[1][2]==3)
            {
                lineNum++;
            }
            if(score[2][0]+score[2][1]+score[2][2]==3)
            {
                lineNum++;
            }
            if(score[0][0]+score[1][0]+score[2][0]==3)
            {
                lineNum++;
            }
            if(score[0][1]+score[1][1]+score[2][1]==3)
            {
                lineNum++;
            }
            if(score[0][2]+score[1][2]+score[2][2]==3)
            {
                lineNum++;
            }
            if(score[0][0]+score[1][1]+score[2][2]==3)
            {
                lineNum++;
            }
            if(score[0][2]+score[1][1]+score[2][0]==3)
            {
                lineNum++;
            }
            /*
            
            System.out.println(""此文字檔為:"" + str);
            System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
            System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(""總共有"" + lineNum + ""條連線"");
        }
        catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }
        
    }

}

@67280d58710c1c18e031105f427ead69@"
"b03611003","10","0.094","105216","@629fa24c1556283687bbb3276cbeebbd@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
//            ========================================================================================
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++) {
                matrix[i] = br.readLine().split("","");
            }
            int[][] crossedout = new int[num][num];

//            store to-be-crossedout into String[] announce, bingo into String[][] matrix. creat a counter int[][] crossedout
//            System.out.print(matrix[2][0]);
            for (int j = 0; j < stringCount; j++) {

//                check every announce
                for (int row = 0; row < num; row++) {
                    for (int col = 0; col < num; col++) {
                        if (matrix[row][col].equals(announce[j])) {
                            crossedout[row][col] = 1;
                        }
                    }
                }
            }

//            for (int row = 0; row < matrix.length; row++) {
//                for (int column = 0; column < matrix[row].length; column++) {
//                    System.out.println(crossedout[row][column] + "" "");
//                }
//                System.out.println();
//            }
//       
//              show the crossedout counter      
            int counter = 0;

            for (int row = 0; row < num; row++) {
                int thisrow = 0;
                for (int col = 0; col < num; col++) {
                    thisrow += crossedout[row][col];
                }
                if (thisrow == num) {
                    counter++;
                }
            }
//            check rows

            for (int col = 0; col < num; col++) {
                int thiscol = 0;
                for (int row = 0; row < num; row++) {
                    thiscol += crossedout[row][col];
                }
                if (thiscol == num) {
                    counter++;
                }
            }
//            check cols
            int cross1 = 0;
            int cross2 = 0;

            for (int i = 0; i < num; i++) {
                cross1 += crossedout[i][i];   
                cross2 += crossedout[i][num - 1 - i];
            }
            
            if(cross1 == num){
                counter++;
            }
            if(cross2 == num){
                counter++;
            }
//            check cross
            
            
            System.out.print(counter);
            

        }
    }
}

@629fa24c1556283687bbb3276cbeebbd@"
"r04522627","0","0.89","104944","@a5de26ccc45db648416bdf7ba210d694@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
       
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix_bingo = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            data = br.readLine().split("","");
            System.out.printf(""announced strings:\n"");
            for(int i = 0; i < stringCount; i++)
            {
                announce[i] = data[i];
                System.out.printf(announce[i] + "" "");
            }
            
            System.out.printf(""\nmatrix:\n"");
            for(int i = 0; i < num; i++)
            {
                data = br.readLine().split("","");
                for(int j = 0; j < num; j++)
                {
                    matrix[i][j] = data[j];
                    //標記與announce相同的
                    for(int n = 0; n < announce.length; n++)
                    {
                        if(matrix[i][j].equals(announce[n]))
                        {
                             matrix_bingo[i][j] = 1;
                             break;
                        }
                        else
                        {
                             matrix_bingo[i][j] = 0;
                        }
                    }
                    System.out.printf(matrix[i][j] + "" "");
                }
                System.out.printf(""\n"");
            }
            
            
            //算出直線數
            int numberOfLines = 0;
            //直線與橫線
            int[] temp = new int[3];
            for(int i = 0; i < num; i++)
            {
                temp[0] = temp[1] = 1;
                for(int j = 0; j < num; j++)
                {
                    temp[0] = temp[0] * matrix_bingo[i][j];
                    temp[1] = temp[1] * matrix_bingo[j][i];
                }
                if(temp[0] == 1)
                {
                    numberOfLines++;
                }
                if(temp[1] == 1)
                {
                    numberOfLines++;
                }
            }
            
            //對角線
            for(int n = 0; n < 2; n++)
            {
                temp[2] = 1;
                for(int i = 0; i < num; i++)
                {
                    temp[2] = temp[2] * matrix_bingo[(num - 1 - 2*i) * n + i][i];
                }
            }
            
            
            numberOfLines = temp[0] + temp[1] + temp[2];
            
            System.out.printf(""number of straight lines: %d\n"",numberOfLines);
             
        }
    }
}

@a5de26ccc45db648416bdf7ba210d694@"
"r04631006","5","1","105440","@e7c63c2e5332bddff7126535355000f5@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
//            }
//
//            int a = 0;
//            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@e7c63c2e5332bddff7126535355000f5@"
"r04631006","9","0.85","103760","@033e042d74815ed584c708ce9ba490f3@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

           
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@033e042d74815ed584c708ce9ba490f3@"
"r04522627","0","0.84","104352","@a8b764d121b8676629f70486bd882279@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
       
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix_bingo = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            data = br.readLine().split("","");
            System.out.printf(""announced strings:\n"");
            for(int i = 0; i < stringCount; i++)
            {
                announce[i] = data[i];
                System.out.printf(announce[i] + "" "");
            }
            
            System.out.printf(""\nmatrix:\n"");
            for(int i = 0; i < num; i++)
            {
                data = br.readLine().split("","");
                for(int j = 0; j < num; j++)
                {
                    matrix[i][j] = data[j];
                    //標記與announce相同的
                    for(int n = 0; n < announce.length; n++)
                    {
                        if(matrix[i][j].equals(announce[n]))
                        {
                             matrix_bingo[i][j] = 1;
                             break;
                        }
                        else
                        {
                             matrix_bingo[i][j] = 0;
                        }
                    }
                    System.out.printf(matrix[i][j] + "" "");
                }
                System.out.printf(""\n"");
            }
            
            
            //算出直線數
            int numberOfLines = 0;
            //直線與橫線
            int[] temp = new int[3];
            for(int i = 0; i < num; i++)
            {
                temp[0] = temp[1] = 1;
                for(int j = 0; j < num; j++)
                {
                    temp[0] = temp[0] * matrix_bingo[i][j];
                    temp[1] = temp[1] * matrix_bingo[j][i];
                }
                if(temp[0] == 1)
                {
                    numberOfLines++;
                }
                if(temp[1] == 1)
                {
                    numberOfLines++;
                }
            }
            
            //對角線
            for(int n = 0; n < 2; n++)
            {
                temp[2] = 1;
                for(int i = 0; i < num; i++)
                {
                    temp[2] = temp[2] * matrix_bingo[(num - 1 - 2*i) * n + i][i];
                }
                if(temp[2] == 1)
                {
                    numberOfLines++;
                }
            }
            
            System.out.printf(""number of straight lines: %d\n"",numberOfLines);
             
        }
    }
}

@a8b764d121b8676629f70486bd882279@"
"b02611028","10","0.094","105200","@11af4380b1abace54850c21bf2b6ed91@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            //printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            announce = br.readLine().split("","");

            String[] buffer = new String[num];
            for (int i = 0; i < num; i++) {
                buffer = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = buffer[j];
                    //System.out.print(matrix[i][j] + "" "");
                }
                //System.out.printf(""%n"");
            }
            
           int[][] maps = new int[num][num];
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        if ((matrix[i][j]).equals(announce[k])) {
                            maps[i][j] = 1;
                        }

                    }
                    //System.out.print(maps[i][j] + "" "");
                }
                //System.out.printf(""%n"");
            }

            int count = 0;
            int realcount = 0;
            for (int i = 0; i < num; i++) {

                if (maps[i][1] == 1) {
                    for (int k = 0; k < num; k++) {
                        if (maps[i][k] == 1) {
                            count++;
                        }
                    }
                    if (count % num == 0) {
                        realcount++;
                    } else {
                        count = 0;
                    }
                }
                if (maps[1][i] == 1) {
                    for (int k = 0; k < num; k++) {
                        if (maps[k][i] == 1) {
                            count++;
                        }
                    }
                    if (count % num == 0) {
                        realcount++;
                    } else {
                        count = 0;
                    }
                }
            }
            if (maps[0][0] == 1) {
                    for (int k = 0; k < num; k++) {
                        if (maps[k][k] == 1) {
                            count++;
                        }
                    }
                    if (count % num == 0) {
                        realcount++;
                    } else {
                        count = 0;
                    }
                }
                if (maps[num-1][0] == 1) {
                    for (int k = 0; k < num; k++) {
                        if (maps[num-1-k][k] == 1) {
                            count++;
                        }
                    }
                    if (count % num == 0) {
                        realcount++;
                    } else {
                        count = 0;
                    }
                }
            System.out.print(realcount);
            
            /*for (int i=0;i<num;i++){
             for (int j=0;j<num;j++){
             System.out.print(matrix[i][j]+"" "");
             }
             System.out.print(""\n"");
             }
             //System.out.println(Arrays.toString(announce));

             /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@11af4380b1abace54850c21bf2b6ed91@"
"r04522627","10","0.088","103696","@ee94d587c543210bc7a5b75416e505c4@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
       
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix_bingo = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            data = br.readLine().split("","");
//            System.out.printf(""announced strings:\n"");
            for(int i = 0; i < stringCount; i++)
            {
                announce[i] = data[i];
//                System.out.printf(announce[i] + "" "");
            }
            
//            System.out.printf(""\nmatrix:\n"");
            for(int i = 0; i < num; i++)
            {
                data = br.readLine().split("","");
                for(int j = 0; j < num; j++)
                {
                    matrix[i][j] = data[j];
                    //標記與announce相同的
                    for(int n = 0; n < announce.length; n++)
                    {
                        if(matrix[i][j].equals(announce[n]))
                        {
                             matrix_bingo[i][j] = 1;
                             break;
                        }
                        else
                        {
                             matrix_bingo[i][j] = 0;
                        }
                    }
//                    System.out.printf(matrix[i][j] + "" "");
                }
//                System.out.printf(""\n"");
            }
            
            
            //算出直線數
            int numberOfLines = 0;
            //直線與橫線
            int[] temp = new int[3];
            for(int i = 0; i < num; i++)
            {
                temp[0] = temp[1] = 1;
                for(int j = 0; j < num; j++)
                {
                    temp[0] = temp[0] * matrix_bingo[i][j];
                    temp[1] = temp[1] * matrix_bingo[j][i];
                }
                if(temp[0] == 1)
                {
                    numberOfLines++;
                }
                if(temp[1] == 1)
                {
                    numberOfLines++;
                }
            }
            
            //對角線
            for(int n = 0; n < 2; n++)
            {
                temp[2] = 1;
                for(int i = 0; i < num; i++)
                {
                    temp[2] = temp[2] * matrix_bingo[(num - 1 - 2*i) * n + i][i];
                }
                if(temp[2] == 1)
                {
                    numberOfLines++;
                }
            }
            
            System.out.printf(""%d"",numberOfLines);
             
        }
    }
}

@ee94d587c543210bc7a5b75416e505c4@"
"b03704074","10","0.097","105184","@f38efd8cba96e1045af896ed9b645a90@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
         
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = br.readLine().split("","");
        if(first.length>2)
            flag=0;
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
         flag = 0;
         while(flag==0)
         {   flag=1;
            str1 = br.readLine().split("","");
            for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    flag=0;
                }
            }
        }
            for (int i = 0; i < num[1]; i++)
            {   //System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}




@f38efd8cba96e1045af896ed9b645a90@"
"b03704074","10","0.089","103376","@ab636b038c5223f694dd4c22e3156bde@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
         
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = br.readLine().split("","");
        if(first.length>2)
            flag=0;
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
         flag = 0;
         while(flag==0)
         {   flag=1;
            str1 = br.readLine().split("","");
            if(str1.length!=num[0])
                flag=0;
            for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    flag=0;
                }
            }
        }
         
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
            flag=0;
                while(flag==0)
                {flag=1;
                str2=br.readLine().split("","");
                 if(str2.length!=num[1])
                     flag=0;
                }
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}




@ab636b038c5223f694dd4c22e3156bde@"
"b03704074","10","0.097","105248","@74c4cb3ae036188f98e5c2c2818a0ebb@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
         
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        int flag=0;
        while(flag==0)
        {flag=1;
        first = br.readLine().split("","");
        if(first.length!=2)
            flag=0;
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
                flag=0;
        }
        }
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
         flag = 0;
         while(flag==0)
         {   flag=1;
            str1 = br.readLine().split("","");
            if(str1.length!=num[0])
                flag=0;
            for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    flag=0;
                }
            }
        }
         
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
            flag=0;
                while(flag==0)
                {flag=1;
                str2=br.readLine().split("","");
                 if(str2.length!=num[1])
                     flag=0;
                }
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}




@74c4cb3ae036188f98e5c2c2818a0ebb@"
"b02611016","4","0.88","103840","@d4c07c666c150a5d64ac43f76f2fd1dc@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data1 = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data1[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data1[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            int[][] match=new int[num][num];
            int we=0;
            int bingoline=0;
            String[] data2 = br.readLine().split("","");
           for(int i=0;i<stringCount;i++)
           {
            announce[i]=data2[i];
                    }
           for(int i=0;i<num;i++)
           {   String[] data3 = br.readLine().split("","");
               for(int j=0;j<num;j++)
              {matrix[i][j]=data3[j];
                  
              }
               
           }
         for(int k=0;k<stringCount;k++)
         {
           for(int i=0;i<num;i++)
           { for(int j=0;j<num;j++)
             { if(matrix[i][j].equals(announce[k]))
                { match[i][j]=1;
                }
               
                  
             }
           }
         }
         for(int i=0;i<num;i++)
         {for(int j=0;j<num;j++)
           { if( match[i][j]!=1)
             {break;
             }
            we=we+1;
            if(we==3)
             {we=0;
              bingoline=bingoline+1;
             }
           }
             we=0;
         }
         
         for(int i=0;i<num;i++)
         {for(int j=0;j<num;j++)
           { if( match[j][i]!=1)
             {break;
             }
            we=we+1;
            if(we==3)
             {we=0;
              bingoline=bingoline+1;
             }
            
           }
          we=0;
         }
         
         for(int i=0;i<num;i++)
         {  if( match[i][i]!=1)
             {break;
             }
             we=we+1;
             if(we==3)
             {we=0;
              bingoline=bingoline+1;
             }
           we=0;
         }
           for(int i=0;i<num;i++)
         {  if( match[num-i-1][i]!=1)
             {break;
             }
             we=we+1;
             if(we==3)
             {we=0;
              bingoline=bingoline+1;
             }
           we=0;
         }
           
          //     System.out.printf(announce[0]);
         //          System.out.printf(""\n"");
           //        System.out.printf(matrix[0][2]);
            //       System.out.printf(""\n"");
          //         System.out.printf(matrix[1][2]);
          //         System.out.printf(""\n"");
          //         System.out.printf(matrix[2][2]);
         //          System.out.printf(""\n"");
         //          System.out.printf(""%d"",we);
         //          System.out.printf(""\n"");
                      System.out.printf(""%d"",bingoline);
             //      System.out.printf(""\n"");
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}


@d4c07c666c150a5d64ac43f76f2fd1dc@"
"b02611016","4","0.98","105472","@93ca687f2e9757499d67c52c5318d9bb@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data1 = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data1[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data1[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            int[][] match=new int[num][num];
            int we=0;
            int bingoline=0;
            String[] data2 = br.readLine().split("","");
           for(int i=0;i<stringCount;i++)
           {
            announce[i]=data2[i];
                    }
           for(int i=0;i<num;i++)
           {   String[] data3 = br.readLine().split("","");
               for(int j=0;j<num;j++)
              {matrix[i][j]=data3[j];
                  
              }
               
           }
         for(int k=0;k<stringCount;k++)
         {
           for(int i=0;i<num;i++)
           { for(int j=0;j<num;j++)
             { if(matrix[i][j].equals(announce[k]))
                { match[i][j]=1;
                }
               
                  
             }
           }
         }
         for(int i=0;i<num;i++)
         {for(int j=0;j<num;j++)
           { if( match[i][j]!=1)
             {break;
             }
            we=we+1;
            if(we==3)
             {we=0;
              bingoline=bingoline+1;
     //         System.out.printf(""1"");
           //       System.out.printf(""\n"");
             }
           }
             we=0;
         }
         
         for(int i=0;i<num;i++)
         {for(int j=0;j<num;j++)
           { if( match[j][i]!=1)
             {break;
             }
            we=we+1;
            if(we==3)
             {we=0;
              bingoline=bingoline+1;
         //     System.out.printf(""2"");
           //       System.out.printf(""\n"");
             }
            
           }
          we=0;
         }
         
         for(int i=0;i<num;i++)
         {  if( match[i][i]!=1)
             {break;
             }
             we=we+1;
             if(we==3)
             {we=0;
              bingoline=bingoline+1;
          //    System.out.printf(""3"");
           //       System.out.printf(""\n"");
             }
           
         }
         we=0;
           for(int i=0;i<num;i++)
         {  if( match[num-i-1][i]!=1)
             {break;
             }
             we=we+1;
             if(we==3)
             {we=0;
              bingoline=bingoline+1;
            //  System.out.printf(""4"");
          //        System.out.printf(""\n"");
             }
           we=0;
         }
           
          //     System.out.printf(announce[0]);
         //          System.out.printf(""\n"");
           //        System.out.printf(matrix[0][2]);
            //       System.out.printf(""\n"");
          //         System.out.printf(matrix[1][2]);
          //         System.out.printf(""\n"");
          //         System.out.printf(matrix[2][2]);
         //          System.out.printf(""\n"");
         //          System.out.printf(""%d"",we);
         //          System.out.printf(""\n"");
                      System.out.printf(""%d"",bingoline);
             //      System.out.printf(""\n"");
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@93ca687f2e9757499d67c52c5318d9bb@"
"b02611016","5","1.03","105456","@5a5af9400a1cde48e5f4f53c97f8c860@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data1 = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data1[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data1[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            int[][] match=new int[num][num];
            int we=0;
            int bingoline=0;
            String[] data2 = br.readLine().split("","");
           for(int i=0;i<stringCount;i++)
           {
            announce[i]=data2[i];
                    }
           for(int i=0;i<num;i++)
           {   String[] data3 = br.readLine().split("","");
               for(int j=0;j<num;j++)
              {matrix[i][j]=data3[j];
                  
              }
               
           }
         for(int k=0;k<stringCount;k++)
         {
           for(int i=0;i<num;i++)
           { for(int j=0;j<num;j++)
             { if(matrix[i][j].equals(announce[k]))
                { match[i][j]=1;
                }
               
                  
             }
           }
         }
         for(int i=0;i<num;i++)
         {for(int j=0;j<num;j++)
           { if( match[i][j]!=1)
             {break;
             }
            we=we+1;
            if(we==3)
             {we=0;
              bingoline=bingoline+1;
     //         System.out.printf(""1"");
           //       System.out.printf(""\n"");
             }
           }
             we=0;
         }
         
         for(int i=0;i<num;i++)
         {for(int j=0;j<num;j++)
           { if( match[j][i]!=1)
             {break;
             }
            we=we+1;
            if(we==3)
             {we=0;
              bingoline=bingoline+1;
         //     System.out.printf(""2"");
           //       System.out.printf(""\n"");
             }
            
           }
          we=0;
         }
         
         for(int i=0;i<num;i++)
         {  if( match[i][i]!=1)
             {break;
             }
             we=we+1;
             if(we==3)
             {we=0;
              bingoline=bingoline+1;
          //    System.out.printf(""3"");
           //       System.out.printf(""\n"");
             }
           
         }
         we=0;
           for(int i=0;i<num;i++)
         {  if( match[num-i-1][i]!=1)
             {break;
             }
             we=we+1;
             if(we==3)
             {we=0;
              bingoline=bingoline+1;
            //  System.out.printf(""4"");
          //        System.out.printf(""\n"");
             }
         }
           we=0;
          //     System.out.printf(announce[0]);
         //          System.out.printf(""\n"");
           //        System.out.printf(matrix[0][2]);
            //       System.out.printf(""\n"");
          //         System.out.printf(matrix[1][2]);
          //         System.out.printf(""\n"");
          //         System.out.printf(matrix[2][2]);
         //          System.out.printf(""\n"");
         //          System.out.printf(""%d"",we);
         //          System.out.printf(""\n"");
                      System.out.printf(""%d"",bingoline);
             //      System.out.printf(""\n"");
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@5a5af9400a1cde48e5f4f53c97f8c860@"
"b02611016","10","0.085","104416","@f0045c6bbc6a2e74bceb724dbc7d750f@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data1 = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data1[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data1[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            int[][] match=new int[num][num];
            int we=0;
            int bingoline=0;
            String[] data2 = br.readLine().split("","");
           for(int i=0;i<stringCount;i++)
           {
            announce[i]=data2[i];
                    }
           for(int i=0;i<num;i++)
           {   String[] data3 = br.readLine().split("","");
               for(int j=0;j<num;j++)
              {matrix[i][j]=data3[j];
                  
              }
               
           }
         for(int k=0;k<stringCount;k++)
         {
           for(int i=0;i<num;i++)
           { for(int j=0;j<num;j++)
             { if(matrix[i][j].equals(announce[k]))
                { match[i][j]=1;
                }
               
                  
             }
           }
         }
         for(int i=0;i<num;i++)
         {for(int j=0;j<num;j++)
           { if( match[i][j]!=1)
             {break;
             }
            we=we+1;
            if(we==num)
             {we=0;
              bingoline=bingoline+1;
     //         System.out.printf(""1"");
           //       System.out.printf(""\n"");
             }
           }
             we=0;
         }
         
         for(int i=0;i<num;i++)
         {for(int j=0;j<num;j++)
           { if( match[j][i]!=1)
             {break;
             }
            we=we+1;
            if(we==num)
             {we=0;
              bingoline=bingoline+1;
         //     System.out.printf(""2"");
           //       System.out.printf(""\n"");
             }
            
           }
          we=0;
         }
         
         for(int i=0;i<num;i++)
         {  if( match[i][i]!=1)
             {break;
             }
             we=we+1;
             if(we==num)
             {we=0;
              bingoline=bingoline+1;
          //    System.out.printf(""3"");
           //       System.out.printf(""\n"");
             }
           
         }
         we=0;
           for(int i=0;i<num;i++)
         {  if( match[num-i-1][i]!=1)
             {break;
             }
             we=we+1;
             if(we==num)
             {we=0;
              bingoline=bingoline+1;
            //  System.out.printf(""4"");
          //        System.out.printf(""\n"");
             }
         }
           we=0;
          //     System.out.printf(announce[0]);
         //          System.out.printf(""\n"");
           //        System.out.printf(matrix[0][2]);
            //       System.out.printf(""\n"");
          //         System.out.printf(matrix[1][2]);
          //         System.out.printf(""\n"");
          //         System.out.printf(matrix[2][2]);
         //          System.out.printf(""\n"");
         //          System.out.printf(""%d"",we);
         //          System.out.printf(""\n"");
                      System.out.printf(""%d"",bingoline);
             //      System.out.printf(""\n"");
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@f0045c6bbc6a2e74bceb724dbc7d750f@"
"r04631041","0","0","0","@9357bb93c35d4668f8d6d0338c1885bc@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.FileReader;
import java.io.BufferedReader;
/**
 *
 * @author USER
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        try(BufferedReader br = new BufferedReader(new FileReader(""Bingo3.txt""))){
           
            String[] data = br.readLine().split("","");// read a line and split by ','
            int stringCount = Integer.parseInt(data[0]);// store the first integer in variable stringCount (number of announced strings)

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data2=br.readLine().split("","");
            for (int i=0 ; i<stringCount ; i++){
                announce[i]= data2[i];
//                System.out.print(announce[i]+""\t"");
           }
//                System.out.println("""");
            for (int i=0 ; i<num ; i++){
                String[] data_temp=br.readLine().split("","");
                for (int j=0 ; j<num ; j++){
                    matrix[i][j]=data_temp[j];
//                    System.out.print(matrix[i][j]+""\t"");
                    }
//                System.out.println("""");
                }
             int [][] checking = new int[num][num];
             for (int i=0 ; i<num ; i++){
                 for (int j=0 ; j<num ; j++)
                     checking[i][j]=0;
             }
             for (int p=0 ; p<stringCount ; p++){
             for (int i=0 ; i<num ; i++){
               for (int j=0 ; j<num ; j++){
               if (matrix[i][j].equals(announce[p]))
                   checking[i][j]=1;
               }
           }
                 }
             //for (int i=0 ; i<num ; i++){
             //    for (int j=0 ; j<num ; j++)
             //        System.out.print(checking[i][j]+""\t"");
             //    System.out.println("""");
             //}
             //---------------------------Find Bingo line---------------------//
            int counter=0,counter_diagonal1=0,counter_diagonal2=0;
            for (int i=0 ; i<num ; i++){
            if (checking[i][i]==1)
                counter_diagonal1++;
            }
            for (int i=0 ; i<num ; i++){
            if (checking[i][(num-1)-i]==1)
                counter_diagonal2++;
            }
            if (counter_diagonal1==num)
                counter++;
            if (counter_diagonal2==num)
                counter++;
            
                for (int i=0 ; i<num ; i++){
                    int temp=0,temp2=0;
                    for (int j=0 ; j<num ; j++){
                        temp+=checking[i][j];
                        temp2+=checking[j][i];
                    }
                    if (temp==num)
                        counter++;
                    if (temp2==num)
                        counter++;
            }
                System.out.println(counter);
             }
}
}
            
               
                
        

    
    


@9357bb93c35d4668f8d6d0338c1885bc@"
"r04631041","0","0","0","@190b55a0ba96ed8dd4b93a5d7bb372c7@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.FileReader;
import java.io.BufferedReader;
/**
 *
 * @author USER
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        try(BufferedReader br = new BufferedReader(new FileReader(""Bingo.txt""))){
           
            String[] data = br.readLine().split("","");// read a line and split by ','
            int stringCount = Integer.parseInt(data[0]);// store the first integer in variable stringCount (number of announced strings)

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data2=br.readLine().split("","");
            for (int i=0 ; i<stringCount ; i++){
                announce[i]= data2[i];
//                System.out.print(announce[i]+""\t"");
           }
//                System.out.println("""");
            for (int i=0 ; i<num ; i++){
                String[] data_temp=br.readLine().split("","");
                for (int j=0 ; j<num ; j++){
                    matrix[i][j]=data_temp[j];
//                    System.out.print(matrix[i][j]+""\t"");
                    }
//                System.out.println("""");
                }
             int [][] checking = new int[num][num];
             for (int i=0 ; i<num ; i++){
                 for (int j=0 ; j<num ; j++)
                     checking[i][j]=0;
             }
             for (int p=0 ; p<stringCount ; p++){
             for (int i=0 ; i<num ; i++){
               for (int j=0 ; j<num ; j++){
               if (matrix[i][j].equals(announce[p]))
                   checking[i][j]=1;
               }
           }
                 }
             //for (int i=0 ; i<num ; i++){
             //    for (int j=0 ; j<num ; j++)
             //        System.out.print(checking[i][j]+""\t"");
             //    System.out.println("""");
             //}
             //---------------------------Find Bingo line---------------------//
            int counter=0,counter_diagonal1=0,counter_diagonal2=0;
            for (int i=0 ; i<num ; i++){
            if (checking[i][i]==1)
                counter_diagonal1++;
            }
            for (int i=0 ; i<num ; i++){
            if (checking[i][(num-1)-i]==1)
                counter_diagonal2++;
            }
            if (counter_diagonal1==num)
                counter++;
            if (counter_diagonal2==num)
                counter++;
            
                for (int i=0 ; i<num ; i++){
                    int temp=0,temp2=0;
                    for (int j=0 ; j<num ; j++){
                        temp+=checking[i][j];
                        temp2+=checking[j][i];
                    }
                    if (temp==num)
                        counter++;
                    if (temp2==num)
                        counter++;
            }
                System.out.println(counter);
             }
}
}
            
               
                
        

    
    


@190b55a0ba96ed8dd4b93a5d7bb372c7@"
"r04522616","10","0.104","105264","@9d9b6219f0d591c3dcaccffcaba3ad8f@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bingoCircle=new int[num][num];
            

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            data = br.readLine().split("","");
            for(int i=0;i<stringCount;i++)
            {
                announce[i]= data[i];
                //System.out.printf(announce[i]+""\n"");  
            }
            for(int i=0;i<num;i++)
            {
                data = br.readLine().split("","");
                for(int j=0;j<num;j++)
                {
                    matrix[i][j]=data[j];
                    bingoCircle[i][j]=0;
                    
                    for(int k=0;k<stringCount;k++)
                    {
                        if(matrix[i][j].equals(announce[k]))
                        {
                            bingoCircle[i][j]=1;
                        }
                    }
                    //System.out.printf(matrix[i][j]+"" ""+bingoCircle[i][j]+""\n""); 
                }
            }
            int circleCountRow=0;
            int circleCountColumn=0;
            int circleCountLeft=0;
            int circleCountRight=0;
            int lineCount=0;
            int numR=num;
            for(int i=0;i<num;i++)
            {                
                for(int j=0;j<num;j++)
                {                    
                    circleCountRow+=bingoCircle[i][j];
                    circleCountColumn+=bingoCircle[j][i];                    
                    if(j==num-1)
                    {
                        if(circleCountRow==num)
                        {
                            lineCount++;
                        }
                        if(circleCountColumn==num)
                        {
                            lineCount++;
                        }                        
                        circleCountRow=0;
                        circleCountColumn=0;                         
                    }
                }                  
            }
            for(int j=0;j<num;j++)
            {
                    numR--;                    
                    circleCountLeft+=bingoCircle[j][j];
                    circleCountRight+=bingoCircle[j][numR];
                    if(j==num-1)
                    {                        
                        if(circleCountLeft==num)
                        {
                            lineCount++;
                        }
                        if(circleCountRight==num)
                        {
                            lineCount++;
                        }                        
                        circleCountLeft=0;
                        circleCountRight=0;
                        numR=num;
                    }
            }
            System.out.printf(""%d"",lineCount);
            
            
        }
    }
}

@9d9b6219f0d591c3dcaccffcaba3ad8f@"
"b01703032","6","0.86","103344","@7f6d1ef0ddd71cf409f37969cc116a51@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num]; 
            int count=0;
            int line=0;

            String[] data1 = br.readLine().split("","");
            {
                System.arraycopy(data1, 0, announce, 0, stringCount);
            }
           
           String temp=null;
           while((temp=br.readLine())!=null)
           {
            String[] array;
                array = temp.split("","");
                System.arraycopy(array, 0, matrix[count], 0, num);
             count++;
              }
           
           for(int i=0;i<stringCount;i++)
           {
             for(int j=0;j<num;j++)
             {
             for(int k=0;k<num;k++)
             {
             if (matrix[j][k].equals(announce[i]))
             {
             matrix[j][k]=""0"";
             }
             }
             }
                            }
          for(int j=0;j<num;j++)
           {
               int count1=0;
               for(int k=0;k<num;k++)
               {
                   if(""0"".equals(matrix[j][k]))  
                     count1++; 
                   else
                     break;          
               }   
               if(count1==num)
                line++;     
            } 
                      
          for(int j=0;j<num;j++)
           {
               int count1=0;
               for(int k=0;k<num;k++)
               {
                   if(""0"".equals(matrix[k][j]))
                   {  count1++;}
                   else
                   { break;}
               }
               if(count1==num)
               line++;
            }           

          int count1=0;
           for(int j=0;j<num;j++)
           {
               if(""0"".equals(matrix[j][j]))
                 count1++;
               else if(""0"".equals(matrix[j][num-j-1]))
                 count1++;          
               break;
            }
               if(count1==num)
                   line++;
               
           int count2=0;
           for(int j=0;j<num;j++)
           {
               if(""0"".equals(matrix[j][num-j-1]))
                 count2++;          
               break;
            }
               if(count2==num)
                   line++;
                                  
            
           System.out.println(line);
           
            /* printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num); */
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
        
    }

@7f6d1ef0ddd71cf409f37969cc116a51@"
"r04631041","10","0.099","105248","@e69dc89485b64a148848ab92322eb88f@import java.io.FileReader;
import java.io.BufferedReader;
/**
 *
 * @author USER
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
            String[] data = br.readLine().split("","");// read a line and split by ','
            int stringCount = Integer.parseInt(data[0]);// store the first integer in variable stringCount (number of announced strings)

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data2=br.readLine().split("","");
            for (int i=0 ; i<stringCount ; i++){
                announce[i]= data2[i];
//                System.out.print(announce[i]+""\t"");
           }
//                System.out.println("""");
            for (int i=0 ; i<num ; i++){
                String[] data_temp=br.readLine().split("","");
                for (int j=0 ; j<num ; j++){
                    matrix[i][j]=data_temp[j];
//                    System.out.print(matrix[i][j]+""\t"");
                    }
//                System.out.println("""");
                }
             int [][] checking = new int[num][num];
             for (int i=0 ; i<num ; i++){
                 for (int j=0 ; j<num ; j++)
                     checking[i][j]=0;
             }
             for (int p=0 ; p<stringCount ; p++){
             for (int i=0 ; i<num ; i++){
               for (int j=0 ; j<num ; j++){
               if (matrix[i][j].equals(announce[p]))
                   checking[i][j]=1;
               }
           }
                 }
             //for (int i=0 ; i<num ; i++){
             //    for (int j=0 ; j<num ; j++)
             //        System.out.print(checking[i][j]+""\t"");
             //    System.out.println("""");
             //}
             //---------------------------Find Bingo line---------------------//
            int counter=0,counter_diagonal1=0,counter_diagonal2=0;
            for (int i=0 ; i<num ; i++){
            if (checking[i][i]==1)
                counter_diagonal1++;
            }
            for (int i=0 ; i<num ; i++){
            if (checking[i][(num-1)-i]==1)
                counter_diagonal2++;
            }
            if (counter_diagonal1==num)
                counter++;
            if (counter_diagonal2==num)
                counter++;
            
                for (int i=0 ; i<num ; i++){
                    int temp=0,temp2=0;
                    for (int j=0 ; j<num ; j++){
                        temp+=checking[i][j];
                        temp2+=checking[j][i];
                    }
                    if (temp==num)
                        counter++;
                    if (temp2==num)
                        counter++;
            }
                System.out.println(counter);
             }
}
}
            
               
                
@e69dc89485b64a148848ab92322eb88f@"
"r03945012","0","0.21","107504","@bcef9c0ff1e5d87335f04d75021243a8@

import java.io.BufferedReader;
import java.util.Scanner;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
public class Bingo {

    public static void main(String[] args) throws Exception{
        
        InputStream is = null; 
        InputStreamReader isr = null;
        BufferedReader br = null;
        
        try{
            is = new FileInputStream(args[0]);
            isr = new InputStreamReader(is, StandardCharsets.UTF_8);
            br = new BufferedReader(isr);
            
            Scanner inputdata = new Scanner(br);
            String[] data;
            data = inputdata.nextLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d%n""
                    + ""dimension of matrix: %d x %d%n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            // using Scanner (Step.1)
            // read announce data by nextLine (Step.2)
            String[] announce = inputdata.nextLine().split("","");

            // read dimension of matrix (Step.3)
            for (int i = 0; i < num; i++) {
                matrix[i] = inputdata.nextLine().split("","");
            }
            // label zeros(3*3)
            int[][] label = new int[num][num];
            for (int[] row : label) {
                java.util.Arrays.fill(row, 0);
            }
            // if match 0 being 1
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix[0].length; j++) {
                    for (String announce1 : announce) {
                        if (matrix[i][j].equals(announce1)) {
                            label[i][j] = 1;
                        }
                    }
                }
            }

            // caculate the number of bingo line
            int countline = 0;
            int diag_sum = 0;
            int antidiag_sum = 0;
            // bingo count total line
            for (int i = 0; i < num; i++) {
                // diag bingo
                diag_sum += label[i][i];
                antidiag_sum += label[i][2 - i];
                // row_col bingo
                int row_sum = 0;
                int col_sum = 0;
                for (int j = 0; j < num; j++) {
                    row_sum += label[i][j];
                    col_sum += label[j][i];
                }
                if (row_sum == num)
                    countline++;
                if (col_sum == num)
                    countline++;
            }
            if (diag_sum == num)
                countline++;
            if (antidiag_sum == num)
                countline++;
            System.out.printf(""outputline: %d%n"", countline);
        }
        catch(FileNotFoundException | NumberFormatException e){
        }
        finally{
          // releases resources associated with the streams
            if(is!=null)
                is.close();
            if(isr!=null)
                isr.close();
            if(br!=null)
                br.close();
        } 
    }
}


@bcef9c0ff1e5d87335f04d75021243a8@"
"r03945012","10","0.122","110336","@f0f7860bf2ae69fb31dc502eb7a62262@
import java.io.BufferedReader;
import java.util.Scanner;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.nio.charset.StandardCharsets;
public class Bingo {

    public static void main(String[] args) throws Exception{
        
        InputStream is = null; 
        InputStreamReader isr = null;
        BufferedReader br = null;
        
        try{
            is = new FileInputStream(args[0]);
            isr = new InputStreamReader(is, StandardCharsets.UTF_8);
            br = new BufferedReader(isr);
            
            Scanner inputdata = new Scanner(br);
            String[] data;
            data = inputdata.nextLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[][] matrix = new String[num][num];

            // using Scanner (Step.1)
            // read announce data by nextLine (Step.2)
            String[] announce = inputdata.nextLine().split("","");

            // read dimension of matrix (Step.3)
            for (int i = 0; i < num; i++) {
                matrix[i] = inputdata.nextLine().split("","");
            }
            // label zeros(3*3)
            int[][] label = new int[num][num];
            for (int[] row : label) {
                java.util.Arrays.fill(row, 0);
            }
            // if match 0 being 1
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix[0].length; j++) {
                    for (String announce1 : announce) {
                        if (matrix[i][j].equals(announce1)) {
                            label[i][j] = 1;
                        }
                    }
                }
            }

            // caculate the number of bingo line
            int countline = 0;
            int diag_sum = 0;
            int antidiag_sum = 0;
            // bingo count total line
            for (int i = 0; i < num; i++) {
                // diag bingo
                diag_sum += label[i][i];
                antidiag_sum += label[i][num - 1- i];
                // row_col bingo
                int row_sum = 0;
                int col_sum = 0;
                for (int j = 0; j < num; j++) {
                    row_sum += label[i][j];
                    col_sum += label[j][i];
                }
                if (row_sum == num)
                    countline++;
                if (col_sum == num)
                    countline++;
            }
            if (diag_sum == num)
                countline++;
            if (antidiag_sum == num)
                countline++;
            System.out.print(countline);
        }
        catch(FileNotFoundException | NumberFormatException e){
        }
        finally{
          // releases resources associated with the streams
            if(is!=null)
                is.close();
            if(isr!=null)
                isr.close();
            if(br!=null)
                br.close();
        } 
    }
}


@f0f7860bf2ae69fb31dc502eb7a62262@"
"r04631039","0","0.21","107504","@a854444aed645b710b19edc4c9cfda5d@
import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author Eric
 */
public class Bingo1 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read 1st line and split by ','
            String[] data = br.readLine().split("","");
            // read 2nd line and split by ','
            String[] data2 = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
                      
//            String[] data3 = br.readLine().split("","");
//            String[] data4 = br.readLine().split("","");
//            String[] data5 = br.readLine().split("","");
//            for(int i=0;i<num;i++){
//                matrix[0][i] = data3[i];
//                matrix[1][i] = data4[i];
//                matrix[2][i] = data5[i];
//            }
            
            // read 3rd matrix and split by ','
            for (int i=0 ; i<num ; i++){
                String[] data3 = br.readLine().split("","");
                for (int j=0 ; j<num ; j++)
                    matrix[i][j]=data3[j];
            }   
            
            // check if alements matches announce string
            Integer[][] judge = new Integer[num][num];
            for(int i=0;i<num;i++){
                for(int j=0;j<num;j++){
                    if(matrix[i][j].equals(data2[0]))
                        judge[i][j] = 1;
                    else if(matrix[i][j].equals(data2[1]))
                        judge[i][j] = 1;
                    else
                        judge[i][j] = 0;
                }
            }

            int[] col = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    col[i] += judge[i][j];
            
            int[] row = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    row[i] += judge[j][i];
            
            int dia1 = 0;            
            for(int i=0;i<num;i++)
                dia1 += judge[i][i];
            
            int dia2 = 0;            
            for(int i=0;i<num;i++)
                dia2 += judge[i][num-1-i];
            
            
            int line = 0;
            for(int i=0;i<num;i++){
                if(col[i]==num)
                    line++;
                else if(row[i]==num)
                    line++;
                else if(dia1==num)
                    line++;
                else if(dia2==num)
                    line++;
            }
            
            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
//            System.out.printf(""%d\n"", line);
        }
    }
}

@a854444aed645b710b19edc4c9cfda5d@"
"r04631039","0","0.88","104544","@11cc3dafca6232e68d02af0a04b91868@
import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author Eric
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read 1st line and split by ','
            String[] data = br.readLine().split("","");
            // read 2nd line and split by ','
            String[] data2 = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
                      
//            String[] data3 = br.readLine().split("","");
//            String[] data4 = br.readLine().split("","");
//            String[] data5 = br.readLine().split("","");
//            for(int i=0;i<num;i++){
//                matrix[0][i] = data3[i];
//                matrix[1][i] = data4[i];
//                matrix[2][i] = data5[i];
//            }
            
            // read 3rd matrix and split by ','
            for (int i=0 ; i<num ; i++){
                String[] data3 = br.readLine().split("","");
                for (int j=0 ; j<num ; j++)
                    matrix[i][j]=data3[j];
            }   
            
            // check if alements matches announce string
            Integer[][] judge = new Integer[num][num];
            for(int i=0;i<num;i++){
                for(int j=0;j<num;j++){
                    if(matrix[i][j].equals(data2[0]))
                        judge[i][j] = 1;
                    else if(matrix[i][j].equals(data2[1]))
                        judge[i][j] = 1;
                    else
                        judge[i][j] = 0;
                }
            }

            int[] col = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    col[i] += judge[i][j];
            
            int[] row = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    row[i] += judge[j][i];
            
            int dia1 = 0;            
            for(int i=0;i<num;i++)
                dia1 += judge[i][i];
            
            int dia2 = 0;            
            for(int i=0;i<num;i++)
                dia2 += judge[i][num-1-i];
            
            
            int line = 0;
            for(int i=0;i<num;i++){
                if(col[i]==num)
                    line++;
                else if(row[i]==num)
                    line++;
                else if(dia1==num)
                    line++;
                else if(dia2==num)
                    line++;
            }
            
            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
//            System.out.printf(""%d\n"", line);
        }
    }
}

@11cc3dafca6232e68d02af0a04b91868@"
"r04631039","5","1.02","105488","@63507a1cd7743a78240594200ab884df@
import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author Eric
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read 1st line and split by ','
            String[] data = br.readLine().split("","");
            // read 2nd line and split by ','
            String[] data2 = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
                      
//            String[] data3 = br.readLine().split("","");
//            String[] data4 = br.readLine().split("","");
//            String[] data5 = br.readLine().split("","");
//            for(int i=0;i<num;i++){
//                matrix[0][i] = data3[i];
//                matrix[1][i] = data4[i];
//                matrix[2][i] = data5[i];
//            }
            
            // read 3rd matrix and split by ','
            for (int i=0 ; i<num ; i++){
                String[] data3 = br.readLine().split("","");
                for (int j=0 ; j<num ; j++)
                    matrix[i][j]=data3[j];
            }   
            
            // check if alements matches announce string
            Integer[][] judge = new Integer[num][num];
            for(int i=0;i<num;i++){
                for(int j=0;j<num;j++){
                    if(matrix[i][j].equals(data2[0]))
                        judge[i][j] = 1;
                    else if(matrix[i][j].equals(data2[1]))
                        judge[i][j] = 1;
                    else
                        judge[i][j] = 0;
                }
            }

            int[] col = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    col[i] += judge[i][j];
            
            int[] row = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    row[i] += judge[j][i];
            
            int dia1 = 0;            
            for(int i=0;i<num;i++)
                dia1 += judge[i][i];
            
            int dia2 = 0;            
            for(int i=0;i<num;i++)
                dia2 += judge[i][num-1-i];
            
            
            int line = 0;
            for(int i=0;i<num;i++){
                if(col[i]==num)
                    line++;
                else if(row[i]==num)
                    line++;
                else if(dia1==num)
                    line++;
                else if(dia2==num)
                    line++;
            }
            
            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            System.out.printf(""%d\n"", line);
        }
    }
}

@63507a1cd7743a78240594200ab884df@"
"r04631039","5","0.82","103648","@d112b92e00feae67e254a23ad0cfd274@
import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author Eric
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read 1st line and split by ','
            String[] data = br.readLine().split("","");
            // read 2nd line and split by ','
            String[] data2 = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            // read 3rd matrix and split by ','
            for (int i=0 ; i<num ; i++){
                String[] data3 = br.readLine().split("","");
                for (int j=0 ; j<num ; j++)
                    matrix[i][j]=data3[j];
            }   
            
            // check if alements matches announce string
            Integer[][] judge = new Integer[num][num];
            for(int i=0;i<num;i++){
                for(int j=0;j<num;j++){
                    if(matrix[i][j].equals(data2[0]))
                        judge[i][j] = 1;
                    else if(matrix[i][j].equals(data2[1]))
                        judge[i][j] = 1;
                    else
                        judge[i][j] = 0;
                }
            }

            int[] col = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    col[i] += judge[i][j];
            
            int[] row = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    row[i] += judge[j][i];
            
            int dia1 = 0;            
            for(int i=0;i<num;i++)
                dia1 += judge[i][i];
            
            int dia2 = 0;            
            for(int i=0;i<num;i++)
                dia2 += judge[i][num-1-i];
            
            
            int line = 0;
            for(int i=0;i<num;i++){
                if(col[i]==num)
                    line++;
                else if(row[i]==num)
                    line++;
                else if(dia1==num)
                    line++;
                else if(dia2==num)
                    line++;
            }
            
            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            System.out.printf(""%d\n"", line);
        }
    }
}

@d112b92e00feae67e254a23ad0cfd274@"
"r04921105","0","1.06","105632","@8b8449656f84c482282817f5bf64dbaf@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            String[][] check = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            // read the rest content of the file
            String[] country = br.readLine().split("","");
            /*
            String[] row1 = br.readLine().split("","");
            String[] row2 = br.readLine().split("","");
            String[] row3 = br.readLine().split("","");
           */
            //store the announce strings (2nd line of the file) in variable announce
           for(int i=0; i < stringCount; i++)
           {announce [i]= country[i];
        //   System.out.print(announce[i]);
        //  System.out.print(""\n"");
            }
          //store the matrix (from the 3rd line to the end of the file) in variable matrix

          for(int i=0;i<num;i++)
          { matrix[i] = br.readLine().split("",""); 
              }
            // print stored matrix
            for (String[] matrix1 : matrix) {
                for (int j = 0; j<matrix[0].length; j++) {
                    System.out.print(matrix1[j]);
                }
                System.out.print(""\n"");
            }
          //compare the matrix and announce strings (this is the tricky part)
          //1)creat a same size matrix
          for (int i = 0 ;i<matrix.length;i++){
              for(int j=0;j<matrix[0].length;j++){
              check[i][j]=null;    
            }
          }
         //2)check matrix[][].equal(accounce[])
         for(int x = 0;x<stringCount;x++){
                for (int i=0;i<matrix.length;i++) {
                    for (int j = 0; j<matrix[0].length; j++) {
                        if(announce[x].equals(matrix[i][j])){
                            check[i][j]=""bingo"";
                        }
                    }
                    
                }
         }   
         //3)print new check
         for (String[] matrix2 : check) {
                for (int j = 0; j<check[0].length; j++) {
                    System.out.print(matrix2[j]);
                }
                System.out.print(""\n"");
            }
         //4)check straight
         int straight =0;
         //rightdown
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(i==j&&check[i][j]==""bingo""){
                     counter++;
                     System.out.print(counter);
                     System.out.print(""\n"");
                     
                     }
                      
                 }
                 if(counter==check[0].length){
                         straight++;
             
             }
             
         }
System.out.print(""\n"");
        //row
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
             
                 if(check[i][j]==""bingo""){
                     counter++;
                     System.out.print(counter);
                     System.out.print(""\n"");
                     
                     }
                  if(counter==check[0].length){
                         straight++;    
                    }
             
             
             }
         }
        
 System.out.print(""\n"");        
         //col
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(check[j][i]==""bingo""){
                     counter++;
                     System.out.print(counter);
                     System.out.print(""\n"");
                     
                     }
                  if(counter==check[0].length){
                         straight++;    
                 }
             
             }
             
         }
    System.out.print(""\n"");     
         //leftdown
         
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(i+j==num&&check[i][j]==""bingo""){
                     counter++;
                     System.out.print(counter);
                     System.out.print(""\n"");
                     
                     }
                      
                 }
                 if(counter==check[0].length){
                         straight++;
             
             }
             
         }
         
         System.out.print(""\n"");
         
         //print out answer
          System.out.print(straight);
            /*  now you can write yur own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@8b8449656f84c482282817f5bf64dbaf@"
"r04921105","0","0.9","104912","@8b8449656f84c482282817f5bf64dbaf@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            String[][] check = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            // read the rest content of the file
            String[] country = br.readLine().split("","");
            /*
            String[] row1 = br.readLine().split("","");
            String[] row2 = br.readLine().split("","");
            String[] row3 = br.readLine().split("","");
           */
            //store the announce strings (2nd line of the file) in variable announce
           for(int i=0; i < stringCount; i++)
           {announce [i]= country[i];
        //   System.out.print(announce[i]);
        //  System.out.print(""\n"");
            }
          //store the matrix (from the 3rd line to the end of the file) in variable matrix

          for(int i=0;i<num;i++)
          { matrix[i] = br.readLine().split("",""); 
              }
            // print stored matrix
            for (String[] matrix1 : matrix) {
                for (int j = 0; j<matrix[0].length; j++) {
                    System.out.print(matrix1[j]);
                }
                System.out.print(""\n"");
            }
          //compare the matrix and announce strings (this is the tricky part)
          //1)creat a same size matrix
          for (int i = 0 ;i<matrix.length;i++){
              for(int j=0;j<matrix[0].length;j++){
              check[i][j]=null;    
            }
          }
         //2)check matrix[][].equal(accounce[])
         for(int x = 0;x<stringCount;x++){
                for (int i=0;i<matrix.length;i++) {
                    for (int j = 0; j<matrix[0].length; j++) {
                        if(announce[x].equals(matrix[i][j])){
                            check[i][j]=""bingo"";
                        }
                    }
                    
                }
         }   
         //3)print new check
         for (String[] matrix2 : check) {
                for (int j = 0; j<check[0].length; j++) {
                    System.out.print(matrix2[j]);
                }
                System.out.print(""\n"");
            }
         //4)check straight
         int straight =0;
         //rightdown
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(i==j&&check[i][j]==""bingo""){
                     counter++;
                     System.out.print(counter);
                     System.out.print(""\n"");
                     
                     }
                      
                 }
                 if(counter==check[0].length){
                         straight++;
             
             }
             
         }
System.out.print(""\n"");
        //row
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
             
                 if(check[i][j]==""bingo""){
                     counter++;
                     System.out.print(counter);
                     System.out.print(""\n"");
                     
                     }
                  if(counter==check[0].length){
                         straight++;    
                    }
             
             
             }
         }
        
 System.out.print(""\n"");        
         //col
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(check[j][i]==""bingo""){
                     counter++;
                     System.out.print(counter);
                     System.out.print(""\n"");
                     
                     }
                  if(counter==check[0].length){
                         straight++;    
                 }
             
             }
             
         }
    System.out.print(""\n"");     
         //leftdown
         
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(i+j==num&&check[i][j]==""bingo""){
                     counter++;
                     System.out.print(counter);
                     System.out.print(""\n"");
                     
                     }
                      
                 }
                 if(counter==check[0].length){
                         straight++;
             
             }
             
         }
         
         System.out.print(""\n"");
         
         //print out answer
          System.out.print(straight);
            /*  now you can write yur own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@8b8449656f84c482282817f5bf64dbaf@"
"r04921105","6","0.99","105216","@b3fee29bbf5721c1893286b76dd4fa08@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            String[][] check = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            // read the rest content of the file
            String[] country = br.readLine().split("","");
            /*
            String[] row1 = br.readLine().split("","");
            String[] row2 = br.readLine().split("","");
            String[] row3 = br.readLine().split("","");
           */
            //store the announce strings (2nd line of the file) in variable announce
           for(int i=0; i < stringCount; i++)
           {announce [i]= country[i];
        //   System.out.print(announce[i]);
        //  System.out.print(""\n"");
            }
          //store the matrix (from the 3rd line to the end of the file) in variable matrix

          for(int i=0;i<num;i++)
          { matrix[i] = br.readLine().split("",""); 
              }
            // print stored matrix
            for (String[] matrix1 : matrix) {
                for (int j = 0; j<matrix[0].length; j++) {
                //    System.out.print(matrix1[j]);
                }
              //  System.out.print(""\n"");
            }
          //compare the matrix and announce strings (this is the tricky part)
          //1)creat a same size matrix
          for (int i = 0 ;i<matrix.length;i++){
              for(int j=0;j<matrix[0].length;j++){
              check[i][j]=null;    
            }
          }
         //2)check matrix[][].equal(accounce[])
         for(int x = 0;x<stringCount;x++){
                for (int i=0;i<matrix.length;i++) {
                    for (int j = 0; j<matrix[0].length; j++) {
                        if(announce[x].equals(matrix[i][j])){
                            check[i][j]=""bingo"";
                        }
                    }
                    
                }
         }   
         //3)print new check
         for (String[] matrix2 : check) {
                for (int j = 0; j<check[0].length; j++) {
             //       System.out.print(matrix2[j]);
                }
          //      System.out.print(""\n"");
            }
         //4)check straight
         int straight =0;
         //rightdown
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(i==j&&check[i][j]==""bingo""){
                     counter++;
            //         System.out.print(counter);
            //         System.out.print(""\n"");
                     
                     }
                      
                 }
                 if(counter==check[0].length){
                         straight++;
             
             }
             
         }
//System.out.print(""\n"");
        //row
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
             
                 if(check[i][j]==""bingo""){
                     counter++;
                    // System.out.print(counter);
                    // System.out.print(""\n"");
                     
                     }
                  if(counter==check[0].length){
                         straight++;    
                    }
             
             
             }
         }
        
 //System.out.print(""\n"");        
         //col
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(check[j][i]==""bingo""){
                     counter++;
                  //   System.out.print(counter);
                  //   System.out.print(""\n"");
                     
                     }
                  if(counter==check[0].length){
                         straight++;    
                 }
             
             }
             
         }
  //  System.out.print(""\n"");     
         //leftdown
         
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(i+j==num&&check[i][j]==""bingo""){
                     counter++;
                  //   System.out.print(counter);
                   //  System.out.print(""\n"");
                     
                     }
                      
                 }
                 if(counter==check[0].length){
                         straight++;
             
             }
             
         }
         
     //    System.out.print(""\n"");
         
         //print out answer
          System.out.print(straight);
            /*  now you can write yur own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@b3fee29bbf5721c1893286b76dd4fa08@"
"b99611017","0","0","0","@6a9683a3f31559b8ca7d75ee78adda91@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

import java.io.*;
import java.util.Scanner;
import java.lang.String;
import java.util.Arrays;
import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    public static void main(String[] args) throws IOException {
        try {
            File Data = new File(""input.txt""); //讀入檔案
            int len = (int) Data.length();      //抓檔案長度
            FileReader ReadData = new FileReader(Data);
            char buffer[];
            buffer = new char[len];
            ReadData.read(buffer);
            String str = new String(buffer);
            
            String[] token = str.split(""\n""); //分割字串
            int tokenLen=token.length;
            String matr="""";
            for(int i=0;i<tokenLen;i++)
            {
                matr=matr+token[i]+"","";
                
            }
            String[] ans=matr.split("","");
            
            int annoucedNum=Integer.valueOf(ans[0]);
            int size=Integer.valueOf(ans[1]);
            String[] announced=new String[annoucedNum]; //儲存公布國名用
            String[][] countr=new String[size][size];   //賓果板
            int k=2+annoucedNum;                                    //以下配置賓果板
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    countr[i][j]=ans[k];
                    k++;
                }
            }
            int[][] score=new int[size][size];      //紀錄賓果配對情況
            for(int i=0;i<size;i++)                 //記分板歸零
            {
                for(int j=0;j<size;j++)
                {
                    score[i][j]=0;
                }
            }
            for(int i=annoucedNum;i<annoucedNum+annoucedNum;i++)          //開始劃記計分板
            {
                for(int j=0;j<size;j++)
                {
                    for(int l=0;l<size;l++)
                    {
                        if(countr[j][l].equals(ans[i]))
                        {
                            score[j][l]++;
                        }
                    }
                }
            }
            int lineNum=0;
            int counter=0;//儲存連線數量
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    counter=counter+score[i][j];
                }
                if(counter==size)
                {
                    lineNum++;
                    counter=0;
                }
                else
                {
                    counter=0;
                }
            }
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    counter=counter+score[j][i];
                }
                if(counter==size)
                {
                    lineNum++;
                    counter=0;
                }
                else
                {
                    counter=0;
                }
            }
            for(int i=0;i<size;i++)
            {
                counter=counter+score[i][i];
            }
            if(counter==size)
            {
                lineNum++;
                counter=0;
            }
            else
            {
                counter=0;
            }
            for(int i=0;i<size;i++)
            {
                counter=counter=score[size-1-i][i];
            }
            if(counter==size)
            {
                lineNum++;
                counter=0;
            }
            else
            {
                counter=0;
            }
            /*
            
            System.out.println(""此文字檔為:"" + str);
            System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
            System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(""總共有"" + lineNum + ""條連線"");
        }
        catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }
        
    }

}

@6a9683a3f31559b8ca7d75ee78adda91@"
"b01502105","10","0.095","106368","@660e172a5aa2d894d26c652e7f43a3fe@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            announce = br.readLine().split("","");

            for (int i = 0; i < num; i++) {
                matrix[i] = br.readLine().split("","");
            }

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(data[0]+"" ""+data[1]+""\n"");
//            System.out.printf(announce[0]+"" ""+announce[1]+""\n"");
//            System.out.println(matrix[0][0]+"" ""+matrix[0][1]+"" ""+matrix[0][2]);
//            System.out.println(matrix[1][0]+"" ""+matrix[1][1]+"" ""+matrix[1][2]);
//            System.out.println(matrix[2][0]+"" ""+matrix[2][1]+"" ""+matrix[2][2]);
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            //fill in compare matrix
            int[][] mat_compare = new int[num][num];
            for (int y = 0; y < num; y++) {
                for (int x = 0; x < num; x++) {
                    for (int j = 0; j < stringCount; j++) {
                        if (matrix[x][y].equals(announce[j])) {
                            mat_compare[x][y] = 1;
                        }
                    }
                }
            }
//            System.out.println(mat_compare[0][0]+"" ""+mat_compare[0][1]+"" ""+mat_compare[0][2]);
//            System.out.println(mat_compare[1][0]+"" ""+mat_compare[1][1]+"" ""+mat_compare[1][2]);
//            System.out.println(mat_compare[2][0]+"" ""+mat_compare[2][1]+"" ""+mat_compare[2][2]);
            int[] row = new int[num];
            int[] column = new int[num];
            int[] diagonal = new int[2];
            int line_count = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    row[i] += mat_compare[i][j];
                    column[i] += mat_compare[j][i];
                }
                //check diagonal
                diagonal[0] += mat_compare[i][i];
                diagonal[1] += mat_compare[i][num - i - 1];
                if (row[i] == num) {
                    line_count++;
                }
                if (column[i] == num) {
                    line_count++;
                }
            }
            if (diagonal[0] == num) {
                line_count++;
            }
            if (diagonal[1] == num) {
                line_count++;
            }
//            System.out.println(row[0]+"" ""+row[1]+"" ""+row[2]);
//            System.out.println(column[0]+"" ""+column[1]+"" ""+column[2]);
            System.out.println(line_count);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }

}

@660e172a5aa2d894d26c652e7f43a3fe@"
"r04921065","0","0","0","@80d48e33535cf885e3574fb3d9ccf95f@//package Bingo;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws IOException {

        // read file from args[0] in Java 7 style
        FileReader fr = new FileReader(""C:\\Users\\余軒\\Documents\\algs4\\Bingo\\src\\Bingo\\input.txt"");
        BufferedReader br = new BufferedReader(fr);
            
            // read a line and split by ','
            String[] data= new String[2];
            data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            
            String[] va = new String[2]; //pointer
            
            va = br.readLine().split("","");
            System.out.println(va[0]+"",""+va[1]);
           
           String[] country ;
            country= new String[num];
            String rd=null;
            int ct=0;
            while ((rd = br.readLine())!=null)
            {
                country = rd.split("","");
                matrix[ct]=country;
                for (int i=0;i<num;i++)
                System.out.print(matrix[ct][i]+"","");  //depointer
                System.out.println(); //換行
                
                ct++;
            }
        //  System.out.println(matrix[0][1]); 
     
          boolean[][] b = new boolean[num][num];
          for (int i=0;i<num;i++){
              for (int j=0;j<num;j++)
              {
                  if (va[0].equals(matrix[i][j]))
                  {
                      b[i][j] = true;
                  }
                  else b[i][j] = va[1].equals(matrix[i][j]);  //若是為true,不是為false
                  }
              }
         
       //   System.out.println(b[2][2]);
          
          int count = 0;
          //horizatal
          for (int i=0;i<num;i++){
          if (b[i][0]==b[i][1]&&b[i][1]==b[i][2]&&b[i][2]==true)
          {
          count++;
          }   
              }
          //vertical
          for(int j=0;j<num;j++){
          if (b[0][j]==b[1][j]&&b[1][j]==b[2][j]&&b[2][j]==true)
          {
              count++;
          }
          }
          //diaonal
          if (b[0][0]==b[1][1]&&b[1][1]==b[2][2]&&b[2][2]==true)
          {
              count++;
          }
          if(!(b[2][0]==b[1][1]&&b[1][1]==b[0][2]&&b[0][2]==true))
          {
          } else {
              count++;
        }
          System.out.println(count); 
          
          
              
            // printf in Java (you should comment out or delete this in your final submission)
            

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
        
    }

}
@80d48e33535cf885e3574fb3d9ccf95f@"
"r04921065","0","0","0","@b8ceaf1bd0acacb5c4f6ed5df6a96cd6@//package Bingo;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws IOException {

        // read file from args[0] in Java 7 style
        FileReader fr = new FileReader(""C:\\Users\\余軒\\Documents\\algs4\\Bingo\\src\\Bingo\\input.txt"");
        BufferedReader br = new BufferedReader(fr);
            
            // read a line and split by ','
            String[] data= new String[2];
            data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            
            String[] va = new String[2]; //pointer
            
            va = br.readLine().split("","");
           // System.out.println(va[0]+"",""+va[1]);
           
           String[] country ;
            country= new String[num];
            String rd=null;
            int ct=0;
            while ((rd = br.readLine())!=null)
            {
                country = rd.split("","");
                matrix[ct]=country;
                /*for (int i=0;i<num;i++)
                System.out.print(matrix[ct][i]+"","");  //depointer */
                //System.out.println(); //換行
                
                ct++;
            }
        //  System.out.println(matrix[0][1]); 
     
          boolean[][] b = new boolean[num][num];
          for (int i=0;i<num;i++){
              for (int j=0;j<num;j++)
              {
                  if (va[0].equals(matrix[i][j]))
                  {
                      b[i][j] = true;
                  }
                  else b[i][j] = va[1].equals(matrix[i][j]);  //若是為true,不是為false
                  }
              }
         
          //System.out.println(b[2][2]);
          
          int count = 0;
          //horizatal
          for (int i=0;i<num;i++){
          if (b[i][0]==b[i][1]&&b[i][1]==b[i][2]&&b[i][2]==true)
          {
          count++;
          }   
              }
          //vertical
          for(int j=0;j<num;j++){
          if (b[0][j]==b[1][j]&&b[1][j]==b[2][j]&&b[2][j]==true)
          {
              count++;
          }
          }
          //diaonal
          if (b[0][0]==b[1][1]&&b[1][1]==b[2][2]&&b[2][2]==true)
          {
              count++;
          }
          if(!(b[2][0]==b[1][1]&&b[1][1]==b[0][2]&&b[0][2]==true))
          {
          } else {
              count++;
        }
          System.out.println(count); 
          
          
              
            // printf in Java (you should comment out or delete this in your final submission)
            

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
        
    }

}
@b8ceaf1bd0acacb5c4f6ed5df6a96cd6@"
"b03704074","10","0.079","104480","@e025ca0a9b7b6ab011d5ae798a889b98@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           back:
           {
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        
        first = br.readLine().split("","");
        if(first.length!=2)
        {
            System.out.println(""0"");
            break back;
        }
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
            {
            System.out.println(""0"");
            break back;
            }
        }
        
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
            if(str1.length!=num[0])
            {
            System.out.println(""0"");
            break back;
            }
            for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    {
                    System.out.println(""0"");
                    break back;
                    }
                }
            }
        
         
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 if(str2.length!=num[1])
                     {
                    System.out.println(""0"");
                    break back;
                    }
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}
}



@e025ca0a9b7b6ab011d5ae798a889b98@"
"b03704074","10","0.094","105200","@c01f38c257090f663c0547b215027762@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           back:
           {
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        
        first = br.readLine().split("","");
        if(first.length!=2)
        {
            //System.out.println(""0"");
            break back;
        }
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
            {
            //System.out.println(""0"");
            break back;
            }
        }
        
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
            if(str1.length!=num[0])
            {
            //System.out.println(""0"");
            break back;
            }
            for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    {
                    //System.out.println(""0"");
                    break back;
                    }
                }
            }
        
         
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 if(str2.length!=num[1])
                     {
                    //System.out.println(""0"");
                    break back;
                    }
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}
}



@c01f38c257090f663c0547b215027762@"
"b99611017","1","0.12","102256","@5fc2d6e7f8c2921f4d55066e368728ce@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.*;
import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
import java.util.Arrays;
import java.util.*;*/

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    public static void main(String[] args) {
        
        
        try {
            
            Scanner sn=new Scanner(args[0]);
            String fpath=sn.next();
            File f=new File(fpath);
            FileReader fin=new FileReader(f);
            int fsize=(int)f.length();
            char buffer[]=new char[fsize];
            fin.read(buffer);
            String str=new String(buffer);
            /*File Data = new File(args[0]); //讀入檔案
            int len = (int) Data.length();      //抓檔案長度
            FileReader ReadData = new FileReader(Data);
            char buffer[];
            buffer = new char[len];
            ReadData.read(buffer);
            String str = new String(buffer);*/
            String[] token = str.split(""\n"");
            //String[] token = str.split(""\n""); //分割字串
            int tokenLen=token.length;
            //String matr="""";
            
            for(int i=0;i<tokenLen;i++)
            {
                token[i]=token[i]+"","";
                
            }
            StringBuffer buf=new StringBuffer();
            for(int i=0;i<tokenLen;i++)
            {
                buf.append(token[i]);
            }
            String matr=buf.toString();
            String[] ans=matr.split("","");
            
            int annoucedNum=Integer.parseInt(ans[0]);
            int size=Integer.parseInt(ans[1]);
          //  String[] announced=new String[annoucedNum]; //儲存公布國名用
            String[][] countr=new String[size][size];   //賓果板
            int k=annoucedNum+annoucedNum;                                    //以下配置賓果板
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    countr[i][j]=ans[k];
                    k++;
                }
            }
            int[][] score=new int[size][size];      //紀錄賓果配對情況
            for(int i=0;i<size;i++)                 //記分板歸零
            {
                for(int j=0;j<size;j++)
                {
                    score[i][j]=0;
                }
            }
            for(int i=annoucedNum;i<annoucedNum+annoucedNum;i++)          //開始劃記計分板
            {
                for(int j=0;j<size;j++)
                {
                    for(int l=0;l<size;l++)
                    {
                        if(countr[j][l].equals(ans[i]))
                        {
                            score[j][l]++;
                        }
                    }
                }
            }
            int lineNum=0;
            int counter=0;//儲存連線數量
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    counter=counter+score[i][j];
                }
                if(counter==size)
                {
                    lineNum++;
                    counter=0;
                }
                else
                {
                    counter=0;
                }
            }
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    counter=counter+score[j][i];
                }
                if(counter==size)
                {
                    lineNum++;
                    counter=0;
                }
                else
                {
                    counter=0;
                }
            }
            int counter1=0;
            for(int i=0;i<size;i++)
            {
                counter1=counter1+score[i][i];
            }
            if(counter1==size)
            {
                lineNum++;
                counter1=0;
            }
            else
            {
                counter1=0;
            }
            int counter2=0;
            for(int i=0;i<size;i++)
            {
                counter2=counter2=score[size-1-i][i];
            }
            if(counter==size)
            {
                lineNum++;
                counter2=0;
            }
            else
            {
                counter2=0;
            }
            /*
            
            System.out.println(""此文字檔為:"" + str);
            System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
            System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            fin.close();
        }
        catch(RuntimeException e)
        {
            throw e;
        }
        catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }
        
        
    }

}

@5fc2d6e7f8c2921f4d55066e368728ce@"
"b03704074","10","0.096","106576","@2fdc0b401d0c6605b61bb35887ee6a71@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           back:
           {
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        
        first = br.readLine().split("","");
        if(first.length!=2)
        {
            //System.out.println(""0"");
            break back;
        }
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
            {
            //System.out.println(""0"");
            break back;
            }
        }
        
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
            if(str1.length!=num[0])
            {
            //System.out.println(""0"");
            break back;
            }
            /*for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    {
                    //System.out.println(""0"");
                    break back;
                    }
                }
            }*/
        
         
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 if(str2.length!=num[1])
                     {
                    //System.out.println(""0"");
                    break back;
                    }
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}
}



@2fdc0b401d0c6605b61bb35887ee6a71@"
"b99611017","1","0.11","104832","@a89cb92a5da77e26e08b6f058b394640@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.*;
import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
import java.util.Arrays;
import java.util.*;*/

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    public static void main(String[] args) {
        
        
        try {
            
            Scanner sn=new Scanner(args[0]);
            String fpath=sn.next();
            File f=new File(fpath);
            FileReader fin=new FileReader(f);
            int fsize=(int)f.length();
            char buffer[]=new char[fsize];
            fin.read(buffer);
            String str=new String(buffer);
            /*File Data = new File(args[0]); //讀入檔案
            int len = (int) Data.length();      //抓檔案長度
            FileReader ReadData = new FileReader(Data);
            char buffer[];
            buffer = new char[len];
            ReadData.read(buffer);
            String str = new String(buffer);*/
            String[] token = str.split(""\n"");
            //String[] token = str.split(""\n""); //分割字串
            int tokenLen=token.length;
            //String matr="""";
            
            for(int i=0;i<tokenLen;i++)
            {
                token[i]=token[i]+"","";
                
            }
            StringBuffer buf=new StringBuffer();
            for(int i=0;i<tokenLen;i++)
            {
                buf.append(token[i]);
            }
            String matr=buf.toString();
            String[] ans=matr.split("","");
            
            int annoucedNum=Integer.parseInt(ans[0]);
            int size=Integer.parseInt(ans[1]);
          //  String[] announced=new String[annoucedNum]; //儲存公布國名用
            String[][] countr=new String[size][size];   //賓果板
            int k=annoucedNum+annoucedNum;                                    //以下配置賓果板
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    countr[i][j]=ans[k];
                    k++;
                }
            }
            int[][] score=new int[size][size];      //紀錄賓果配對情況
            for(int i=0;i<size;i++)                 //記分板歸零
            {
                for(int j=0;j<size;j++)
                {
                    score[i][j]=0;
                }
            }
            for(int i=annoucedNum;i<annoucedNum+annoucedNum;i++)          //開始劃記計分板
            {
                for(int j=0;j<size;j++)
                {
                    for(int l=0;l<size;l++)
                    {
                        if(countr[j][l].equals(ans[i]))
                        {
                            score[j][l]++;
                        }
                    }
                }
            }
            int lineNum=0;
            int counter=0;//儲存連線數量
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    counter=counter+score[i][j];
                }
                if(counter==size)
                {
                    lineNum++;
                    counter=0;
                }
                else
                {
                    counter=0;
                }
            }
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    counter=counter+score[j][i];
                }
                if(counter==size)
                {
                    lineNum++;
                    counter=0;
                }
                else
                {
                    counter=0;
                }
            }
            int counter1=0;
            for(int i=0;i<size;i++)
            {
                counter1=counter1+score[i][i];
            }
            if(counter1==size)
            {
                lineNum++;
                counter1=0;
            }
            else
            {
                counter1=0;
            }
            int counter2=0;
            for(int i=0;i<size;i++)
            {
                counter2=counter2+score[size-1-i][i];
            }
            if(counter==size)
            {
                lineNum++;
                counter2=0;
            }
            else
            {
                counter2=0;
            }
            /*
            
            System.out.println(""此文字檔為:"" + str);
            System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
            System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            fin.close();
        }
        catch(RuntimeException e)
        {
            throw e;
        }
        catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }
        
        
    }

}


@a89cb92a5da77e26e08b6f058b394640@"
"r04228027","0","0.9","106960","@ad6ff1d30bdc42e032099c32195603cc@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    
    public static boolean find(String x, String[] anno){
        for (String item : anno) {
            if (x.equals(item))
                return true;
        }
        return false;
    }
    
    public static void printResult(String[][] thematrix){
                for (int i = 0; i < thematrix.length; i++) {
                    for (int j = 0; j < thematrix.length; j++)
                        System.out.printf(thematrix[i][j]+"" "");
                    System.out.printf(""\n"");
                }
            }

    public static void main(String[] args) throws Exception {
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            // 1. read the rest content of the file
            // 2. store the announce strings (2nd line of the file) in variable announce
            announce = br.readLine().split("","");
            // 3. store the matrix (from the 3rd line to the end of the file) in variable matrix
            for (int i = 0; i < num; i++) {
               String[] temp = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = temp[j];                   
                }
            }
            //printResult(matrix);
            // 4. compare the matrix and announce strings (this is the tricky part)
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if(find(matrix[i][j], announce))
                        matrix[i][j] = ""cross"";
                }
            }
            //printResult(matrix);
            //  5. output how many 'straight line' are there in the matrix
            int lines = 0;
            //check row and colunm
            for (int i = 0; i < num; i++) {
                int temp1 = 0;
                int temp2 = 0;
                for (int j = 0; j < num; j++) {
                    if(matrix[i][j].equals(""cross""))
                        temp1+=1;
                    if(matrix[j][i].equals(""cross""))
                        temp2+=1;
                }
                if(temp1 == num && temp2 == num )
                    lines += 2;
                else if(temp1 == num || temp2 == num)
                    lines += 1;
            }
            //check diagonal
            int temp1 = 0;
            int temp2 = 0;
            for (int i = 0; i < num; i++) {
                if(matrix[i][i].equals(""cross"")){
                    temp1 += 1;
                }
                if(matrix[i][num-1-i].equals(""cross"")){
                    temp2 += 1;
                }
            }
            if(temp1 == num && temp2 == num )
                    lines += 2;
            else if(temp1 == num || temp2 == num)
                    lines += 1;
            
            System.out.printf(""%d\n"",lines);
            /*  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
            
        }
    }
}
@ad6ff1d30bdc42e032099c32195603cc@"
"r04228027","10","0.086","103696","@75c182ed256561a5131fe54a2a3c9f7e@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    
    public static boolean find(String x, String[] anno){
        for (String item : anno) {
            if (x.equals(item))
                return true;
        }
        return false;
    }
    
    public static void printResult(String[][] thematrix){
                for (int i = 0; i < thematrix.length; i++) {
                    for (int j = 0; j < thematrix.length; j++)
                        System.out.printf(thematrix[i][j]+"" "");
                    System.out.printf(""\n"");
                }
            }

    public static void main(String[] args) throws Exception {
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            // 1. read the rest content of the file
            // 2. store the announce strings (2nd line of the file) in variable announce
            announce = br.readLine().split("","");
            // 3. store the matrix (from the 3rd line to the end of the file) in variable matrix
            for (int i = 0; i < num; i++) {
               String[] temp = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = temp[j];                   
                }
            }
            //printResult(matrix);
            // 4. compare the matrix and announce strings (this is the tricky part)
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if(find(matrix[i][j], announce))
                        matrix[i][j] = ""cross"";
                }
            }
            //printResult(matrix);
            //  5. output how many 'straight line' are there in the matrix
            int lines = 0;
            //check row and colunm
            for (int i = 0; i < num; i++) {
                int temp1 = 0;
                int temp2 = 0;
                for (int j = 0; j < num; j++) {
                    if(matrix[i][j].equals(""cross""))
                        temp1+=1;
                    if(matrix[j][i].equals(""cross""))
                        temp2+=1;
                }
                if(temp1 == num && temp2 == num )
                    lines += 2;
                else if(temp1 == num || temp2 == num)
                    lines += 1;
            }
            //check diagonal
            int temp1 = 0;
            int temp2 = 0;
            for (int i = 0; i < num; i++) {
                if(matrix[i][i].equals(""cross"")){
                    temp1 += 1;
                }
                if(matrix[i][num-1-i].equals(""cross"")){
                    temp2 += 1;
                }
            }
            if(temp1 == num && temp2 == num )
                    lines += 2;
            else if(temp1 == num || temp2 == num)
                    lines += 1;
            
            System.out.printf(""%d"",lines);
            /*  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
            
        }
    }
}
@75c182ed256561a5131fe54a2a3c9f7e@"
"r04228027","10","0.101","105456","@c596ace0caab7a141f9c3d10ab0e829c@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    
    public static boolean find(String x, String[] anno){
        for (String item : anno) {
            if (x.equals(item))
                return true;
        }
        return false;
    }
    public static void main(String[] args) throws Exception {
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];            
            announce = br.readLine().split("","");
            
            for (int i = 0; i < num; i++) {
               String[] temp = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = temp[j];                   
                }
            }
            
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if(find(matrix[i][j], announce))
                        matrix[i][j] = ""cross"";
                }
            }
            int lines = 0;
            //check row and colunm
            for (int i = 0; i < num; i++) {
                int temp1 = 0;
                int temp2 = 0;
                for (int j = 0; j < num; j++) {
                    if(matrix[i][j].equals(""cross""))
                        temp1+=1;
                    if(matrix[j][i].equals(""cross""))
                        temp2+=1;
                }
                if(temp1 == num && temp2 == num )
                    lines += 2;
                else if(temp1 == num || temp2 == num)
                    lines += 1;
            }
            //check diagonal
            int temp1 = 0;
            int temp2 = 0;
            for (int i = 0; i < num; i++) {
                if(matrix[i][i].equals(""cross"")){
                    temp1 += 1;
                }
                if(matrix[i][num-1-i].equals(""cross"")){
                    temp2 += 1;
                }
            }
            if(temp1 == num && temp2 == num )
                    lines += 2;
            else if(temp1 == num || temp2 == num)
                    lines += 1;
            
            System.out.printf(""%d"",lines);
        }
    }
}
@c596ace0caab7a141f9c3d10ab0e829c@"
"b03704074","10","0.081","103520","@2fdc0b401d0c6605b61bb35887ee6a71@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           back:
           {
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        
        first = br.readLine().split("","");
        if(first.length!=2)
        {
            //System.out.println(""0"");
            break back;
        }
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
            {
            //System.out.println(""0"");
            break back;
            }
        }
        
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
            if(str1.length!=num[0])
            {
            //System.out.println(""0"");
            break back;
            }
            /*for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    {
                    //System.out.println(""0"");
                    break back;
                    }
                }
            }*/
        
         
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 if(str2.length!=num[1])
                     {
                    //System.out.println(""0"");
                    break back;
                    }
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}
}



@2fdc0b401d0c6605b61bb35887ee6a71@"
"r04921065","0","0","0","@6456a5a77bb593db973d1a016222a3f9@//package Bingo;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws IOException {

        // read file from args[0] in Java 7 style
        FileReader fr = new FileReader(""input.txt"");
        BufferedReader br = new BufferedReader(fr);
            
            // read a line and split by ','
            String[] data= new String[2];
            data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            
            String[] va = new String[2]; //pointer
            
            va = br.readLine().split("","");
           // System.out.println(va[0]+"",""+va[1]);
           
           String[] country ;
            country= new String[num];
            String rd=null;
            int ct=0;
            while ((rd = br.readLine())!=null)
            {
                country = rd.split("","");
                matrix[ct]=country;
                /*for (int i=0;i<num;i++)
                System.out.print(matrix[ct][i]+"","");  //depointer */
                //System.out.println(); //換行
                
                ct++;
            }
        //  System.out.println(matrix[0][1]); 
     
          boolean[][] b = new boolean[num][num];
          for (int i=0;i<num;i++){
              for (int j=0;j<num;j++)
              {
                  if (va[0].equals(matrix[i][j]))
                  {
                      b[i][j] = true;
                  }
                  else b[i][j] = va[1].equals(matrix[i][j]);  //若是為true,不是為false
                  }
              }
         
          //System.out.println(b[2][2]);
          
          int count = 0;
          //horizatal
          for (int i=0;i<num;i++){
          if (b[i][0]==b[i][1]&&b[i][1]==b[i][2]&&b[i][2]==true)
          {
          count++;
          }   
              }
          //vertical
          for(int j=0;j<num;j++){
          if (b[0][j]==b[1][j]&&b[1][j]==b[2][j]&&b[2][j]==true)
          {
              count++;
          }
          }
          //diaonal
          if (b[0][0]==b[1][1]&&b[1][1]==b[2][2]&&b[2][2]==true)
          {
              count++;
          }
          if(!(b[2][0]==b[1][1]&&b[1][1]==b[0][2]&&b[0][2]==true))
          {
          } else {
              count++;
        }
          System.out.println(count); 
          
          
              
            // printf in Java (you should comment out or delete this in your final submission)
            

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
        
    }

}
@6456a5a77bb593db973d1a016222a3f9@"
"r04945022","0","0","0","@a382e9fab4da76e8fafa56d38245052e@package bingo;

import java.io.FileReader;
import java.lang.Integer;
import java.io.BufferedReader;
import java.util.Arrays;
import java.lang.Exception;


/**
 * @author Daniel r04945022
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        
        try(BufferedReader br = new BufferedReader(new FileReader(""src/input.txt""))){
            String[] data = br.readLine().split("" "");
            for(int i=0; data[i]!=null;){
                int j =0;
            }
            String[] firstline = data[0].split("","");
            String[] secline = data[1].split("","");
            String[] thrline = data[2].split("","");
            String[] forthline = data[2].split("","");
            int announced_numbers = Integer.parseInt(firstline[0]);
            int a = Integer.parseInt(firstline[1]);
            String[][] matrix;
            matrix = new String [a][a] ;
                       
            
        }
        // TODO code application logic here
    }
    public static void creat_matrix(){
    
    
}
}
    


@a382e9fab4da76e8fafa56d38245052e@"
"r04945022","0","0","0","@62ba7e6e09bacc0b18be9cd642613922@package bingo;

import java.io.FileReader;
import java.lang.Integer;
import java.io.BufferedReader;
import java.util.Arrays;
import java.lang.Exception;


/**
 * @author Daniel r04945022
 */
public class Bingo {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
//            int lines = br.readLine().split(""/n"").length;
            String[] data = br.readLine().split("","");
            String[] announces =br.readLine().split("","");
            String[] firstline = data[0].split("","");
            int announced_numbers = Integer.parseInt(firstline[0]); 
            int a = Integer.parseInt(firstline[1]);            
            String[][] matrix;
            matrix = new String [a][a] ;    //create 2D array
            String str;
            while ((str=br.readLine())!=null){
            int i = 0;
            matrix [i] = str.split("","");
            i++;
            }
            int z=0;         //turn the called into 0
            while(announces[z]!=null){
            for(int x=0; x<=a; x++){
                for(int y=0; y<=a; y++){
                        if(matrix[x][y]==announces[z]){
                            matrix[x][y]= ""0"";
                        }
                      
                    }
                }
            z++;
            }
            int numoflines=0;
            int row = 0, column = 0;
            while(matrix[row][0]!=null){
            for(int k=0; k<=a;k++){
                while(matrix[row][k]!=""0""){
                    return;
                }   numoflines++;
            }
            row++;
            }
            while(matrix[0][column]!=null){
            for(int j=0; j<=a;j++){
                while(matrix[row][j]!=""0""){
                    return;
                }   numoflines++;
            }
            column++;
            }
            if((matrix[0][0]==matrix[1][1])){
                if(matrix[1][1]==matrix[2][2]){
                    if(matrix[2][2]==""0""){
                        numoflines++;
                    }
                }
            }
            
            
            System.out.println(""there are""+numoflines+""of straight lines"");
//            for(int l=0; l<=a; l++){
//                if(matrix[l][column]==Integer.parseInt(0)){
//                    
//                }
//            }
            
            
        }
        // TODO code application logic here
       
    }
   
}
    


@62ba7e6e09bacc0b18be9cd642613922@"
"r04921065","5","0.76","103552","@11244050328766645da2080f656ee865@//package Bingo;

import java.io.FileReader;
import java.io.BufferedReader;
import java.io.IOException;
import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws IOException {
        int count = 0;
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //FileReader fr = new FileReader(""input.txt"");
        //BufferedReader br = new BufferedReader(fr);
            
            // read a line and split by ','
            String[] data= new String[2];
            data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            
            String[] va = new String[2]; //pointer
            
            va = br.readLine().split("","");
           // System.out.println(va[0]+"",""+va[1]);
           
           String[] country ;
            country= new String[num];
            String rd=null;
            int ct=0;
            while ((rd = br.readLine())!=null)
            {
                country = rd.split("","");
                matrix[ct]=country;
                /*for (int i=0;i<num;i++)
                System.out.print(matrix[ct][i]+"","");  //depointer */
                //System.out.println(); //換行
                
                ct++;
            }
        //  System.out.println(matrix[0][1]); 
     
          boolean[][] b = new boolean[num][num];
          for (int i=0;i<num;i++){
              for (int j=0;j<num;j++)
              {
                  if (va[0].equals(matrix[i][j]))
                  {
                      b[i][j] = true;
                  }
                  else b[i][j] = va[1].equals(matrix[i][j]);  //若是為true,不是為false
                  }
              }
         
          //System.out.println(b[2][2]);
          
          
          //horizatal
          for (int i=0;i<num;i++){
          if (b[i][0]==b[i][1]&&b[i][1]==b[i][2]&&b[i][2]==true)
          {
          count++;
          }   
              }
          //vertical
          for(int j=0;j<num;j++){
          if (b[0][j]==b[1][j]&&b[1][j]==b[2][j]&&b[2][j]==true)
          {
              count++;
          }
          }
          //diaonal
          if (b[0][0]==b[1][1]&&b[1][1]==b[2][2]&&b[2][2]==true)
          {
              count++;
          }
          if(!(b[2][0]==b[1][1]&&b[1][1]==b[0][2]&&b[0][2]==true))
          {
          } else {
              count++;
        }
           
          
          
        }
            // printf in Java (you should comment out or delete this in your final submission)
            

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            System.out.println(count);
        
    }

}
@11244050328766645da2080f656ee865@"
"b01703032","6","0.82","103568","@7f2ec83192116dd1605b9d17996ebf60@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num]; 
            int count=0;
            int line=0;

            String[] data1 = br.readLine().split("","");
            {
                System.arraycopy(data1, 0, announce, 0, stringCount);
            }
           
           String temp=null;
           while((temp=br.readLine())!=null)
           {
            String[] array;
                array = temp.split("","");
                System.arraycopy(array, 0, matrix[count], 0, num);
             count++;
              }
            
           
           for(int i=0;i<stringCount;i++)
           {
             for(int j=0;j<num;j++)
             {
             for(int k=0;k<num;k++)
             {
             if (matrix[j][k].equals(announce[i]))
             {
             matrix[j][k]=""0"";
             }
             }
             }
                            }
         for(int j=0;j<num;j++)
           {
               int count1=0;
               for(int k=0;k<num;k++)
               {
                   if(""0"".equals(matrix[j][k]))  
                     count1++; 
                   else
                     break;          
               }   
               if(count1==num)
                line++;     
            } 
                      
          for(int j=0;j<num;j++)
           {
               int count1=0;
               for(int k=0;k<num;k++)
               {
                   if(""0"".equals(matrix[k][j]))
                   {  count1++;}
                   else
                   { break;}
               }
               if(count1==num)
               line++;
            }           

          int count1=0;
           for(int j=0;j<num;j++)
           {
               if(""0"".equals(matrix[j][j]))
                 count1++;
          
               break;
            }
               if(count1==num)
                   line++;
               
           int count2=0;
           for(int j=0;j<num;j++)
           {
               if(""0"".equals(matrix[j][num-j-1]))
                 count2++;          
               break;
            }
               if(count2==num)
                   line++;
                                  
            
           System.out.println(line);
           
            /* printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num); */
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
        
    }

@7f2ec83192116dd1605b9d17996ebf60@"
"b01703032","10","0.082","103408","@9f1e31643d8546b3d39e95864f7efd6a@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num]; 
            int count=0;
            int line=0;

            String[] data1 = br.readLine().split("","");
            {
                System.arraycopy(data1, 0, announce, 0, stringCount);
            }
           
           String temp=null;
           while((temp=br.readLine())!=null)
           {
            String[] array;
                array = temp.split("","");
                System.arraycopy(array, 0, matrix[count], 0, num);
             count++;
              }
            
           
           for(int i=0;i<stringCount;i++)
           {
             for(int j=0;j<num;j++)
             {
             for(int k=0;k<num;k++)
             {
             if (matrix[j][k].equals(announce[i]))
             {
             matrix[j][k]=""0"";
             }
             }
             }
                            }
         for(int j=0;j<num;j++)
           {
               int count1=0;
               for(int k=0;k<num;k++)
               {
                   if(""0"".equals(matrix[j][k]))  
                     count1++;        
               }   
               if(count1==num)
                line++;     
            } 
                      
          for(int j=0;j<num;j++)
           {
               int count1=0;
               for(int k=0;k<num;k++)
               {
                   if(""0"".equals(matrix[k][j]))
                   {  count1++;}
               }
               if(count1==num)
               line++;
            }           

           int count1=0;
           for(int j=0;j<num;j++)
           {
               if(""0"".equals(matrix[j][j]))
                 count1++;
            }
               if(count1==num)
               {   line++;}
               
           int count2=0;
           for(int j=0;j<num;j++)
           {
               if(""0"".equals(matrix[j][num-j-1]))
                 count2++;          
            }
               if(count2==num)
               {  line++;}  
                                  
            
           System.out.println(line);
           
        }
    }
        
    }

@9f1e31643d8546b3d39e95864f7efd6a@"
"b99611017","1","0.11","102496","@b85eca522b4d00178a92a10a93c208c5@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */


import java.io.*;
import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
import java.util.Arrays;*/
//import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    public static void main(String[] args) {
        
        
        try {
            
            Scanner sn=new Scanner(args[0]);
            String fpath=sn.next();
            File f=new File(fpath);
            FileReader fin=new FileReader(f);
            int fsize=(int)f.length();
            char buffer[]=new char[fsize];
            fin.read(buffer);
            String str=new String(buffer);
          
            String[] token = str.split(""\n"");
            //String[] token = str.split(""\n""); //分割字串
            int tokenLen=token.length;
            //String matr="""";
            
            for(int i=0;i<tokenLen;i++)
            {
                token[i]=token[i]+"","";
                
            }
            StringBuilder buf=new StringBuilder();
            for(int i=0;i<tokenLen;i++)
            {
                buf.append(token[i]);
            }
            String matr=buf.toString();
            String[] ans=matr.split("","");
            
            int annoucedNum=Integer.parseInt(ans[0]);
            int size=Integer.parseInt(ans[1]);
          //  String[] announced=new String[annoucedNum]; //儲存公布國名用
            String[][] countr=new String[size][size];   //賓果板
            int k=annoucedNum+annoucedNum;                                    //以下配置賓果板
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    countr[i][j]=ans[k];
                    k++;
                }
            }
            int[][] score=new int[size][size];      //紀錄賓果配對情況
            for(int i=0;i<size;i++)                 //記分板歸零
            {
                for(int j=0;j<size;j++)
                {
                    score[i][j]=0;
                }
            }
            for(int i=annoucedNum;i<annoucedNum+annoucedNum;i++)          //開始劃記計分板
            {
                for(int j=0;j<size;j++)
                {
                    for(int l=0;l<size;l++)
                    {
                        if(countr[j][l].equals(ans[i]))
                        {
                            score[j][l]++;
                        }
                    }
                }
            }
            int lineNum=0;
            int counter=0;//儲存連線數量
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    counter=counter+score[i][j];
                }
                if(counter==size)
                {
                    lineNum++;
                    counter=0;
                }
                else
                {
                    counter=0;
                }
            }
            for(int i=0;i<size;i++)
            {
                for(int j=0;j<size;j++)
                {
                    counter=counter+score[j][i];
                }
                if(counter==size)
                {
                    lineNum++;
                    counter=0;
                }
                else
                {
                    counter=0;
                }
            }
            int counter1=0;
            for(int i=0;i<size;i++)
            {
                counter1=counter1+score[i][i];
            }
            if(counter1==size)
            {
                lineNum++;
             //   counter1=0;
            }
            else
            {
              //  counter1=0;
            }
            int counter2=0;
            for(int i=0;i<size;i++)
            {
                counter2=counter2+score[size-1-i][i];
            }
            if(counter2==size)
            {
                lineNum++;
               // counter2=0;
            }
            else
            {
                counter2=0;
            }
            /*
            
            System.out.println(""此文字檔為:"" + str);
            System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
            System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            fin.close();
        }
        catch(RuntimeException e)
        {
            throw e;
        }
        catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }
        
        
    }

}


@b85eca522b4d00178a92a10a93c208c5@"
"r04945022","0","0","0","@9757df2c9424bc88417c1bbaf7e33c95@import java.io.FileReader;
import java.lang.Integer;
import java.io.BufferedReader;
import java.util.Arrays;
import java.lang.Exception;


/**
 * @author Daniel r04945022
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        
          try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
//            int lines = br.readLine().split(""/n"").length;
            String[] data = br.readLine().split(""/n"");
            String[] announces =br.readLine().split("","");
            String[] firstline = data[0].split("","");
            int announced_numbers = Integer.parseInt(firstline[0]); 
            int size;            
              size = Integer.parseInt(firstline[1]);
            String[][] matrix;
            matrix = new String [size][size] ;    //create 2D array
            String str;
            while ((str=br.readLine())!=null){
            int i = 0;
            matrix [i] = str.split("","");
            i++;
            }
                   //turn the called into 0
            for(int z=0; z<announces.length;){
            for(int x=0; x<size; x++){
                for(int y=0; y<size; y++){
                        if(matrix[x][y]==announces[z]){
                            matrix[x][y]= ""0"";
                        }
                      
                    }
                }
            z++;
            }
            int numoflines=0;
            int row = 0, column = 0;
            while(matrix[row][0]!=null){
            for(int k=0; k<size;k++){
                while(matrix[row][k]!=""0""){
                    return;
                }   numoflines++;
            }
            row++;
            }
            while(matrix[0][column]!=null){
            for(int j=0; j<size;j++){
                while(matrix[row][j]!=""0""){
                    return;
                }   numoflines++;
            }
            column++;
            }
            if((matrix[0][0]==matrix[1][1])){
                if(matrix[1][1]==matrix[2][2]){
                    if(matrix[2][2]==""0""){
                        numoflines++;
                    }
                }
            }
            
            
           System.out.printf(""there are %d of straight lines"", numoflines);
        }
        // TODO code application logic here
    }
    
}
    


@9757df2c9424bc88417c1bbaf7e33c95@"
"r03525006","0","0.9","105056","@bfcc005f3c9951e66f8b9b49cccca589@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bingoMatrix = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            String readLine;
            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
            while ((readLine = br.readLine()) != null)
            {
                if (announceLine++ < matrixLineStart) {
                    for (int i = 0; i < stringCount; i++) {
                        String[] bingoTarget = readLine.split("","");
                        announce[i] = bingoTarget[i];
                    }
                }
                else if (announceLine++ >= matrixLineStart) {
                    for (int j  = 0; j < num; j ++) {
                        String[] matrixTarget = readLine.split("","");
                        matrix[matrixCount][j] = matrixTarget[j];
                    }
                    matrixCount++;
                }
            }

            for (int k = 0; k < announce.length; k++){
                for (int i = 0; i < num ; i++) {
                    for (int j = 0 ; j < num ; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0 , diag1 = 0, diag2 = 0, rowCount = 0, colCount = 0;
            for (int i = 0; i < num; i++) {
                diag1 = diag1 + bingoMatrix[i][i];
                diag2 = diag2 + bingoMatrix[num-i-1][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num) {
                    straightLines++;
                }
                if (colCount == num) {
                    straightLines++;
                }
                if (diag1 == num) {
                    straightLines++;
                }
                if (diag2 == num) {
                    straightLines++;
                }
            }
            br.close();
            System.out.println(straightLines);
        }
    }
}

@bfcc005f3c9951e66f8b9b49cccca589@"
"r03525006","0","0.91","103552","@b698c14150f8ad8c5733d2e76d628e19@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bingoMatrix = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            String readLine;
            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
            while ((readLine = br.readLine()) != null)
            {
                if (announceLine++ < matrixLineStart) {
                    for (int i = 0; i < stringCount; i++) {
                        String[] bingoTarget = readLine.split("","");
                        announce[i] = bingoTarget[i];
                    }
                }
                else if (announceLine++ >= matrixLineStart) {
                    for (int j  = 0; j < num; j ++) {
                        String[] matrixTarget = readLine.split("","");
                        matrix[matrixCount][j] = matrixTarget[j];
                    }
                    matrixCount++;
                }
            }

            for (int k = 0; k < announce.length; k++){
                for (int i = 0; i < num ; i++) {
                    for (int j = 0 ; j < num ; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0 , diag1 = 0, diag2 = 0, rowCount = 0, colCount = 0;
            for (int i = 0; i < num; i++) {
                diag1 = diag1 + bingoMatrix[i][i];
                diag2 = diag2 + bingoMatrix[num-i-1][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num) {
                    straightLines++;
                }
                if (colCount == num) {
                    straightLines++;
                }
            }
            if (diag1 == num) {
                straightLines++;
            }
            if (diag2 == num) {
                straightLines++;
            }
            br.close();
            System.out.println(straightLines);
        }
    }
}

@b698c14150f8ad8c5733d2e76d628e19@"
"r03525006","0","0.86","104784","@2584f86d78bcbff3332bd710e3a446aa@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bingoMatrix = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            String readLine;
            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
            while ((readLine = br.readLine()) != null)
            {
                if (announceLine++ < matrixLineStart) {
                    for (int i = 0; i < stringCount; i++) {
                        String[] bingoTarget = readLine.split("","");
                        announce[i] = bingoTarget[i];
                    }
                }
                else if (announceLine++ >= matrixLineStart) {
                    for (int j  = 0; j < num; j ++) {
                        String[] matrixTarget = readLine.split("","");
                        matrix[matrixCount][j] = matrixTarget[j];
                    }
                    matrixCount++;
                }
            }

            for (int k = 0; k < announce.length; k++){
                for (int i = 0; i < num ; i++) {
                    for (int j = 0 ; j < num ; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0 , diag1 = 0, diag2 = 0 ;
            for (int i = 0; i < num; i++) {
                int rowCount = 0, colCount = 0;
                diag1 = diag1 + bingoMatrix[i][i];
                diag2 = diag2 + bingoMatrix[i][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num) {
                    straightLines++;
                }
                if (colCount == num) {
                    straightLines++;
                }
            }

            if (diag1 == num) {
                straightLines++;
            }
            if (diag2 == num) {
                straightLines++;
            }
            br.close();
            System.out.println(straightLines);
        }

    }
}

@2584f86d78bcbff3332bd710e3a446aa@"
"r03525006","0","0.9","103728","@a247f9d3d97facbb08df67cae3401778@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            String readLine;
            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
            while ((readLine = br.readLine()) != null)
            {
                if (announceLine++ < matrixLineStart) {
                    for (int i = 0; i < stringCount; i++) {
                        String[] bingoTarget = readLine.split("","");
                        announce[i] = bingoTarget[i];
                    }
                }
                else if (announceLine++ >= matrixLineStart) {
                    for (int j  = 0; j < num; j ++) {
                        String[] matrixTarget = readLine.split("","");
                        matrix[matrixCount][j] = matrixTarget[j];
                    }
                    matrixCount++;
                }
            }
            int[][] bingoMatrix = new int[num][num];
            for (int k = 0; k < stringCount; k++){
                for (int i = 0; i < num ; i++) {
                    for (int j = 0 ; j < num ; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0 , diag1 = 0, diag2 = 0 ;
            for (int i = 0; i < num; i++) {
                int rowCount = 0, colCount = 0;
                diag1 = diag1 + bingoMatrix[i][i];
                diag2 = diag2 + bingoMatrix[i][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num) {
                    straightLines++;
                }
                if (colCount == num) {
                    straightLines++;
                }
            }

            if (diag1 == num) {
                straightLines++;
            }
            if (diag2 == num) {
                straightLines++;
            }
            System.out.println(straightLines);
        }
    }
}

@a247f9d3d97facbb08df67cae3401778@"
"r04945008","8","0.84","103632","@7946e271f41dd7103cede3a45522c825@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            int[][] matrix = new int[num][num];
            
            String[] data1 = br.readLine().split("","");
            for(int i=0; i<stringCount; i++) announce[i] = data1[i];
            for (int i=0; i<num; i++){
                String[] data2 = br.readLine().split("","");
                for(int j=0; j<num; j++){
                    for (int a=0; a<stringCount; a++){
                        if(data2[j].compareTo(announce[a]) == 0) matrix[i][j] = 1;
                    }
                }
            }
            
            int line=0;
            int count=0;
            //row major
            for (int i=0; i<num; i++){
                count=0;
                for (int j=0; j<num; j++){
                    //System.out.printf(""%d"",count);
                    if(matrix[i][j] == 0) break;
                    else count += 1;
                }
                line += count/stringCount;
            }
            //column major
            for (int j=0; j<num; j++){
                count=0;
                for (int i=0; i<num; i++){
                    if(matrix[i][j] == 0) break;
                    else count += 1;
                }
                line += count/stringCount;
            }
            //diagnoal
            count=0;
            for (int i=0; i<num; i++){ 
                int j=i;    
                count += matrix[i][j];
            }
            line += count/stringCount;
            //sub diagnoal
            count=0;
            int j=0;
            for (int i=num-1;i>=0;i--){
                count += matrix[i][j];   //sub diagnoal
                j++;
            }
             
            line += count/stringCount;
            System.out.printf(""%d\n"",line);
        }
    }
}

@7946e271f41dd7103cede3a45522c825@"
"r04945008","8","0.81","103728","@3f58b9d586c7db9963aa477099f2d55f@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            int[][] matrix = new int[num][num];
            for(int i=0; i<num; i++)
                for(int j=0; j<num; j++)
                    matrix[i][j]=0;
            
            String[] data1 = br.readLine().split("","");
            for(int i=0; i<stringCount; i++) announce[i] = data1[i];
            for (int i=0; i<num; i++){
                String[] data2 = br.readLine().split("","");
                for(int j=0; j<num; j++){
                    for (int a=0; a<stringCount; a++){
                        if(data2[j].compareTo(announce[a]) == 0) matrix[i][j] = 1;
                    }
                }
            }
            
            int line=0;
            int count=0;
            //row major
            for (int i=0; i<num; i++){
                count=0;
                for (int j=0; j<num; j++){
                    //System.out.printf(""%d"",count);
                    if(matrix[i][j] == 0) break;
                    else count += 1;
                }
                line += count/stringCount;
            }
            //column major
            for (int j=0; j<num; j++){
                count=0;
                for (int i=0; i<num; i++){
                    if(matrix[i][j] == 0) break;
                    else count += 1;
                }
                line += count/stringCount;
            }
            //diagnoal
            count=0;
            for (int i=0; i<num; i++){ 
                int j=i;    
                count += matrix[i][j];
            }
            line += count/stringCount;
            //sub diagnoal
            count=0;
            int j=0;
            for (int i=num-1;i>=0;i--){
                count += matrix[i][j];   //sub diagnoal
                j++;
            }
            line += count/stringCount;
            System.out.printf(""%d\n"",line);
        }
    }
}

@3f58b9d586c7db9963aa477099f2d55f@"
"r04945008","10","0.098","105504","@aff1fba9dc0aa9396dc51e52adb1f16f@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {
    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            int[][] matrix = new int[num][num];
           
            String[] data1 = br.readLine().split("","");
            for(int i=0; i<stringCount; i++) announce[i] = data1[i];
            for (int i=0; i<num; i++){
                String[] data2 = br.readLine().split("","");
                for(int j=0; j<num; j++){
                    for (int a=0; a<stringCount; a++){
                        if(data2[j].compareTo(announce[a]) == 0) matrix[i][j] = 1;
                    }
                }
            }
            
            int line=0;
            int count=0;
            //row major
            for (int i=0; i<num; i++){
                count=0;
                for (int j=0; j<num; j++){
                    //System.out.printf(""%d"",count);
                    if(matrix[i][j] == 0) break;
                    else count += 1;
                }
                line += count/num;
            }
            //column major
            for (int j=0; j<num; j++){
                count=0;
                for (int i=0; i<num; i++){
                    if(matrix[i][j] == 0) break;
                    else count += 1;
                }
                line += count/num;
            }
            //diagnoal
            count=0;
            for (int i=0; i<num; i++){ 
                int j=i;    
                count += matrix[i][j];
            }
            line += count/num;
            //sub diagnoal
            count=0;
            int j=0;
            for (int i=num-1;i>=0;i--){
                count += matrix[i][j];   //sub diagnoal
                j++;
            }
            line += count/num;
            System.out.printf(""%d\n"",line);
        }
    }
}

@aff1fba9dc0aa9396dc51e52adb1f16f@"
"r04921105","10","0.083","104800","@3bfbdd094c21669155f50a63eb6b5b43@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            String[][] check = new String[num][num];
            int [][] intmatrix= new int[num][num];
            
            // printf in Java (you should comment out or delete this in your final submission)
           // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            // read the rest content of the file
            String[] country = br.readLine().split("","");
            /*
            String[] row1 = br.readLine().split("","");
            String[] row2 = br.readLine().split("","");
            String[] row3 = br.readLine().split("","");
           */
            //store the announce strings (2nd line of the file) in variable announce
           for(int i=0; i < stringCount; i++)
           {announce [i]= country[i];
        //   System.out.print(announce[i]);
        //  System.out.print(""\n"");
            }
          //store the matrix (from the 3rd line to the end of the file) in variable matrix

          for(int i=0;i<num;i++)
          { matrix[i] = br.readLine().split("",""); 
              }
            // print stored matrix
            for (String[] matrix1 : matrix) {
                for (int j = 0; j<matrix[0].length; j++) {
                //    System.out.print(matrix1[j]);
                }
              //  System.out.print(""\n"");
            }
          //compare the matrix and announce strings (this is the tricky part)
          //1)creat a same size matrix
          for (int i = 0 ;i<matrix.length;i++){
              for(int j=0;j<matrix[0].length;j++){
              intmatrix[i][j]=0;    
            }
          }
         //2)check matrix[][].equal(accounce[])
         for(int x = 0;x<stringCount;x++){
                for (int i=0;i<matrix.length;i++) {
                    for (int j = 0; j<matrix[0].length; j++) {
                        if(announce[x].equals(matrix[i][j])){
                            intmatrix[i][j]=1;
                        }
                    }
                    
                }
         }
         //print intmatrix
         /* for (int[] matrix3 : intmatrix) {
                for (int j = 0; j<intmatrix[0].length; j++) {
                    System.out.print(matrix3[j]);
                }
                System.out.print(""\n"");
            }
        */
         //3)print new check
/*         for (String[] matrix2 : check) {
                for (int j = 0; j<check[0].length; j++) {
             //       System.out.print(matrix2[j]);
                }
          //      System.out.print(""\n"");
            }
         //4)check straight
         int straight =0;
         //rightdown
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(i==j&&check[i][j]==""bingo""){
                     counter++;
            //         System.out.print(counter);
            //         System.out.print(""\n"");
                     
                     }
                      
                 }
                 if(counter==check[0].length){
                         straight++;
             
             }
             
 /*        }
//System.out.print(""\n"");
        //row
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
             
                 if(check[i][j]==""bingo""){
                     counter++;
                    // System.out.print(counter);
                    // System.out.print(""\n"");
                     
                     }
                  if(counter==check[0].length){
                         straight++;    
                    }
             
             
             }
         }
        
 //System.out.print(""\n"");        
         //col
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(check[j][i]==""bingo""){
                     counter++;
                  //   System.out.print(counter);
                  //   System.out.print(""\n"");
                     
                     }
                  if(counter==check[0].length){
                         straight++;    
                 }
             
             }
             
         }
  //  System.out.print(""\n"");     
         //leftdown
         
         for (int i=0;i<check[0].length;i++){
             int counter=0;
             for(int j=0;j<check[0].length;j++){
                 if(i+j==num&&check[i][j]==""bingo""){
                     counter++;
                  //   System.out.print(counter);
                   //  System.out.print(""\n"");
                     
                     }
                      
                 }
                 if(counter==check[0].length){
                         straight++;
             
             }
             
         }
         
     //    System.out.print(""\n"");
         
         //print out answer
          System.out.print(straight);
            /*  now you can write yur own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
              int line = 0;
             //row
             for(int i = 0;i<num;i++){
                 int counter = intmatrix[i][0];
                 for(int j = 1;j<num;j++){
                     counter = counter + intmatrix[i][j];
                  //      System.out.print(counter);
                  //   System.out.print(""\n"");
                     
                 }
                         if(counter == num)
                             line++;
             }
            // System.out.print(""\n"");
             //col
             for(int i = 0;i<num;i++){
                 int counter = intmatrix[0][i];
                 for(int j = 1;j<num;j++){
                     counter = counter + intmatrix[j][i];
                 //       System.out.print(counter);
                  //   System.out.print(""\n"");
                     
                 }
                         if(counter == num)
                             line++;
             }
             // /
      
                 int count = intmatrix[num-1][0];
                 for(int i = 1;i<num;i++){
                     count = count + intmatrix[num-1-i][i];
                  //      System.out.print(count);
                  //   System.out.print(""\n"");
                     
                 }
                         if(count == num)
                             line++;
             
             // \
                int count2 = intmatrix[0][0];
                 for(int i = 1;i<num;i++){
                     count2 = count2 + intmatrix[i][i];
                 //       System.out.print(count2);
                 //    System.out.print(""\n"");
                     
                 }
                         if(count2 == num)
                             line++;
                         
 
            System.out.print(line);
 
        }
    }
}

@3bfbdd094c21669155f50a63eb6b5b43@"
"b03611015","0","0","0","@22aa13fe78205fe163faaf6a1d78ff82@import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

/**
 *
 * @author Steven
 */
public class Bingo {

    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    public static void main(String[] args) throws IOException {
     // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
          
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            announce = br.readLine().split("","");
            
            for(int i=0;i<num;i++){
            matrix[i] = br.readLine().split("","");
            }
            
            for(int j=0;j<stringCount;j++){
                for(int x=0;x<num;x++){
                    for(int y=0;y<num;y++){
                        if(matrix[x][y].equals(announce[j])){
                            matrix[x][y] = ""0"";
                        }
                   }    
                }
            }
            int count=0;
            for(int i=0;i<num;i++){
                if(""0"".equals(matrix[i][0]))
                    count++;
            }
            for(int i=0;i<num;i++){
                if(""0"".equals(matrix[0][i]))
                    count++;
            }
            for(int i=0;i<num;i++){
                if(""0"".equals(matrix[i][i]))
                    count++;
            }
            for(int i=0;i<num;i++)
            {
                if(""0"".equals(matrix[num-i][i]))
                    count++;
            }
            
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.println(count);
            
        
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@22aa13fe78205fe163faaf6a1d78ff82@"
"r04631009","10","0.085","103456","@fb5167ae1814c4f8d695193241338b68@import java.io.FileReader;


import java.io.BufferedReader;
/**
 *
 * @author USER
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String[] data = br.readLine().split("","");// read a line and split by ','
            int stringCount = Integer.parseInt(data[0]);// store the first integer in variable stringCount (number of announced strings)

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data2 = br.readLine().split("","");
            for (int i = 0; i < stringCount; i++) {
                announce[i] = data2[i];
//                System.out.print(announce[i]+""\t"");
            }
//                System.out.println("""");
            for (int i = 0; i < num; i++) {
                String[] data_temp = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = data_temp[j];
//                    System.out.print(matrix[i][j]+""\t"");
                }
//                System.out.println("""");
            }
            int[][] checking = new int[num][num];
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    checking[i][j] = 0;
                }
            }
            for (int p = 0; p < stringCount; p++) {
                for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        if (matrix[i][j].equals(announce[p])) {
                            checking[i][j] = 1;
                        }
                    }
                }
            }
             //for (int i=0 ; i<num ; i++){
            //    for (int j=0 ; j<num ; j++)
            //        System.out.print(checking[i][j]+""\t"");
            //    System.out.println("""");
            //}
            //---------------------------Find Bingo line---------------------//
            int counter = 0, counter_diagonal1 = 0, counter_diagonal2 = 0;
            for (int i = 0; i < num; i++) {
                if (checking[i][i] == 1) {
                    counter_diagonal1++;
                }
            }
            for (int i = 0; i < num; i++) {
                if (checking[i][(num - 1) - i] == 1) {
                    counter_diagonal2++;
                }
            }
            if (counter_diagonal1 == num) {
                counter++;
            }
            if (counter_diagonal2 == num) {
                counter++;
            }

            for (int i = 0; i < num; i++) {
                int temp = 0, temp2 = 0;
                for (int j = 0; j < num; j++) {
                    temp += checking[i][j];
                    temp2 += checking[j][i];
                }
                if (temp == num) {
                    counter++;
                }
                if (temp2 == num) {
                    counter++;
                }
            }
            System.out.println(counter);
        }
    }
}
@fb5167ae1814c4f8d695193241338b68@"
"r04631033","0","0","0","@cba8d1585c7033406c5ef71c58f9afa8@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
//import java.util.ArrayList;
import java.util.Vector;
public class Class1 {
public static void main(String[] args) throws Exception {

            // read file from args[0] in Java 7 style
try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
    String[] data = br.readLine().split("","");
    String[] data2 = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
    int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
    int num = Integer.parseInt(data[1]);
    String[] announce = new String[stringCount];
    String[][] matrix = new String[num][num];         
 for(int i=0;i<stringCount;i++){
         announce[i] = data2[i];
                 }     
Vector<String []> str_vec = new Vector<String []>();
    int j = 0;
    int i = 0;
    String line;
    while ((line = br.readLine()) != null) { //每次讀一行 
           str_vec.add(line.split("",""));
             }            
for(i = 0; i < num; i++) {
matrix[i] = str_vec.elementAt(i);
}
for( i=0;i<num;i++){
    for(j=0;j<num;j++){
        int k;
        for(k=0;k<stringCount;k++){
            String d = announce[k];
            if (matrix[i][j].equals(d))break;
        }//System.out.print(matrix[i][j]);
        if(k==stringCount)matrix[i][j]=""0"";
        else matrix[i][j]=""1"";
    }
}
System.out.print(Arrays.deepToString(matrix));
String x =  Integer.toString(1);
String y =  Integer.toString(0);
int ab = 0; 
 for(i=0;i<num;i++){
     int count = 0;
     int count1 = 0;
     for(j=0;j<num;j++){
         if (matrix[i][j].equals(x)){
             count++;         
         }
         if (matrix[j][i].equals(x)){
             count1++;
         }
    }
     if(count == num){
         ab += 1;
         }
     if(count1 == num){
         ab += 1;
     }
 }     
for(i=0;i<num;i++){
    int count2 = 0;
    if (matrix[i][i].equals(x)){
       count2++;         
          }
    if(count2 == num){
         ab += 1;
         } 
}
for(i=0;i<num;i++){
    int count3 = 0;
    if (matrix[i][num-1-i].equals(x)){
       count3++;         
          }
    if(count3 == num){
         ab += 1;
          } 
}
System.out.print(ab);
}
}
}
@cba8d1585c7033406c5ef71c58f9afa8@"
"r04631033","0","0","0","@c3b5e4001e244d64b216cf51ac67b1b4@public static void main(String[] args) throws Exception {

            // read file from args[0] in Java 7 style
try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
    String[] data = br.readLine().split("","");
    String[] data2 = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
    int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
    int num = Integer.parseInt(data[1]);
    String[] announce = new String[stringCount];
    String[][] matrix = new String[num][num];         
 for(int i=0;i<stringCount;i++){
         announce[i] = data2[i];
                 }     
Vector<String []> str_vec = new Vector<String []>();
    int j = 0;
    int i = 0;
    String line;
    while ((line = br.readLine()) != null) { //每次讀一行 
           str_vec.add(line.split("",""));
             }            
for(i = 0; i < num; i++) {
matrix[i] = str_vec.elementAt(i);
}
for( i=0;i<num;i++){
    for(j=0;j<num;j++){
        int k;
        for(k=0;k<stringCount;k++){
            String d = announce[k];
            if (matrix[i][j].equals(d))break;
        }//System.out.print(matrix[i][j]);
        if(k==stringCount)matrix[i][j]=""0"";
        else matrix[i][j]=""1"";
    }
}
System.out.print(Arrays.deepToString(matrix));
String x =  Integer.toString(1);
String y =  Integer.toString(0);
int ab = 0; 
 for(i=0;i<num;i++){
     int count = 0;
     int count1 = 0;
     for(j=0;j<num;j++){
         if (matrix[i][j].equals(x)){
             count++;         
         }
         if (matrix[j][i].equals(x)){
             count1++;
         }
    }
     if(count == num){
         ab += 1;
         }
     if(count1 == num){
         ab += 1;
     }
 }     
for(i=0;i<num;i++){
    int count2 = 0;
    if (matrix[i][i].equals(x)){
       count2++;         
          }
    if(count2 == num){
         ab += 1;
         } 
}
for(i=0;i<num;i++){
    int count3 = 0;
    if (matrix[i][num-1-i].equals(x)){
       count3++;         
          }
    if(count3 == num){
         ab += 1;
          } 
}
System.out.print(ab);
}
}
}
@c3b5e4001e244d64b216cf51ac67b1b4@"
"r04631033","0","0","0","@91275fbef50d988a6017c5db4d4a9e68@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
//import java.util.ArrayList;
import java.util.Vector;
public class Bingo {
public static void main(String[] args) throws Exception {

            // read file from args[0] in Java 7 style
try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
            // read a line and split by ','
    String[] data = br.readLine().split("","");
    String[] data2 = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
    int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
    int num = Integer.parseInt(data[1]);
    String[] announce = new String[stringCount];
    String[][] matrix = new String[num][num];         
 for(int i=0;i<stringCount;i++){
         announce[i] = data2[i];
                 }     
Vector<String []> str_vec = new Vector<String []>();
    int j = 0;
    int i = 0;
    String line;
    while ((line = br.readLine()) != null) { //每次讀一行 
           str_vec.add(line.split("",""));
             }            
for(i = 0; i < num; i++) {
matrix[i] = str_vec.elementAt(i);
}
for( i=0;i<num;i++){
    for(j=0;j<num;j++){
        int k;
        for(k=0;k<stringCount;k++){
            String d = announce[k];
            if (matrix[i][j].equals(d))break;
        }//System.out.print(matrix[i][j]);
        if(k==stringCount)matrix[i][j]=""0"";
        else matrix[i][j]=""1"";
    }
}
//System.out.print(Arrays.deepToString(matrix));
String x =  Integer.toString(1);
String y =  Integer.toString(0);
int ab = 0; 
 for(i=0;i<num;i++){
     int count = 0;
     int count1 = 0;
     for(j=0;j<num;j++){
         if (matrix[i][j].equals(x)){
             count++;         
         }
         if (matrix[j][i].equals(x)){
             count1++;
         }
    }
     if(count == num){
         ab += 1;
         }
     if(count1 == num){
         ab += 1;
     }
 }     
for(i=0;i<num;i++){
    int count2 = 0;
    if (matrix[i][i].equals(x)){
       count2++;         
          }
    if(count2 == num){
         ab += 1;
         } 
}
for(i=0;i<num;i++){
    int count3 = 0;
    if (matrix[i][num-1-i].equals(x)){
       count3++;         
          }
    if(count3 == num){
         ab += 1;
          } 
}
System.out.print(ab);
}
}
}
@91275fbef50d988a6017c5db4d4a9e68@"
"r04631033","6","0.98","105216","@398fe512fc38db7895336e7a51b2e39d@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
//import java.util.ArrayList;
import java.util.Vector;
public class Bingo {
public static void main(String[] args) throws Exception {

            // read file from args[0] in Java 7 style
try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
    String[] data = br.readLine().split("","");
    String[] data2 = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
    int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
    int num = Integer.parseInt(data[1]);
    String[] announce = new String[stringCount];
    String[][] matrix = new String[num][num];         
 for(int i=0;i<stringCount;i++){
         announce[i] = data2[i];
                 }     
Vector<String []> str_vec = new Vector<String []>();
    int j = 0;
    int i = 0;
    String line;
    while ((line = br.readLine()) != null) { //每次讀一行 
           str_vec.add(line.split("",""));
             }            
for(i = 0; i < num; i++) {
matrix[i] = str_vec.elementAt(i);
}
for( i=0;i<num;i++){
    for(j=0;j<num;j++){
        int k;
        for(k=0;k<stringCount;k++){
            String d = announce[k];
            if (matrix[i][j].equals(d))break;
        }//System.out.print(matrix[i][j]);
        if(k==stringCount)matrix[i][j]=""0"";
        else matrix[i][j]=""1"";
    }
}
//System.out.print(Arrays.deepToString(matrix));
String x =  Integer.toString(1);
String y =  Integer.toString(0);
int ab = 0; 
 for(i=0;i<num;i++){
     int count = 0;
     int count1 = 0;
     for(j=0;j<num;j++){
         if (matrix[i][j].equals(x)){
             count++;         
         }
         if (matrix[j][i].equals(x)){
             count1++;
         }
    }
     if(count == num){
         ab += 1;
         }
     if(count1 == num){
         ab += 1;
     }
 }     
for(i=0;i<num;i++){
    int count2 = 0;
    if (matrix[i][i].equals(x)){
       count2++;         
          }
    if(count2 == num){
         ab += 1;
         } 
}
for(i=0;i<num;i++){
    int count3 = 0;
    if (matrix[i][num-1-i].equals(x)){
       count3++;         
          }
    if(count3 == num){
         ab += 1;
          } 
}
System.out.print(ab);
}
}
}
@398fe512fc38db7895336e7a51b2e39d@"
"r04631039","6","0.81","104576","@14ae3da0bcc3b9f57d7886159fc82dfd@import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author Eric
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read 1st line and split by ','
            String[] data = br.readLine().split("","");
            // read 2nd line and split by ','
            String[] data2 = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            // read 3rd matrix and split by ','
            for (int i=0 ; i<num ; i++){
                String[] data3 = br.readLine().split("","");
                for (int j=0 ; j<num ; j++)
                    matrix[i][j]=data3[j];
            }   
            
            // check if elements match announce strings
            Integer[][] judge = new Integer[num][num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    judge[i][j] = 0;
                
            for(int k=0;k<stringCount;k++)
                for(int i=0;i<num;i++)
                    for(int j=0;j<num;j++)
                        if(matrix[i][j].equals(data2[k]))
                            judge[i][j] = 1;

            
            // count vertical, horizontal, and diagonal lines
            int[] col = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    col[i] += judge[i][j];
            
            int[] row = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    row[i] += judge[j][i];
            
            int dia1 = 0;            
            for(int i=0;i<num;i++)
                dia1 += judge[i][i];
            
            int dia2 = 0;            
            for(int i=0;i<num;i++)
                dia2 += judge[i][num-1-i];
            
            int line = 0;
            for(int i=0;i<num;i++){
                if(col[i]==num)
                    line++;
                else if(row[i]==num)
                    line++;
                else if(dia1==num)
                    line++;
                else if(dia2==num)
                    line++;
            }
            
            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
//            for(int i=0;i<num;i++){
//                for(int j=0;j<num;j++)
//                    System.out.printf(""%d"",judge[i][j]);
//                System.out.printf(""\n"");
//            }
            System.out.printf(""%d\n"", line);
        }
    }
}
@14ae3da0bcc3b9f57d7886159fc82dfd@"
"r04945009","10","0.093","105232","@6c2c76a03b4aeda21cb33926ae0615c3@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0])))
        {
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
            
            for(int i=0; i<num; i++){
                 matrix[i] = br.readLine().split("","");
            }
            
            boolean[][] tableTF = new boolean[num][num];
            for(int i=0; i<num; i++){
                for(int j=0; j<num; j++){
                    for(int a=0; a<stringCount; a++){
                        if(tableTF[i][j] == true)
                            continue;
                        tableTF[i][j] = announce[a].equals(matrix[i][j]);
                    }
                }
            }
            
            int Countline = 0;
            for (int i=0; i<num; i++){
                for (int j=0; j<num; j++){
                   if (!tableTF[i][j])
                       break;
                   if (j == num-1)
                       Countline ++; 
                }
            } 
            for (int j=0; j<num; j++){
                for (int i=0; i<num; i++){
                   if (!tableTF[i][j])
                       break;
                   if (i == num-1)
                       Countline ++; 
                }
            }
            for (int i=0; i<num; i++){
                   if (!tableTF[i][i])
                       break;
                   if (i == num-1)
                       Countline ++; 
                }
            for (int i=0; i<num; i++){
                   if (!tableTF[i][num-1-i])
                       break;
                   if (i == num-1)
                       Countline ++; 
                }
            
            System.out.println(Countline);


            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@6c2c76a03b4aeda21cb33926ae0615c3@"
"r04921074","0","0.81","104576","@eaaa68d78a92ac6baf48ec32bd848c07@import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintStream;
/**
 *
 * @author LAB228
 */
public class JavaApplication1 {

    /**
     * @param args the command line arguments
     */
    
    
    public static void main(String[] args) throws IOException {
        // TODO code application logic here
        
        //System.out.println(""阿里布達的東西"");
        
    try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){           
         

            // read a line and split by ','    Line 1
            String[] data0 = br.readLine().split("","");
             // read a line and split by ','    Line 2
            String[] data1 = br.readLine().split("","");
     /*       
            // read a line and split by ','    Line 3
            String[] data2 = br.readLine().split("","");
            // read a line and split by ','    Line 4
            String[] data3 = br.readLine().split("","");
            // read a line and split by ','    Line 5
            String[] data4 = br.readLine().split("","");   */
            
                // store the first integer in variable stringCount (number of announced strings)
                int stringCount0 = Integer.parseInt(data0[0]);
                // store the second integer in variable num (dimension of matrix: num * num)
                int num = Integer.parseInt(data0[1]);
            
             // printf in Java (you should comment out or delete this in your final submission)
     //       System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount0, num, num);

     //       System.out.printf(""\n%s\n"",data1[0]);      
            
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount0];
            String[][] matrix = new String[num][num];
            
            int[][] plate = new int[num][num];
           
            // input announce contry
            for (int i=0 ; i<stringCount0 ; i++){
                announce[i] = data1[i];
            }
            
            //input bingo metrix         &     counting plate              
            
            for (int colume = 0; colume < num ; colume ++ ){
                
                // read a line and split by ','    Line 3~5
                String[] dataM = br.readLine().split("","");  
                
                for(int row = 0; row < num ; row ++ ){
                    
                    matrix[colume][row] = dataM[row] ;                    
                  
            //    System.out.printf(""%s "",announce[0]); 
            //    System.out.printf(matrix[colume][row]);                    
                
                    for(int a=0 ; a<stringCount0 ; a++){
                    if(matrix[colume][row].equals(announce[a])){
                        plate[colume][row] = 1;}
                    }
                          
                //    System.out.println(plate[colume][row]+""\n"");
                
                
                } //end of for-row
            }//end of for-colume
        
        int totalbingo = 0 ; 
        
        //row check
        
        int[] rowcheck = new int[num];
        
        for(int x=0 ; x < num ; x++){ 
            for(int y=0 ; y < num ; y++){
                
                rowcheck[x] = rowcheck[x] +  plate[x][y] ;           
             
            }//end of for-y
                if(rowcheck[x] == num){
                totalbingo ++;
                }//end of if    
        }//end of for-x   
        
                //colume check
        
        int[] columecheck = new int[num];
        
        for(int x=0 ; x < num ; x++){ 
            for(int y=0 ; y < num ; y++){
                
                columecheck[x] = columecheck[x] +  plate[y][x] ; //the differece between row/colume check is plate[y][x]      
             
            }//end of for-y
                if(columecheck[x] == num){
                totalbingo ++;
                }//end of if    
        }//end of for-x       

                  //diagonal check
        
        int[] diagonalcheck = new int[2];
        
        for(int x=0 ; x < num ; x++){
            
            diagonalcheck[0] = diagonalcheck[0] + plate[x][x];
            diagonalcheck[1] = diagonalcheck[1] + plate[x][num-1-x];
            
        }
        
        if(diagonalcheck[0] == num){
                totalbingo ++;
                }
        if(diagonalcheck[1] == num){
                totalbingo ++;
                }
           
        
        System.out.println(totalbingo+""\n"");

        }

        
    }
    
}

@eaaa68d78a92ac6baf48ec32bd848c07@"
"r04631027","0","0.81","104576","@2e13b8cf955da6e4f8b4c8ca6f1f9fbd@ public static void main(String[] args) {
        try {
      FileReader fr=new FileReader(""input.txt"");
      BufferedReader br=new BufferedReader(fr);
      String line;
      int count = 0;
      line = br.readLine();    
      String[] metrix_D = line.split("","");
      int country_n = Integer.parseInt(metrix_D[0]);
      int metrix_D_m = Integer.parseInt(metrix_D[1]);
      //System.out.println(metrix_D_m);
      line = br.readLine();      
      String[] country =  line.split("","");
      int[][] Bingoohya;
        Bingoohya = new int[metrix_D_m][metrix_D_m];
      int bingo_line = 0;
      int test = 0;

      while ((line=br.readLine()) != null) 
      {
          String[] buffer = line.split("","");
          for(int i=0;i<metrix_D_m;i++)
          {
              for(int j=0;j<country_n;j++)
            {
                if(buffer[i].equals(country[j]) )
                    Bingoohya[count][i] = 1;
            }      
          }
          count = count +1;
        }
      for(int p =0;p<metrix_D_m;p++){            //cols
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[p][o];
              if (test==0)
                  break;
  
          }
          if(test==1)
          {
           //   System.out.println(""ohya"");
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                  //rows
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[o][p];
              if (test==0)
                  break;  
          }
          if(test==1)
          {     
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                 //dia1
          
              test = Bingoohya[p][p];
              if (test==0)
                  break;            
          
      }
       if(test==1)
          {     
              bingo_line++;
          }
       int dia = metrix_D_m-1;
       for(int p =0;p<metrix_D_m;p++){             //dia2
          
              test = Bingoohya[p][dia];
              if (test==0)
                  break;  
          
          dia--;
      }
       if(test==1)
          {     
              bingo_line++;
          }
      System.out.println(bingo_line);
      }       
    catch (IOException e) {System.out.println(e);}        
    }    
@2e13b8cf955da6e4f8b4c8ca6f1f9fbd@"
"r04631027","0","0.81","104576","@981c7ac0e812c0b9b0f475b082ee9e8c@import java.io.*;
public class JavaApplication2 {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        try {
      FileReader fr=new FileReader(""input.txt"");
      BufferedReader br=new BufferedReader(fr);
      String line;
      int count = 0;
      line = br.readLine();    
      String[] metrix_D = line.split("","");
      int country_n = Integer.parseInt(metrix_D[0]);
      int metrix_D_m = Integer.parseInt(metrix_D[1]);
      //System.out.println(metrix_D_m);
      line = br.readLine();      
      String[] country =  line.split("","");
      int[][] Bingoohya;
        Bingoohya = new int[metrix_D_m][metrix_D_m];
      int bingo_line = 0;
      int test = 0;

      while ((line=br.readLine()) != null) 
      {
          String[] buffer = line.split("","");
          for(int i=0;i<metrix_D_m;i++)
          {
              for(int j=0;j<country_n;j++)
            {
                if(buffer[i].equals(country[j]) )
                    Bingoohya[count][i] = 1;
            }      
          }
          count = count +1;
        }
      for(int p =0;p<metrix_D_m;p++){            //cols
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[p][o];
              if (test==0)
                  break;
  
          }
          if(test==1)
          {
           //   System.out.println(""ohya"");
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                  //rows
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[o][p];
              if (test==0)
                  break;  
          }
          if(test==1)
          {     
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                 //dia1
          
              test = Bingoohya[p][p];
              if (test==0)
                  break;            
          
      }
       if(test==1)
          {     
              bingo_line++;
          }
       int dia = metrix_D_m-1;
       for(int p =0;p<metrix_D_m;p++){             //dia2
          
              test = Bingoohya[p][dia];
              if (test==0)
                  break;  
          
          dia--;
      }
       if(test==1)
          {     
              bingo_line++;
          }
      System.out.println(bingo_line);
      }       
    catch (IOException e) {System.out.println(e);}        
    }    
}

@981c7ac0e812c0b9b0f475b082ee9e8c@"
"r04631039","10","0.097","105472","@ac2ac3788c11c84ecc8396eebdecabfe@import java.io.BufferedReader;
import java.io.FileReader;

/**
 *
 * @author Eric
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read 1st line and split by ','
            String[] data = br.readLine().split("","");
            // read 2nd line and split by ','
            String[] data2 = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            // read 3rd matrix and split by ','
            for (int i=0 ; i<num ; i++){
                String[] data3 = br.readLine().split("","");
                for (int j=0 ; j<num ; j++)
                    matrix[i][j]=data3[j];
            }   
            
            // check if elements match announce strings
            Integer[][] judge = new Integer[num][num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    judge[i][j] = 0;
                
            for(int k=0;k<stringCount;k++)
                for(int i=0;i<num;i++)
                    for(int j=0;j<num;j++)
                        if(matrix[i][j].equals(data2[k]))
                            judge[i][j] = 1;

            
            // calculate vertical, horizontal, and diagonal lines
            int[] row = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    row[i] += judge[i][j];
            
            int[] col = new int[num];
            for(int i=0;i<num;i++)
                for(int j=0;j<num;j++)
                    col[i] += judge[j][i];
            
            int dia1 = 0;            
            for(int i=0;i<num;i++)
                dia1 += judge[i][i];
            
            int dia2 = 0;            
            for(int i=0;i<num;i++)
                dia2 += judge[i][num-1-i];
            
            // count all matched lines
            int line = 0;
            for(int i=0;i<num;i++){
                if(col[i]==num)
                    line++;
                if(row[i]==num)
                    line++;
            }
            if(dia1==num)
                line++;
            if(dia2==num)
                line++;
            
            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
//            for(int i=0;i<num;i++){
//                for(int j=0;j<num;j++)
//                    System.out.printf("" %d"",judge[i][j]);
//                System.out.printf(""\n"");
//            }
            System.out.printf(""%d\n"", line);
        }
    }
}
@ac2ac3788c11c84ecc8396eebdecabfe@"
"r04921074","10","0.078","104224","@568a4f9ffde51a7b14cd62732ef6abbe@import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;
import java.io.PrintStream;

/**
 *
 * @author LAB228
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws IOException {
        
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){           
         

            // read a line and split by ','    Line 1
            String[] data0 = br.readLine().split("","");
             // read a line and split by ','    Line 2
            String[] data1 = br.readLine().split("","");
     /*       
            // read a line and split by ','    Line 3
            String[] data2 = br.readLine().split("","");
            // read a line and split by ','    Line 4
            String[] data3 = br.readLine().split("","");
            // read a line and split by ','    Line 5
            String[] data4 = br.readLine().split("","");   */
            
                // store the first integer in variable stringCount (number of announced strings)
                int stringCount0 = Integer.parseInt(data0[0]);
                // store the second integer in variable num (dimension of matrix: num * num)
                int num = Integer.parseInt(data0[1]);
            
             // printf in Java (you should comment out or delete this in your final submission)
     //       System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount0, num, num);

     //       System.out.printf(""\n%s\n"",data1[0]);      
            
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount0];
            String[][] matrix = new String[num][num];
            
            int[][] plate = new int[num][num];
           
            // input announce contry
            for (int i=0 ; i<stringCount0 ; i++){
                announce[i] = data1[i];
            }
            
            //input bingo metrix         &     counting plate              
            
            for (int colume = 0; colume < num ; colume ++ ){
                
                // read a line and split by ','    Line 3~5
                String[] dataM = br.readLine().split("","");  
                
                for(int row = 0; row < num ; row ++ ){
                    
                    matrix[colume][row] = dataM[row] ;                    
                  
            //    System.out.printf(""%s "",announce[0]); 
            //    System.out.printf(matrix[colume][row]);                    
                
                    for(int a=0 ; a<stringCount0 ; a++){
                    if(matrix[colume][row].equals(announce[a])){
                        plate[colume][row] = 1;}
                    }
                          
                //    System.out.println(plate[colume][row]+""\n"");
                
                
                } //end of for-row
            }//end of for-colume
        
        int totalbingo = 0 ; 
        
        //row check
        
        int[] rowcheck = new int[num];
        
        for(int x=0 ; x < num ; x++){ 
            for(int y=0 ; y < num ; y++){
                
                rowcheck[x] = rowcheck[x] +  plate[x][y] ;           
             
            }//end of for-y
                if(rowcheck[x] == num){
                totalbingo ++;
                }//end of if    
        }//end of for-x   
        
                //colume check
        
        int[] columecheck = new int[num];
        
        for(int x=0 ; x < num ; x++){ 
            for(int y=0 ; y < num ; y++){
                
                columecheck[x] = columecheck[x] +  plate[y][x] ; //the differece between row/colume check is plate[y][x]      
             
            }//end of for-y
                if(columecheck[x] == num){
                totalbingo ++;
                }//end of if    
        }//end of for-x       

                  //diagonal check
        
        int[] diagonalcheck = new int[2];
        
        for(int x=0 ; x < num ; x++){
            
            diagonalcheck[0] = diagonalcheck[0] + plate[x][x];
            diagonalcheck[1] = diagonalcheck[1] + plate[x][num-1-x];
            
        }
        
        if(diagonalcheck[0] == num){
                totalbingo ++;
                }
        if(diagonalcheck[1] == num){
                totalbingo ++;
                }
           
        
        System.out.println(totalbingo+""\n"");

        }

        // TODO code application logic here
    }
    
}

@568a4f9ffde51a7b14cd62732ef6abbe@"
"r04631027","0","0","0","@990596a4fa67f8ee45ece0cc778884f8@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

/**
 *
 * @author YuChing
 */
import java.io.*;
public class Bingo {

    /**
     * @param args the command line arguments
     */

    public static void main(String[] args) {
        try {
      FileReader fr=new FileReader(""input.txt"");
      BufferedReader br=new BufferedReader(fr);
      String line;
      int count = 0;
      line = br.readLine();    
      String[] metrix_D = line.split("","");
      int country_n = Integer.parseInt(metrix_D[0]);
      int metrix_D_m = Integer.parseInt(metrix_D[1]);
      //System.out.println(metrix_D_m);
      line = br.readLine();      
      String[] country =  line.split("","");
      int[][] Bingoohya;
        Bingoohya = new int[metrix_D_m][metrix_D_m];
      int bingo_line = 0;
      int test = 0;

      while ((line=br.readLine()) != null) 
      {
          String[] buffer = line.split("","");
          for(int i=0;i<metrix_D_m;i++)
          {
              for(int j=0;j<country_n;j++)
            {
                if(buffer[i].equals(country[j]) )
                    Bingoohya[count][i] = 1;
            }      
          }
          count = count +1;
        }
      for(int p =0;p<metrix_D_m;p++){            //cols
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[p][o];
              if (test==0)
                  break;
  
          }
          if(test==1)
          {
           //   System.out.println(""ohya"");
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                  //rows
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[o][p];
              if (test==0)
                  break;  
          }
          if(test==1)
          {     
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                 //dia1
          
              test = Bingoohya[p][p];
              if (test==0)
                  break;            
          
      }
       if(test==1)
          {     
              bingo_line++;
          }
       int dia = metrix_D_m-1;
       for(int p =0;p<metrix_D_m;p++){             //dia2
          
              test = Bingoohya[p][dia];
              if (test==0)
                  break;  
          
          dia--;
      }
       if(test==1)
          {     
              bingo_line++;
          }
      System.out.println(bingo_line);
      }       
    catch (IOException e) {System.out.println(e);}    
        // TODO code application logic here
    }
    
}

@990596a4fa67f8ee45ece0cc778884f8@"
"r04631027","0","0","0","@990596a4fa67f8ee45ece0cc778884f8@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;

/**
 *
 * @author YuChing
 */
import java.io.*;
public class Bingo {

    /**
     * @param args the command line arguments
     */

    public static void main(String[] args) {
        try {
      FileReader fr=new FileReader(""input.txt"");
      BufferedReader br=new BufferedReader(fr);
      String line;
      int count = 0;
      line = br.readLine();    
      String[] metrix_D = line.split("","");
      int country_n = Integer.parseInt(metrix_D[0]);
      int metrix_D_m = Integer.parseInt(metrix_D[1]);
      //System.out.println(metrix_D_m);
      line = br.readLine();      
      String[] country =  line.split("","");
      int[][] Bingoohya;
        Bingoohya = new int[metrix_D_m][metrix_D_m];
      int bingo_line = 0;
      int test = 0;

      while ((line=br.readLine()) != null) 
      {
          String[] buffer = line.split("","");
          for(int i=0;i<metrix_D_m;i++)
          {
              for(int j=0;j<country_n;j++)
            {
                if(buffer[i].equals(country[j]) )
                    Bingoohya[count][i] = 1;
            }      
          }
          count = count +1;
        }
      for(int p =0;p<metrix_D_m;p++){            //cols
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[p][o];
              if (test==0)
                  break;
  
          }
          if(test==1)
          {
           //   System.out.println(""ohya"");
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                  //rows
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[o][p];
              if (test==0)
                  break;  
          }
          if(test==1)
          {     
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                 //dia1
          
              test = Bingoohya[p][p];
              if (test==0)
                  break;            
          
      }
       if(test==1)
          {     
              bingo_line++;
          }
       int dia = metrix_D_m-1;
       for(int p =0;p<metrix_D_m;p++){             //dia2
          
              test = Bingoohya[p][dia];
              if (test==0)
                  break;  
          
          dia--;
      }
       if(test==1)
          {     
              bingo_line++;
          }
      System.out.println(bingo_line);
      }       
    catch (IOException e) {System.out.println(e);}    
        // TODO code application logic here
    }
    
}

@990596a4fa67f8ee45ece0cc778884f8@"
"r04631027","0","0.9","106448","@0faa344466a0d85feddc2748c994d454@import java.io.*;
public class Bingo {

    /**
     * @param args the command line arguments
     */

    public static void main(String[] args) {
        try {
      FileReader fr=new FileReader(""input.txt"");
      BufferedReader br=new BufferedReader(fr);
      String line;
      int count = 0;
      line = br.readLine();    
      String[] metrix_D = line.split("","");
      int country_n = Integer.parseInt(metrix_D[0]);
      int metrix_D_m = Integer.parseInt(metrix_D[1]);
      //System.out.println(metrix_D_m);
      line = br.readLine();      
      String[] country =  line.split("","");
      int[][] Bingoohya;
        Bingoohya = new int[metrix_D_m][metrix_D_m];
      int bingo_line = 0;
      int test = 0;

      while ((line=br.readLine()) != null) 
      {
          String[] buffer = line.split("","");
          for(int i=0;i<metrix_D_m;i++)
          {
              for(int j=0;j<country_n;j++)
            {
                if(buffer[i].equals(country[j]) )
                    Bingoohya[count][i] = 1;
            }      
          }
          count = count +1;
        }
      for(int p =0;p<metrix_D_m;p++){            //cols
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[p][o];
              if (test==0)
                  break;
  
          }
          if(test==1)
          {
           //   System.out.println(""ohya"");
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                  //rows
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[o][p];
              if (test==0)
                  break;  
          }
          if(test==1)
          {     
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                 //dia1
          
              test = Bingoohya[p][p];
              if (test==0)
                  break;            
          
      }
       if(test==1)
          {     
              bingo_line++;
          }
       int dia = metrix_D_m-1;
       for(int p =0;p<metrix_D_m;p++){             //dia2
          
              test = Bingoohya[p][dia];
              if (test==0)
                  break;  
          
          dia--;
      }
       if(test==1)
          {     
              bingo_line++;
          }
      System.out.println(bingo_line);
      }       
    catch (IOException e) {System.out.println(e);}    
        // TODO code application logic here
    }
    
}

@0faa344466a0d85feddc2748c994d454@"
"r04631027","10","0.078","103296","@03373243671365fb238993efeb49c4a6@import java.io.*;
public class Bingo {

    /**
     * @param args the command line arguments
     */

    public static void main(String[] args) {
        try {
      FileReader fr=new FileReader(args[0]);
      BufferedReader br=new BufferedReader(fr);
      String line;
      int count = 0;
      line = br.readLine();    
      String[] metrix_D = line.split("","");
      int country_n = Integer.parseInt(metrix_D[0]);
      int metrix_D_m = Integer.parseInt(metrix_D[1]);
      //System.out.println(metrix_D_m);
      line = br.readLine();      
      String[] country =  line.split("","");
      int[][] Bingoohya;
        Bingoohya = new int[metrix_D_m][metrix_D_m];
      int bingo_line = 0;
      int test = 0;

      while ((line=br.readLine()) != null) 
      {
          String[] buffer = line.split("","");
          for(int i=0;i<metrix_D_m;i++)
          {
              for(int j=0;j<country_n;j++)
            {
                if(buffer[i].equals(country[j]) )
                    Bingoohya[count][i] = 1;
            }      
          }
          count = count +1;
        }
      for(int p =0;p<metrix_D_m;p++){            //cols
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[p][o];
              if (test==0)
                  break;
  
          }
          if(test==1)
          {
           //   System.out.println(""ohya"");
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                  //rows
          for(int o =0;o<metrix_D_m;o++){
              test = Bingoohya[o][p];
              if (test==0)
                  break;  
          }
          if(test==1)
          {     
              bingo_line++;
          }
      }
       for(int p =0;p<metrix_D_m;p++){                 //dia1
          
              test = Bingoohya[p][p];
              if (test==0)
                  break;            
          
      }
       if(test==1)
          {     
              bingo_line++;
          }
       int dia = metrix_D_m-1;
       for(int p =0;p<metrix_D_m;p++){             //dia2
          
              test = Bingoohya[p][dia];
              if (test==0)
                  break;  
          
          dia--;
      }
       if(test==1)
          {     
              bingo_line++;
          }
      System.out.println(bingo_line);
      }       
    catch (IOException e) {System.out.println(e);}    
        // TODO code application logic here
    }
    
}

@03373243671365fb238993efeb49c4a6@"
"f02631008","10","0.109","108336","@3eb1a8e7dd2eca6cd0edf4a0111f8c66@import java.io.*;
import java.io.IOException;
import java.util.Scanner;

/**
 *
 * @author philip
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        
        File file = new File(args[0]);
        try{
            Scanner File_in = new Scanner(file);
            String line_1 = File_in.nextLine();
            String[] Nums = line_1.split("","");
            
            int AnsNum = Integer.parseInt(Nums[0]);
            int ArrNum = Integer.parseInt(Nums[1]);
            int LineIndex=0;
            int[][] Mat = new int[ArrNum][ArrNum];
            int sum = 0;
            int bingoline = 0;
            
            String line_2 = File_in.nextLine();
            String[] Ans = line_2.split("","");
            
            while (File_in.hasNextLine())
            {
                
                String line_3 = File_in.nextLine();
                String[] mypart = line_3.split("","");
                
                for (int i = 0; i < ArrNum; i++) {
                    //System.out.println(part_C1[i]);
                    for(int j = 0; j < AnsNum; j++){
                        
                        if(mypart[i].equalsIgnoreCase(Ans[j])){
                            //System.out.println(""1"");
                            Mat[LineIndex][i] = 1;
                        }
                        
                    }
                }
                
                

                /*for (int i = 0; i < ArrNum; i++){
                    for (int j = 0; j < LineIndex; j++){
                        sum = sum + Mat[LineIndex][i];
                        if(sum == ArrNum){
                            System.out.println(""ininder"");
                        }
                    }
                }*/
                
         
                /*for (int i = 0; i < ArrNum; i++) {
                    //System.out.println(Mat[LineIndex][i]);
                }*/
                
                LineIndex++;
            }
            
            
            for (int i = 0; i < ArrNum; i++){
                sum = 0;
                for (int j = 0; j < ArrNum; j++){
                    sum = sum + Mat[j][i];
                    if(sum == ArrNum){
                        //System.out.println(""Bingo"");
                        bingoline = bingoline+1;
                    }
                }
            }
            
            for (int i = 0; i < ArrNum; i++){
                sum = 0;
                for (int j = 0; j < ArrNum; j++){
                    sum = sum + Mat[i][j];
                    if(sum == ArrNum){
                        //System.out.println(""Bingo1"");
                        bingoline = bingoline+1;
                    }
                }
            }
            
            for (int i = 0; i < 1; i++){
                sum = 0;
                for (int j = 0; j < ArrNum; j++){
                    sum = sum + Mat[i+j][i+j];
                    if(sum == ArrNum){
                        //System.out.println(""Bingo2"");
                        bingoline = bingoline+1;
                    }
                }
            }
            for (int i = ArrNum-1; i > ArrNum-2; i--){
                sum = 0;
                for (int j = 0; j < ArrNum; j++){
                    sum = sum + Mat[i-j][j];
                    if(sum == ArrNum){
                        //System.out.println(""Bingo3"");
                        bingoline = bingoline+1;
                    }
                }
            }
            System.out.println(bingoline);
            
        }
        catch(IOException e){
            System.out.println(""error!""); 
        }
        // TODO code application logic here
    }
    
}

@3eb1a8e7dd2eca6cd0edf4a0111f8c66@"
"r03522826","10","0.092","105216","@712382656b308f818e4d3d8aeb4482be@import java.io.FileReader;
import java.io.BufferedReader;
//import java.io.FileNotFoundException;
//import java.io.IOException;
/**
 *
 * @author LAB104
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        int MAX = 50;
        String str1;
        String [] data = new String[MAX];
        FileReader fr = new FileReader(args[0]);
        BufferedReader bfr = new BufferedReader(fr);
        
        data = bfr.readLine().split("","");
        
        int stringCount = Integer.parseInt(data[0]);
        int num = Integer.parseInt(data[1]);
        
        try
        {
            if((stringCount<2)||(num < 2))
                throw new ArithmeticException();
            
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int [][] Check = new int[num][num];
            //String[] str2 = new String[num];
        
            announce = bfr.readLine().split("","");
        
            for(int i = 0; i < num; i++)
            {
                matrix[i]= bfr.readLine().split("","");
            }
            for (int i =0; i < num; i++)
            {
                for (int j = 0; j < num; j++)
                {
                    for (int k =0; k < stringCount; k++)
                    {
                        if(matrix[i][j].equals(announce[k]))
                          Check[i][j] += 1;
                    }
                }
            }
            int counter = 0;
            int [] r1 = new int [num];
            int [] c1 = new int [num];
            int [] d1 = new int [2];
            for(int i =0; i < num; i++)
            {
                for (int j = 0; j < num; j++)
                {
                    r1[i] += Check[i][j];
                    c1[i] += Check[j][i];
                    if(i==j)
                    {
                        d1[0]+=Check[i][j];
                        d1[1]+=Check[i][num-1-j];
                    }
                }
            }
            
            for (int i = 0; i < num; i++)
            {
                if(r1[i]==num)
                    counter++;
                if(c1[i]==num)
                    counter++;
                if(i < 2)
                {
                   if(d1[i]==num)
                       counter++;
                }
            }
           
            /**System.out.println(r1[0]);
              *System.out.println(r1[1]);
              *System.out.println(r1[2]);
              *
              *System.out.println(c1[0]);
              *System.out.println(c1[1]);
              *System.out.println(c1[2]);
              *
              *
              *System.out.println(d1[0]);
              *System.out.println(d1[1]); **/
         
            
            System.out.println(counter);
        }
        catch(ArithmeticException e)
        {
            System.out.println(e+"" throwed!"");
        }
       
        
        
        
    }
    
}
@712382656b308f818e4d3d8aeb4482be@"
"r03522809","0","0.092","105216","@8b3d061b64c8132218f9604d710f3efe@import edu.princeton.cs.algs4.StdOut;
import java.io.*;

/**
 *
 * @author Dennis
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */

  public static void main(String[] args)throws Exception  {

  try {
      FileReader fr=new FileReader(args[0]);
      BufferedReader br=new BufferedReader(fr);
      String[] data = br.readLine().split("","");
      
      int stringCount = Integer.parseInt(data[0]);
      int num = Integer.parseInt(data[1]);    
      int count=0;
      int countc=0;
      int output=0;
      
      String[] announce = new String[stringCount];
      String[][] matrix = new String[num][num];
      int[][] table = new int[num][num] ;
//      StdOut.println(data[1]);

       announce = br.readLine().split("","");
        
    for( int i=0; i<num ;i++ )
    {
        matrix[i]= br.readLine().split("","");
    }
    
    
        for( int i=0; i<stringCount ;i++ )
    {
            for( int j=0; j<num ;j++ )
        {           
                for( int k=0; k<num ;k++ )
            {

                if(announce[i].equals(matrix[j][k]))
                {
                    table[j][k]=1;
//                    StdOut.println(table[j][k]);
                }
                else 
                {
                    if(  table[j][k] != 1)
                    {
                        table[j][k]=0;
//                    StdOut.println(table[j][k]);
                    }
                }
            }
        }
    }
 
             for( int j=0; j<num ;j++ )
        {           
                 count=0;
                for( int k=0; k<num ;k++ )
            {
                  if(table[j][k]==1)
                  {
                      count=count+1;
                  }
                  if(count==num)   
                  {
                      output=output+1;
                      
                  }
            } 
        }
             
             for( int k=0; k<num ;k++ )
        {    
                count=0;           
                for( int j=0; j<num ;j++ )
            {
                  if(table[j][k]==1)
                  {
                      count=count+1;
                  }
                  if(count==num)   
                  {
                      output=output+1;
                      
                  }
            } 
        }
             
                    count=0;
                 for( int k=0; k<num ;k++ )
                   {
                    if(table[k][k]==1)
                  {
                      count=count+1;
                  }
                  if(count==num)   
                  {
                      output=output+1; 
                   }
                   }
                 
                    count=0;                 
                  for( int k=0; k<num ;k++ )
                  {
                    if(table[k][num-k-1]==1)
                  {
                      count=count+1;
                  }
                  if(count==num)   
                  {
                      output=output+1;   
                   }
                  }
                
             
             System.out.println(output);

            }
     catch (FileNotFoundException e) 
      {
         e.printStackTrace();
      }

        }
    }
@8b3d061b64c8132218f9604d710f3efe@"
"r03522809","10","0.078","104416","@d817a761453fd6c45eb7cf0573549d21@import java.io.FileReader;
import java.io.BufferedReader;
/**
 *
 * @author USER
 */
public class Bingo {
    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");// read a line and split by ','
            int stringCount = Integer.parseInt(data[0]);// store the first integer in variable stringCount (number of announced strings)
            // store the second integer in variable num (dimension of matrix: num * num)    
        
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            String[] data2 = br.readLine().split("","");
            for (int i = 0; i < stringCount; i++) {
                announce[i] = data2[i];
//                System.out.print(announce[i]+""\t"");
            }
//                System.out.println("""");
            for (int i = 0; i < num; i++) {
                String[] data_temp = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = data_temp[j];
//                    System.out.print(matrix[i][j]+""\t"");
                }
//                System.out.println("""");
            }
            int[][] checking = new int[num][num];
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    checking[i][j] = 0;
                }
            }
            for (int p = 0; p < stringCount; p++) {
                for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        if (matrix[i][j].equals(announce[p])) {
                            checking[i][j] = 1;
                        }
                    }
                }
            }
             //for (int i=0 ; i<num ; i++){
            //    for (int j=0 ; j<num ; j++)
            //        System.out.print(checking[i][j]+""\t"");
            //    System.out.println("""");
            //}
            //---------------------------Find Bingo line---------------------//
            int counter = 0, counter_diagonal1 = 0, counter_diagonal2 = 0;
            for (int i = 0; i < num; i++) {
                if (checking[i][i] == 1) {
                    counter_diagonal1++;
                }
            }
            for (int i = 0; i < num; i++) {
                if (checking[i][(num - 1) - i] == 1) {
                    counter_diagonal2++;
                }
            }
            if (counter_diagonal1 == num) {
                counter++;
            }
            if (counter_diagonal2 == num) {
                counter++;
            }
            for (int i = 0; i < num; i++) {
                int temp = 0, temp2 = 0;
                for (int j = 0; j < num; j++) {
                    temp += checking[i][j];
                    temp2 += checking[j][i];
                }
                if (temp == num) {
                    counter++;
                }
                if (temp2 == num) {
                    counter++;
                }
            }
            System.out.println(counter);
        }
    }
}
        

    
    
   
  


@d817a761453fd6c45eb7cf0573549d21@"
"r03522809","10","0.092","105184","@32011d2cf723a117c7e95a29ae871404@import java.io.FileReader;
import java.io.BufferedReader;

/**
 *
 * @author Dennis
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */

  public static void main(String[] args)throws Exception  {

     try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
      String[] data = br.readLine().split("","");
      int stringCount = Integer.parseInt(data[0]);
      int num = Integer.parseInt(data[1]);    
      int count=0;
      int output=0;
      
      String[] announce = new String[stringCount];
      String[][] matrix = new String[num][num];
      int[][] table = new int[num][num] ;
//      StdOut.println(data[1]);

       announce = br.readLine().split("","");
        
    for( int i=0; i<num ;i++ )
    {
        matrix[i]= br.readLine().split("","");
    }
    
    
        for( int i=0; i<stringCount ;i++ )
    {
            for( int j=0; j<num ;j++ )
        {           
                for( int k=0; k<num ;k++ )
            {

                if(announce[i].equals(matrix[j][k]))
                {
                    table[j][k]=1;
//                    StdOut.println(table[j][k]);
                }
                else 
                {
                    if(  table[j][k] != 1)
                    {
                        table[j][k]=0;
//                    StdOut.println(table[j][k]);
                    }
                }
            }
        }
    }
 
             for( int j=0; j<num ;j++ )
        {           
                 count=0;
                for( int k=0; k<num ;k++ )
            {
                  if(table[j][k]==1)
                  {
                      count=count+1;
                  }
                  if(count==num)   
                  {
                      output=output+1;
                      
                  }
            } 
        }
             
             for( int k=0; k<num ;k++ )
        {    
                count=0;           
                for( int j=0; j<num ;j++ )
            {
                  if(table[j][k]==1)
                  {
                      count=count+1;
                  }
                  if(count==num)   
                  {
                      output=output+1;
                      
                  }
            } 
        }
             
                    count=0;
                 for( int k=0; k<num ;k++ )
                   {
                    if(table[k][k]==1)
                  {
                      count=count+1;
                  }
                  if(count==num)   
                  {
                      output=output+1; 
                   }
                   }
                 
                    count=0;                 
                  for( int k=0; k<num ;k++ )
                  {
                    if(table[k][num-k-1]==1)
                  {
                      count=count+1;
                  }
                  if(count==num)   
                  {
                      output=output+1;   
                   }
                  }
                
             
             System.out.println(output);

            }
        }
    }

@32011d2cf723a117c7e95a29ae871404@"
"b03704074","10","0.086","104624","@2fdc0b401d0c6605b61bb35887ee6a71@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           back:
           {
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        
        first = br.readLine().split("","");
        if(first.length!=2)
        {
            //System.out.println(""0"");
            break back;
        }
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
            {
            //System.out.println(""0"");
            break back;
            }
        }
        
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
            if(str1.length!=num[0])
            {
            //System.out.println(""0"");
            break back;
            }
            /*for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    {
                    //System.out.println(""0"");
                    break back;
                    }
                }
            }*/
        
         
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 if(str2.length!=num[1])
                     {
                    //System.out.println(""0"");
                    break back;
                    }
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}
}



@2fdc0b401d0c6605b61bb35887ee6a71@"
"b03704074","10","0.092","105184","@d347e70d8b4ef53a1867c846f32ebe0e@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           back:
           {
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        
        first = br.readLine().split("","");
        
        int flag=0;
        while(flag==0)
        {flag=1;
        if(first.length!=2)
        {
            //System.out.println(""0"");
            //break back;
            flag=0;
        }
        }
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            if(num[i]<2)
            {
            //System.out.println(""0"");
            break back;
            }
        }
        
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
            if(str1.length!=num[0])
            {
            //System.out.println(""0"");
            break back;
            }
            /*for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    {
                    //System.out.println(""0"");
                    break back;
                    }
                }
            }*/
        
         
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 if(str2.length!=num[1])
                     {
                    //System.out.println(""0"");
                    break back;
                    }
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}
}



@d347e70d8b4ef53a1867c846f32ebe0e@"
"b03704074","10","0.077","104368","@073bc01f0015a39daa2442ee26541497@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           back:
           {
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        
        first = br.readLine().split("","");
        
        int flag=0;
        while(flag==0)
        {flag=1;
        if(first.length!=2)
        {
            //System.out.println(""0"");
            //break back;
            flag=0;
        }
        }
        flag=0;
        
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            while(flag==0)
            {flag=1;
            if(num[i]<2)
            {
            //System.out.println(""0"");
            //break back;
                flag=0;
            }
            }
        }
        
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
            if(str1.length!=num[0])
            {
            //System.out.println(""0"");
            break back;
            }
            /*for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    {
                    //System.out.println(""0"");
                    break back;
                    }
                }
            }*/
        
         
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 if(str2.length!=num[1])
                     {
                    //System.out.println(""0"");
                    break back;
                    }
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}
}



@073bc01f0015a39daa2442ee26541497@"
"b03704074","9","0.84","104240","@1fb9843830206e2d613ba722bced9263@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           back:
           {
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        
        first = br.readLine().split("","");
        
        int flag=0;
        while(flag==0)
        {flag=1;
        if(first.length!=2)
        {
            //System.out.println(""0"");
            //break back;
            flag=0;
        }
        }
        flag=0;
        
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            while(flag==0)
            {flag=1;
            if(num[i]<2)
            {
            //System.out.println(""0"");
            //break back;
                flag=0;
            }
            }
        }
        
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
        flag=0;
        while(flag==0)
        {flag=1;
            if(str1.length!=num[0])
            {
            //System.out.println(""0"");
            //break back;
                flag=0;
            }
        }
            /*for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    {
                    //System.out.println(""0"");
                    break back;
                    }
                }
            }*/
        
         
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                 if(str2.length!=num[1])
                     {
                    //System.out.println(""0"");
                    break back;
                    }
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}
}



@1fb9843830206e2d613ba722bced9263@"
"b03704074","10","0.083","103824","@4e7ded68730d477eb75382c2627562a2@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           back:
           {
        String[] first;
        int[]num;
        num=new int[2];
        ///Scanner sc = new Scanner(System.in);
        //System.out.println(""請輸入字串數目與陣列大小(以逗號分開)："");
        
        first = br.readLine().split("","");
        
        int flag=0;
        while(flag==0)
        {flag=1;
        if(first.length!=2)
        {
            //System.out.println(""0"");
            //break back;
            flag=0;
        }
        }
        flag=0;
        
        for (int i = 0; i < first.length; i++)
        {   
            num[i] = Integer.parseInt(first[i]);
            while(flag==0)
            {flag=1;
            if(num[i]<2)
            {
            //System.out.println(""0"");
            //break back;
                flag=0;
            }
            }
        }
        
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
        flag=0;
        while(flag==0)
        {flag=1;
            if(str1.length!=num[0])
            {
            //System.out.println(""0"");
            //break back;
                flag=0;
            }
        }
            /*for(int i=0;i<str1.length;i++)
            {    
                for(int j=i+1;j<str1.length;j++)
                {if(str1[i].equals (str1[j]))
                    {
                    //System.out.println(""0"");
                    break back;
                    }
                }
            }*/
        
         flag=0;
            for (int i = 0; i < num[1]; i++)
            {//System.out.println(""請輸入第""+(i+1)+""排"");
                str2=br.readLine().split("","");
                while(flag==0)
        {flag=1;
                 if(str2.length!=num[1])
                     {
                    //System.out.println(""0"");
                    flag=0;
                    }
        }
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
            
            /*for (int i = 0; i < num[1]; i++)
            {
                for(int j=0;j< num[1];j++)
                {
                    System.out.println(matrix[i][j]);
                }
            
            }*/
            
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}
}



@4e7ded68730d477eb75382c2627562a2@"
"b03704074","10","0.081","103408","@432b2bf8c078e344145a807631d6f57a@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.*; 
import java.util.*;
import java.util.Scanner;
import java.util.Arrays;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           back:
           {
        String[] first;
        int[]num;
        num=new int[2];
        
        first = br.readLine().split("","");
       
        for (int i = 0; i < first.length; i++)
            num[i] = Integer.parseInt(first[i]);
        
        String[][] matrix;
        matrix=new String[num[1]][num[1]];
        String[] str1 = null;
        String[] str2 = null;
        //System.out.println(""請輸入目標國家(以逗號分開)："");
        str1 = br.readLine().split("","");
        
            for (int i = 0; i < num[1]; i++)
            {
                str2=br.readLine().split("","");
                
                for(int j=0;j< num[1];j++)
                {
                    matrix[i][j]=str2[j];
                }
            }
         
                int count=0;
                for (int i = 0; i < num[1]; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][j].equals(str1[m])) 
                            {
                            //System.out.println(""yes"");
                            littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num[1]; i++)
                {   int littlecount=0; 
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num[1];j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[j][i].equals(str1[m])) 
                            {//System.out.println(""yes"");
                             littlecount++;
                            }
                        } 
                    //System.out.println(""j*2=""+j);
                    if(littlecount==num[1])
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   
                    //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][i].equals(str1[m]) )
                            {//.out.println(""yes"");
                            littlecount++;
                            }
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num[1]; i++)
                {   //System.out.println(""i=""+i);
                    for (int m = 0; m < str1.length; m++)
                        {
                            if(matrix[i][num[1]-i-1].equals(str1[m]) )
                            {//System.out.println(""yes"");  
                            littlecount++;
                            } 
                        }
                    if(littlecount==num[1])
                        count++;
                }
                
                
                System.out.println(count);
                
            
        }
    }
}
}



@432b2bf8c078e344145a807631d6f57a@"
"r04631046","0","0.88","104160","@3bb1a4f82e745f8606cd3de431702b2f@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n\n"", stringCount, num, num);

            announce = br.readLine().split("","");

            int[][] matrixTF = new int[num][num];
            int bingoCount = 0;
            for (int i = 0; i < num; i++) {
                String[] row = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = row[j];
                    for (int k = 0; k < stringCount; k++) {
                        if (announce[k].equals(matrix[i][j])) {
                            if (matrixTF[i][j] != 1) {
                                matrixTF[i][j] = 1;
                            }
                        }

                    }
                    System.out.printf(""%d"", matrixTF[i][j]);
                }
            }
            int bingoLine = 0;
//            check rows
            int rowCount = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrixTF[i][j] == 1) {
                        rowCount++;
                    }
                    if (rowCount == num) {
                        bingoLine++;
                    }
                }
                rowCount = 0;
            }
//            check columns
            int columnCount = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrixTF[j][i] == 1) {
                        columnCount++;
                    }
                    if (columnCount == num) {
                        bingoLine++;
                    }
                }
                columnCount = 0;
            }
//            check positive diagonal
            int pdglCount=0;
            for (int i = 0; i < num; i++) {
                if (matrixTF[i][i] == 1) {
                    pdglCount++;
                }                
            }
            if (pdglCount == num) {
                        bingoLine++;
                    }
            pdglCount = 0;
//            check negative diagonal
            int ndglCount=0;
            for (int i = 0; i < num; i++) {
                if (matrixTF[i][num-i-1] == 1) {
                    ndglCount++;
                }                
            }
            if (ndglCount == num) {
                bingoLine++;
            }
            ndglCount = 0;
            
            System.out.printf(""\n%d\n"",bingoLine);
        }
        
    }
}

@3bb1a4f82e745f8606cd3de431702b2f@"
"r04631046","0","0.86","103440","@d0a9fc714da72e0ab87c9555619916ca@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n\n"", stringCount, num, num);

            announce = br.readLine().split("","");

            int[][] matrixTF = new int[num][num];
            int bingoCount = 0;
            for (int i = 0; i < num; i++) {
                String[] row = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = row[j];
                    for (int k = 0; k < stringCount; k++) {
                        if (announce[k].equals(matrix[i][j])) {
                            if (matrixTF[i][j] != 1) {
                                matrixTF[i][j] = 1;
                            }
                        }

                    }
                    
                }
            }
            int bingoLine = 0;
//            check rows
            int rowCount = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrixTF[i][j] == 1) {
                        rowCount++;
                    }
                    if (rowCount == num) {
                        bingoLine++;
                    }
                }
                rowCount = 0;
            }
//            check columns
            int columnCount = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrixTF[j][i] == 1) {
                        columnCount++;
                    }
                    if (columnCount == num) {
                        bingoLine++;
                    }
                }
                columnCount = 0;
            }
//            check positive diagonal
            int pdglCount=0;
            for (int i = 0; i < num; i++) {
                if (matrixTF[i][i] == 1) {
                    pdglCount++;
                }                
            }
            if (pdglCount == num) {
                        bingoLine++;
                    }
            pdglCount = 0;
//            check negative diagonal
            int ndglCount=0;
            for (int i = 0; i < num; i++) {
                if (matrixTF[i][num-i-1] == 1) {
                    ndglCount++;
                }                
            }
            if (ndglCount == num) {
                bingoLine++;
            }
            ndglCount = 0;
            
            System.out.print(bingoLine);
        }
        
    }
}

@d0a9fc714da72e0ab87c9555619916ca@"
"r04631046","0","0.82","104736","@bec27a866eccd7046b1fb2af1de759ab@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n\n"", stringCount, num, num);

            announce = br.readLine().split("","");

            int[][] matrixTF = new int[num][num];
            int bingoCount = 0;
            for (int i = 0; i < num; i++) {
                String[] row = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = row[j];
                    for (int k = 0; k < stringCount; k++) {
                        if (announce[k].equals(matrix[i][j])) {
                            if (matrixTF[i][j] != 1) {
                                matrixTF[i][j] = 1;
                            }
                        }

                    }
                    
                }
            }
            int bingoLine = 0;
//            check rows
            int rowCount = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrixTF[i][j] == 1) {
                        rowCount++;
                    }
                }
                if (rowCount == num) {
                        bingoLine++;
                    }
                rowCount = 0;
            }
//            check columns
            int columnCount = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrixTF[j][i] == 1) {
                        columnCount++;
                    }
                }
                if (columnCount == num) {
                        bingoLine++;
                    }
                columnCount = 0;
            }
//            check positive diagonal
            int pdglCount=0;
            for (int i = 0; i < num; i++) {
                if (matrixTF[i][i] == 1) {
                    pdglCount++;
                }                
            }
            if (pdglCount == num) {
                        bingoLine++;
                    }
            pdglCount = 0;
//            check negative diagonal
            int ndglCount=0;
            for (int i = 0; i < num; i++) {
                if (matrixTF[i][num-i-1] == 1) {
                    ndglCount++;
                }                
            }
            if (ndglCount == num) {
                bingoLine++;
            }
            ndglCount = 0;
            
            System.out.print(bingoLine);
        }
        
    }
}

@bec27a866eccd7046b1fb2af1de759ab@"
"r03525006","0","0.92","105664","@924187877c08208b6c2cf23656315825@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            String readLine;
            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
            while ((readLine = br.readLine()) != null)
            {
                if (announceLine++ < matrixLineStart) {
                    for (int i = 0; i < stringCount; i++) {
                        String[] bingoTarget = readLine.split("","");
                        announce[i] = bingoTarget[i];
                    }
                }
                else if (announceLine++ >= matrixLineStart) {
                    for (int j  = 0; j < num; j ++) {
                        String[] matrixTarget = readLine.split("","");
                        matrix[matrixCount][j] = matrixTarget[j];
                    }
                    matrixCount++;
                }
            }
            int[][] bingoMatrix = new int[num][num];
            for (int k = 0; k < stringCount; k++){
                for (int i = 0; i < num ; i++) {
                    for (int j = 0; j < num ; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0, diag1 = 0, diag2 = 0 ;
            for (int i = 0; i < num; i++) {
                int rowCount = 0, colCount = 0;
                diag1 = diag1 + bingoMatrix[i][i];
                diag2 = diag2 + bingoMatrix[i][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num) {
                    straightLines++;
                }
                if (colCount == num) {
                    straightLines++;
                }
            }

            if (diag1 == num) {
                straightLines++;
            }
            if (diag2 == num) {
                straightLines++;
            }
            System.out.println(straightLines);
        }
    }
}

@924187877c08208b6c2cf23656315825@"
"r04631046","10","0.079","104064","@fb96821a2ae9a165f6f1c7df74de764e@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)


            announce = br.readLine().split("","");

            int[][] matrixTF = new int[num][num];
            int bingoCount = 0;
            for (int i = 0; i < num; i++) {
                String[] row = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = row[j];
                    for (int k = 0; k < stringCount; k++) {
                        if (announce[k].equals(matrix[i][j])) {
                            if (matrixTF[i][j] != 1) {
                                matrixTF[i][j] = 1;
                            }
                        }

                    }

                }
            }
//            check rows
            int rowCount = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrixTF[i][j] == 1) {
                        rowCount++;
                    }
                }
                if (rowCount == num) {
                    bingoCount++;
                }
                rowCount = 0;
            }
//            check columns
            int columnCount = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrixTF[j][i] == 1) {
                        columnCount++;
                    }
                }
                if (columnCount == num) {
                    bingoCount++;
                }
                columnCount = 0;
            }
//            check positive diagonal
            int pdglCount = 0;
            for (int i = 0; i < num; i++) {
                if (matrixTF[i][i] == 1) {
                    pdglCount++;
                }
            }
            if (pdglCount == num) {
                bingoCount++;
            }

//            check negative diagonal
            int ndglCount = 0;
            for (int i = 0; i < num; i++) {
                if (matrixTF[i][num - i - 1] == 1) {
                    ndglCount++;
                }
            }
            if (ndglCount == num) {
                bingoCount++;
            }
            System.out.print(bingoCount);
        }
    }
}

@fb96821a2ae9a165f6f1c7df74de764e@"
"r03525006","0","0.85","104848","@ec148a61562e17ef0474e46f37209004@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
//            String readLine;
//            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
//            while ((readLine = br.readLine()) != null)
//            {
//                if (announceLine++ < matrixLineStart) {
//                    for (int i = 0; i < stringCount; i++) {
//                        String[] bingoTarget = readLine.split("","");
//                        announce[i] = bingoTarget[i];
//                    }
//                }
//                else if (announceLine++ >= matrixLineStart) {
//                    for (int j  = 0; j < num; j ++) {
//                        String[] matrixTarget = readLine.split("","");
//                        matrix[matrixCount][j] = matrixTarget[j];
//                    }
//                    matrixCount++;
//                }
//            }
            String[] lines = br.readLine().split("","");
            for (int i = 0; i < stringCount; i++) {
                announce[i] = lines[i];
            }

            for (int i = 0; i < num; i++) {
                String[] line = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = line[j];
                }
            }
            
            int[][] bingoMatrix = new int[num][num];
            for (int k = 0; k < stringCount; k++){
                for (int i = 0; i < num ; i++) {
                    for (int j = 0; j < num ; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0, diag1 = 0, diag2 = 0 ;
            for (int i = 0; i < num; i++) {
                int rowCount = 0, colCount = 0;
                diag1 = diag1 + bingoMatrix[i][i];
                diag2 = diag2 + bingoMatrix[i][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num) {
                    straightLines++;
                }
                if (colCount == num) {
                    straightLines++;
                }
            }

            if (diag1 == num) {
                straightLines++;
            }
            if (diag2 == num) {
                straightLines++;
            }
            System.out.println(straightLines);
        }
    }
}

@ec148a61562e17ef0474e46f37209004@"
"b03704074","10","0.082","103264","@c29014c7eb04210d042996f7f7046a05@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.FileReader;
import java.io.BufferedReader;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
        String[] data = br.readLine().split("","");
       
        int stringCount = Integer.parseInt(data[0]);//有幾個目標國家
        int num = Integer.parseInt(data[1]);//幾乘幾
        
        String[] announce = new String[stringCount];//列出目標國家
        String[][] matrix = new String[num][num];//列出陣列
        String[] convert = new String[num];
        announce=br.readLine().split("","");
        
        
        for(int i=0;i<num;i++)
        {convert=br.readLine().split("","");
            for(int j=0;j< num;j++)
                    matrix[i][j]=convert[j];
        }
         
                int count=0;
                for (int i = 0; i < num; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num;j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[i][j].equals(announce[m])) 
                                littlecount++;
                        }
                    if(littlecount==num)
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num; i++)
                {   int littlecount=0;
                     for(int j=0;j< num;j++)
                    {
                        for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[j][i].equals(announce[m]))
                             littlecount++;
                        } 
                    if(littlecount==num)
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num; i++)
                { 
                    for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[i][i].equals(announce[m]) )
                            littlecount++;
                        }
                    if(littlecount==num)
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num; i++)
                {   
                    for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[i][num-i-1].equals(announce[m]) )
                            littlecount++;
                            
                        }
                    if(littlecount==num)
                        count++;
                }
                System.out.println(count);
                
            
        }
    }
}




@c29014c7eb04210d042996f7f7046a05@"
"b03704074","10","0.082","103728","@c745bf3f5dea71d88f798ec377a5f5ba@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.FileReader;
import java.io.BufferedReader;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
        String[] data = br.readLine().split("","");
       
        int stringCount = Integer.parseInt(data[0]);//有幾個目標國家
        int num = Integer.parseInt(data[1]);//幾乘幾
        
        String[] announce = new String[stringCount];//列出目標國家
        String[][] matrix = new String[num][num];//列出陣列
        String[] convert = new String[num];
        announce=br.readLine().split("","");
        
        
        for(int i=0;i<num;i++)
        {convert=br.readLine().split("","");
            for(int j=0;j< num;j++)
                    matrix[i][j]=convert[j];
        }
         
                int count=0;
                for (int i = 0; i < num; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num;j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[i][j].equals(announce[m])) 
                                {
                            littlecount++;
                            break;
                            }
                        }
                    if(littlecount==num)
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num; i++)
                {   int littlecount=0;
                     for(int j=0;j< num;j++)
                    {
                        for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[j][i].equals(announce[m]))
                             {
                            littlecount++;
                            break;
                            }
                        } 
                    if(littlecount==num)
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num; i++)
                { 
                    for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[i][i].equals(announce[m]) )
                            {
                            littlecount++;
                            break;
                            }
                        }
                    if(littlecount==num)
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num; i++)
                {   
                    for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[i][num-i-1].equals(announce[m]) )
                            {
                            littlecount++;
                            break;
                            }
                            
                        }
                    if(littlecount==num)
                        count++;
                }
                System.out.println(count);
                
            
        }
    }
    }





@c745bf3f5dea71d88f798ec377a5f5ba@"
"r04631046","10","0.081","104736","@5228388c303cb9c437c9b4bcac3edb53@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            int[][] matrixTF = new int[num][num];
            int bingoCount = 0;
            for (int i = 0; i < num; i++) {
                String[] row = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = row[j];
                    for (int k = 0; k < stringCount; k++) {
                        if (announce[k].equals(matrix[i][j])) {
                            matrixTF[i][j] = 1;
                            break;
                        }

                    }

                }
            }
//            check rows
            int rowCount = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrixTF[i][j] == 1) {
                        rowCount++;
                    }
                }
                if (rowCount == num) {
                    bingoCount++;
                }
                rowCount = 0;
            }
//            check columns
            int columnCount = 0;
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrixTF[j][i] == 1) {
                        columnCount++;
                    }
                }
                if (columnCount == num) {
                    bingoCount++;
                }
                columnCount = 0;
            }
//            check positive diagonal
            int pdglCount = 0;
            for (int i = 0; i < num; i++) {
                if (matrixTF[i][i] == 1) {
                    pdglCount++;
                }
            }
            if (pdglCount == num) {
                bingoCount++;
            }
//            check negative diagonal
            int ndglCount = 0;
            for (int i = 0; i < num; i++) {
                if (matrixTF[i][num - i - 1] == 1) {
                    ndglCount++;
                }
            }
            if (ndglCount == num) {
                bingoCount++;
            }
            System.out.print(bingoCount);
        }
    }
}

@5228388c303cb9c437c9b4bcac3edb53@"
"r03525006","0","0.85","104224","@80d301cc7bc9535614b7d7b02515531e@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            String readLine;
            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
            while ((readLine = br.readLine()) != null)
            {
                if (announceLine++ < matrixLineStart) {
                    for (int i = 0; i < stringCount; i++) {
                        String[] bingoTarget = readLine.split("","");
                        announce[i] = bingoTarget[i];
                    }
                }
                else if (announceLine++ >= matrixLineStart) {
                    for (int j  = 0; j < num; j ++) {
                        String[] matrixTarget = readLine.split("","");
                        matrix[matrixCount][j] = matrixTarget[j];
                    }
                    matrixCount++;
                }
            }


            int[][] bingoMatrix = new int[num][num];
            for (int k = 0; k < stringCount; k++){
                for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0,  diagRightUp= 0, diagLeftDown = 0;
            for (int i = 0; i < num; i++) {
                int rowCount = 0, colCount = 0;
                diagRightUp = diagRightUp + bingoMatrix[i][i];
                diagLeftDown = diagLeftDown + bingoMatrix[i][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num) straightLines++;
                if (colCount == num) straightLines++;
            }

            if (diagRightUp == num) straightLines++;
            if (diagLeftDown == num) straightLines++;

            System.out.println(straightLines);
        }
    }
}

@80d301cc7bc9535614b7d7b02515531e@"
"r03525006","0","0.86","104816","@f6705d34da8a66123bb300e4863d0bc1@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            String readLine;
            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
            while ((readLine = br.readLine()) != null)
            {
                if (announceLine++ < matrixLineStart) {
                    for (int i = 0; i < stringCount; i++) {
                        String[] bingoTarget = readLine.split("","");
                        announce[i] = bingoTarget[i];
                    }
                }
                else if (announceLine++ >= matrixLineStart) {
                    for (int j  = 0; j < num; j ++) {
                        String[] matrixTarget = readLine.split("","");
                        matrix[matrixCount][j] = matrixTarget[j];
                    }
                    matrixCount++;
                }
            }

            int[][] bingoMatrix = new int[num][num];
            for (int k = 0; k < stringCount; k++){
                for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0,  rightUp= 0, leftDown = 0;
            for (int i = 0; i < num; i++) {
                int rowCount = 0, colCount = 0;
                rightUp = rightUp + bingoMatrix[i][i];
                leftDown = leftDown + bingoMatrix[i][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num)
                    straightLines++;
                if (colCount == num)
                    straightLines++;
            }

            if (rightUp == num)
                straightLines++;
            if (leftDown == num)
                straightLines++;

            System.out.println(straightLines);
        }
    }
}

@f6705d34da8a66123bb300e4863d0bc1@"
"r03525006","0","0.89","105168","@f6705d34da8a66123bb300e4863d0bc1@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            String readLine;
            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
            while ((readLine = br.readLine()) != null)
            {
                if (announceLine++ < matrixLineStart) {
                    for (int i = 0; i < stringCount; i++) {
                        String[] bingoTarget = readLine.split("","");
                        announce[i] = bingoTarget[i];
                    }
                }
                else if (announceLine++ >= matrixLineStart) {
                    for (int j  = 0; j < num; j ++) {
                        String[] matrixTarget = readLine.split("","");
                        matrix[matrixCount][j] = matrixTarget[j];
                    }
                    matrixCount++;
                }
            }

            int[][] bingoMatrix = new int[num][num];
            for (int k = 0; k < stringCount; k++){
                for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0,  rightUp= 0, leftDown = 0;
            for (int i = 0; i < num; i++) {
                int rowCount = 0, colCount = 0;
                rightUp = rightUp + bingoMatrix[i][i];
                leftDown = leftDown + bingoMatrix[i][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num)
                    straightLines++;
                if (colCount == num)
                    straightLines++;
            }

            if (rightUp == num)
                straightLines++;
            if (leftDown == num)
                straightLines++;

            System.out.println(straightLines);
        }
    }
}

@f6705d34da8a66123bb300e4863d0bc1@"
"b99611017","1","0.11","102448","@665b6fd95c038cad80d6a2c9058c78e1@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.*;
import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
 import java.util.Arrays;*/
//import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    public static void main(String[] args) throws Exception {

        InputStream is = null;
        InputStreamReader isr = null;
        BufferedReader br = null;

        try {
            is = new FileInputStream(args[0]);
            isr = new InputStreamReader(is);
            br = new BufferedReader(isr);
            Scanner sn = new Scanner(br);
            String str = """";
            while (sn.hasNextLine()) {
                str = str + sn.nextLine()+"","";
            }

            //System.out.println(str);
            String[] token = str.split("","");
            /*for(int i=0;i<token.length;i++)
            {
                System.out.println(token[i]);
            }*/
            
             int annoucedNum=Integer.parseInt(token[0]);
             int size=Integer.parseInt(token[1]);
             String[] announced=new String[annoucedNum]; //儲存公布國名用
             String[][] countr=new String[size][size];   //賓果板
             int k=annoucedNum+annoucedNum;                                    //以下配置賓果板
             for(int i=0;i<size;i++)
             {
             for(int j=0;j<size;j++)
             {
             countr[i][j]=token[k];
             k++;
             }
             }
             int[][] score=new int[size][size];      //紀錄賓果配對情況
             for(int i=0;i<size;i++)                 //記分板歸零
             {
             for(int j=0;j<size;j++)
             {
             score[i][j]=0;
             }
             }
             for(int i=annoucedNum;i<annoucedNum+annoucedNum;i++)          //開始劃記計分板
             {
             for(int j=0;j<size;j++)
             {
             for(int l=0;l<size;l++)
             {
             if(countr[j][l].equals(token[i]))
             {
             score[j][l]++;
             }
             }
             }
             }
             int lineNum=0;
             int counter=0;//儲存連線數量
             for(int i=0;i<size;i++)
             {
             for(int j=0;j<size;j++)
             {
             counter=counter+score[i][j];
             }
             if(counter==size)
             {
             lineNum++;
             counter=0;
             }
             else
             {
             counter=0;
             }
             }
             for(int i=0;i<size;i++)
             {
             for(int j=0;j<size;j++)
             {
             counter=counter+score[j][i];
             }
             if(counter==size)
             {
             lineNum++;
             counter=0;
             }
             else
             {
             counter=0;
             }
             }
             int counter1=0;
             for(int i=0;i<size;i++)
             {
             counter1=counter1+score[i][i];
             }
             if(counter1==size)
             {
             lineNum++;
             //   counter1=0;
             }
             else
             {
             //  counter1=0;
             }
             int counter2=0;
             for(int i=0;i<size;i++)
             {
             counter2=counter2+score[size-1-i][i];
             }
             if(counter2==size)
             {
             lineNum++;
             // counter2=0;
             }
             else
             {
             //                counter2=0;
             }
             /*
            
             System.out.println(""此文字檔為:"" + str);
             System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
             System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            is.close();
        } catch (RuntimeException e) {
            throw e;
        } catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }

    }

}

@665b6fd95c038cad80d6a2c9058c78e1@"
"r03525006","0","0.99","105520","@80a316bf22432687c7aa8237513ef233@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            String readLine;
            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
            while ((readLine = br.readLine()) != null)
            {
                if (announceLine++ < matrixLineStart) {
                    for (int i = 0; i < stringCount; i++) {
                        String[] bingoTarget = readLine.split("","");
                        announce[i] = bingoTarget[i];
                    }
                }
                else if (announceLine++ >= matrixLineStart) {
                    for (int j  = 0; j < num; j ++) {
                        String[] matrixTarget = readLine.split("","");
                        matrix[matrixCount][j] = matrixTarget[j];
                    }
                    matrixCount++;
                }
            }

            int[][] bingoMatrix = new int[num][num];
            for (int k = 0; k < stringCount; k++){
                for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0,  rightUp= 0, leftDown = 0;
            for (int i = 0; i < num; i++) {
                int rowCount = 0, colCount = 0;
                rightUp = rightUp + bingoMatrix[i][i];
                leftDown = leftDown + bingoMatrix[i][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num)
                    straightLines = straightLines + 1;
                if (colCount == num)
                    straightLines = straightLines + 1;
            }

            if (rightUp == num)
                straightLines = straightLines + 1;
            if (leftDown == num)
                straightLines = straightLines + 1;

            br.close();
            System.out.println(straightLines);
        }
    }
}

@80a316bf22432687c7aa8237513ef233@"
"b99611017","1","0.13","105984","@4bcf302c92374b8df3cf46b9bc11701f@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.*;
import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
 import java.util.Arrays;*/
//import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    public static void main(String[] args) throws Exception {

        InputStream is = null;
        InputStreamReader isr = null;
        BufferedReader br = null;

        try {
            is = new FileInputStream(args[0]);
            isr = new InputStreamReader(is,""UTF8"");
            br = new BufferedReader(isr);
            Scanner sn = new Scanner(br);
            String str = """";
            while (sn.hasNextLine()) {
                str = str + sn.nextLine()+"","";
            }

            //System.out.println(str);
            String[] token = str.split("","");
            /*for(int i=0;i<token.length;i++)
            {
                System.out.println(token[i]);
            }*/
            
             int annoucedNum=Integer.parseInt(token[0]);
             int size=Integer.parseInt(token[1]);
             String[] announced=new String[annoucedNum]; //儲存公布國名用
             String[][] countr=new String[size][size];   //賓果板
             int k=annoucedNum+annoucedNum;                                    //以下配置賓果板
             for(int i=0;i<size;i++)
             {
             for(int j=0;j<size;j++)
             {
             countr[i][j]=token[k];
             k++;
             }
             }
             int[][] score=new int[size][size];      //紀錄賓果配對情況
             for(int i=0;i<size;i++)                 //記分板歸零
             {
             for(int j=0;j<size;j++)
             {
             score[i][j]=0;
             }
             }
             for(int i=annoucedNum;i<annoucedNum+annoucedNum;i++)          //開始劃記計分板
             {
             for(int j=0;j<size;j++)
             {
             for(int l=0;l<size;l++)
             {
             if(countr[j][l].equals(token[i]))
             {
             score[j][l]++;
             }
             }
             }
             }
             int lineNum=0;
             int counter=0;//儲存連線數量
             for(int i=0;i<size;i++)
             {
             for(int j=0;j<size;j++)
             {
             counter=counter+score[i][j];
             }
             if(counter==size)
             {
             lineNum++;
             counter=0;
             }
             else
             {
             counter=0;
             }
             }
             for(int i=0;i<size;i++)
             {
             for(int j=0;j<size;j++)
             {
             counter=counter+score[j][i];
             }
             if(counter==size)
             {
             lineNum++;
             counter=0;
             }
             else
             {
             counter=0;
             }
             }
             int counter1=0;
             for(int i=0;i<size;i++)
             {
             counter1=counter1+score[i][i];
             }
             if(counter1==size)
             {
             lineNum++;
             //   counter1=0;
             }
             else
             {
             //  counter1=0;
             }
             int counter2=0;
             for(int i=0;i<size;i++)
             {
             counter2=counter2+score[size-1-i][i];
             }
             if(counter2==size)
             {
             lineNum++;
             // counter2=0;
             }
             else
             {
             //                counter2=0;
             }
             /*
            
             System.out.println(""此文字檔為:"" + str);
             System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
             System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            is.close();
        } catch (RuntimeException e) {
            throw e;
        } catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }

    }

}

@4bcf302c92374b8df3cf46b9bc11701f@"
"r03525006","10","0.094","105232","@befc138e810b94a5f5135cdb10595827@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            String readLine;
            int announceLine = 1, matrixLineStart = 2 , matrixCount = 0;
            while ((readLine = br.readLine()) != null)
            {
                if (announceLine++ < matrixLineStart) {
                    for (int i = 0; i < stringCount; i++) {
                        String[] bingoTarget = readLine.split("","");
                        announce[i] = bingoTarget[i];
                    }
                }
                else if (announceLine++ >= matrixLineStart) {
                    for (int j  = 0; j < num; j ++) {
                        String[] matrixTarget = readLine.split("","");
                        matrix[matrixCount][j] = matrixTarget[j];
                    }
                    matrixCount++;
                }
            }

            int[][] bingoMatrix = new int[num][num];
            for (int k = 0; k < stringCount; k++){
                for (int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        if (matrix[i][j].equals(announce[k])) {
                            bingoMatrix[i][j] = 1;
                        }
                    }
                }
            }

            int straightLines = 0,  rightUp= 0, leftDown = 0;
            for (int i = 0; i < num; i++) {
                int rowCount = 0, colCount = 0;
                rightUp = rightUp + bingoMatrix[i][i];
                leftDown = leftDown + bingoMatrix[i][num-i-1];
                for (int j = 0; j < num; j++){
                    rowCount = rowCount + bingoMatrix[i][j];
                    colCount = colCount + bingoMatrix[j][i];
                }
                if (rowCount == num)
                    straightLines++;
                if (colCount == num)
                    straightLines++;
            }

            if (rightUp == num)
                straightLines++;
            if (leftDown == num)
                straightLines++;

            br.close();
            System.out.println(straightLines);
        }
    }
}

@befc138e810b94a5f5135cdb10595827@"
"b99611017","1","0.12","105632","@6099a531b0ee4042cebd9968aab885f8@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.*;
import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
 import java.util.Arrays;*/
//import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    public static void main(String[] args) throws Exception {

        InputStream is = null;
        InputStreamReader isr = null;
        BufferedReader br = null;

        try {
            is = new FileInputStream(args[0]);
            isr = new InputStreamReader(is, ""UTF8"");
            br = new BufferedReader(isr);
            Scanner sn = new Scanner(br);
            StringBuffer buf = new StringBuffer();
            while (sn.hasNext()) {
                buf.append(sn.next()).append("","");

            }
            String str = buf.toString();
            
            String[] token = str.split("","");

            

            int annoucedNum = Integer.parseInt(token[0]);
            int size = Integer.parseInt(token[1]);
            String[] announced = new String[annoucedNum]; //儲存公布國名用
            String[][] countr = new String[size][size];   //賓果板
            int k = annoucedNum + annoucedNum;                                    //以下配置賓果板
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    countr[i][j] = token[k];
                    k++;
                }
            }
            int[][] score = new int[size][size];      //紀錄賓果配對情況
            for (int i = 0; i < size; i++) //記分板歸零
            {
                for (int j = 0; j < size; j++) {
                    score[i][j] = 0;
                }
            }
            for (int i = annoucedNum; i < annoucedNum + annoucedNum; i++) //開始劃記計分板
            {
                for (int j = 0; j < size; j++) {
                    for (int l = 0; l < size; l++) {
                        if (countr[j][l].equals(token[i])) {
                            score[j][l]++;
                        }
                    }
                }
            }
            int lineNum = 0;
            int counter = 0;//儲存連線數量
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[i][j];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[j][i];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            int counter1 = 0;
            for (int i = 0; i < size; i++) {
                counter1 = counter1 + score[i][i];
            }
            if (counter1 == size) {
                lineNum++;
                //   counter1=0;
            } else {
                //  counter1=0;
            }
            int counter2 = 0;
            for (int i = 0; i < size; i++) {
                counter2 = counter2 + score[size - 1 - i][i];
            }
            if (counter2 == size) {
                lineNum++;
                // counter2=0;
            } else {
                //                counter2=0;
            }
            /*
            
             System.out.println(""此文字檔為:"" + str);
             System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
             System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            is.close();
        } catch (RuntimeException e) {
            throw e;
        } catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }

    }

}

@6099a531b0ee4042cebd9968aab885f8@"
"b99611017","1","0.12","110176","@be9bdb9d05237d3532654196b3bef403@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.*;
import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
 import java.util.Arrays;*/
//import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    public static void main(String[] args) throws Exception {

        InputStream is = null;
        InputStreamReader isr = null;
        BufferedReader br = null;

        try {
            is = new FileInputStream(args[0]);
            isr = new InputStreamReader(is, ""UTF8"");
            br = new BufferedReader(isr);
            Scanner sn = new Scanner(br);
            StringBuffer buf = new StringBuffer();
            while (sn.hasNext()) {
                buf.append(sn.next()).append("","");

            }
            String str = buf.toString();
            
            String[] token = str.split("","");

            

            int annoucedNum = Integer.parseInt(token[0]);
            int size = Integer.parseInt(token[1]);
            String announced ; //儲存公布國名用
            String[][] countr = new String[size][size];   //賓果板
            int k = annoucedNum + annoucedNum;                                    //以下配置賓果板
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    countr[i][j] = token[k];
                    k++;
                }
            }
            int[][] score = new int[size][size];      //紀錄賓果配對情況
            for (int i = 0; i < size; i++) //記分板歸零
            {
                for (int j = 0; j < size; j++) {
                    score[i][j] = 0;
                }
            }
            for (int i = annoucedNum; i < annoucedNum + annoucedNum; i++) //開始劃記計分板
            {
                for (int j = 0; j < size; j++) {
                    for (int l = 0; l < size; l++) {
                        if (countr[j][l].equals(token[i])) {
                            score[j][l]++;
                        }
                    }
                }
            }
            int lineNum = 0;
            int counter = 0;//儲存連線數量
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[i][j];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[j][i];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            int counter1 = 0;
            for (int i = 0; i < size; i++) {
                counter1 = counter1 + score[i][i];
            }
            if (counter1 == size) {
                lineNum++;
                //   counter1=0;
            } else {
                //  counter1=0;
            }
            int counter2 = 0;
            for (int i = 0; i < size; i++) {
                counter2 = counter2 + score[size - 1 - i][i];
            }
            if (counter2 == size) {
                lineNum++;
                // counter2=0;
            } else {
                //                counter2=0;
            }
            /*
            
             System.out.println(""此文字檔為:"" + str);
             System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
             System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            is.close();
        } catch (RuntimeException e) {
            throw e;
        } catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }

    }

}

@be9bdb9d05237d3532654196b3bef403@"
"b99611017","1","0.12","105840","@5e7ed90f402c3298cdc5b1ee03053055@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.*;
//import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
 import java.util.Arrays;*/
//import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    /**
     *
     * @param args
     * @throws Exception
     */
    public static void main(String[] args) throws Exception {

        //InputStream is = null;
        //InputStreamReader isr = null;
        //BufferedReader br = null;
        try {
            InputStream is = new FileInputStream(args[0]);
            InputStreamReader isr = new InputStreamReader(is, ""UTF8"");
            BufferedReader br = new BufferedReader(isr);
            Scanner sn = new Scanner(br);
            StringBuilder buf = new StringBuilder();
            while (sn.hasNext()) {
                buf.append(sn.next()).append("","");

            }
            String str = buf.toString();

            String[] token = str.split("","");

            int annoucedNum = Integer.parseInt(token[0]);
            int size = Integer.parseInt(token[1]);
            String announced; //儲存公布國名用
            String[][] countr = new String[size][size];   //賓果板
            int k = annoucedNum + annoucedNum;                                    //以下配置賓果板
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    countr[i][j] = token[k];
                    k++;
                }
            }
            int[][] score = new int[size][size];      //紀錄賓果配對情況
            for (int i = 0; i < size; i++) //記分板歸零
            {
                for (int j = 0; j < size; j++) {
                    score[i][j] = 0;
                }
            }
            for (int i = annoucedNum; i < annoucedNum + annoucedNum; i++) //開始劃記計分板
            {
                for (int j = 0; j < size; j++) {
                    for (int l = 0; l < size; l++) {
                        if (countr[j][l].equals(token[i])) {
                            score[j][l]++;
                        }
                    }
                }
            }
            int lineNum = 0;
            int counter = 0;//儲存連線數量
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[i][j];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[j][i];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            int counter1 = 0;
            for (int i = 0; i < size; i++) {
                counter1 = counter1 + score[i][i];
            }
            if (counter1 == size) {
                lineNum++;
                //   counter1=0;
            } else {
                //  counter1=0;
            }
            int counter2 = 0;
            for (int i = 0; i < size; i++) {
                counter2 = counter2 + score[size - 1 - i][i];
            }
            if (counter2 == size) {
                lineNum++;
                // counter2=0;
            } else {
                //                counter2=0;
            }
            /*
            
             System.out.println(""此文字檔為:"" + str);
             System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
             System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            is.close();
        } catch (RuntimeException e) {
            throw e;
        } catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }

    }

}

@5e7ed90f402c3298cdc5b1ee03053055@"
"b99611017","1","0.12","105424","@fd32fd7c24ee6dd2d8ada7f7a0206d3c@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.*;
//import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
 import java.util.Arrays;*/
//import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    /**
     *
     * @param args
     * @throws Exception
     */
    public static void main(String[] args) throws Exception {

        //InputStream is = null;
        //InputStreamReader isr = null;
        //BufferedReader br = null;
        try {
            InputStream is = new FileInputStream(args[0]);
            InputStreamReader isr = new InputStreamReader(is, ""UTF8"");
            BufferedReader br = new BufferedReader(isr);
            Scanner sn = new Scanner(br);
            StringBuilder buf = new StringBuilder();
            while (sn.hasNext()) {
                buf.append(sn.next()).append("","");

            }
            String str = buf.toString();

            String[] token = str.split("","");

            int annoucedNum = Integer.parseInt(token[0]);
            int size = Integer.parseInt(token[1]);
            String announced; //儲存公布國名用
            String[][] countr = new String[size][size];   //賓果板
            int k = annoucedNum + annoucedNum;                                    //以下配置賓果板
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    countr[i][j] = token[k];
                    k++;
                }
            }
            int[][] score = new int[size][size];      //紀錄賓果配對情況
            for (int i = 0; i < size; i++) //記分板歸零
            {
                for (int j = 0; j < size; j++) {
                    score[i][j] = 0;
                }
            }
            for (int i = annoucedNum; i < annoucedNum + annoucedNum; i++) //開始劃記計分板
            {
                for (int j = 0; j < size; j++) {
                    for (int l = 0; l < size; l++) {
                        if (countr[j][l].equals(token[i])) {
                            score[j][l]++;
                        }
                    }
                }
            }
            int lineNum = 0;
            int counter = 0;//儲存連線數量
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[i][j];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[j][i];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            int counter1 = 0;
            for (int i = 0; i < size; i++) {
                counter1 = counter1 + score[i][i];
            }
            if (counter1 == size) {
                lineNum++;
                  counter1=0;
            } else {
                  counter1=0;
            }
            int counter2 = 0;
            for (int i = 0; i < size; i++) {
                counter2 = counter2 + score[size - 1 - i][i];
            }
            if (counter2 == size) {
                lineNum++;
                 counter2=0;
            } else {
                                counter2=0;
            }
            /*
            
             System.out.println(""此文字檔為:"" + str);
             System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
             System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            is.close();
        } catch (RuntimeException e) {
            throw e;
        } /*catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }*/

    }

}

@fd32fd7c24ee6dd2d8ada7f7a0206d3c@"
"b02611026","0","0","0","@b2f2349bdedf6de58bf8ef82dc536913@import java.io.FileReader;
import java.io.BufferedReader;

//package bingo;
public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(""input.txt""))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            announce = br.readLine().split("","");
            
            int count = 0;

            for (int i = 0; i < num; i++) {
                String[] inputmatrix = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = inputmatrix[j];
                }
            }
              
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix[i][j] = ""0"";
                        }
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrix[i][j] == ""0"") {
                        if (j == num - 1) {
                            count++;
                        }
                    } else {
                        break;
                    }
                }
            }

            for (int j = 0; j < num; j++) {
                for (int i = 0; i < num; i++) {
                    if (matrix[i][j] == ""0"") {
                        if (i == num - 1) {
                            count++;
                        }
                    } else {
                        break;
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                if (matrix[i][i] == ""0"") {
                    if (i == num - 1) {
                        count++;
                    }
                } else {
                    break;
                }
            }

            for (int i = 0; i < num; i++) {
                if (matrix[i][num - 1 - i] == ""0"") {
                    if (i == 0) {
                        count++;
                    }
                } else {
                    break;
                }
            }

            System.out.printf(""%d"", count);
            System.out.printf(""\n"");
        }        
    }
}
@b2f2349bdedf6de58bf8ef82dc536913@"
"b02611026","0","0","0","@88df7b9cf999ab451a01489dbdb3cacc@import java.io.FileReader;
import java.io.BufferedReader;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(""input.txt""))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            announce = br.readLine().split("","");
            
            int count = 0;

            for (int i = 0; i < num; i++) {
                String[] inputmatrix = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = inputmatrix[j];
                }
            }
              
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix[i][j] = ""0"";
                        }
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrix[i][j] == ""0"") {
                        if (j == num - 1) {
                            count++;
                        }
                    } else {
                        break;
                    }
                }
            }

            for (int j = 0; j < num; j++) {
                for (int i = 0; i < num; i++) {
                    if (matrix[i][j] == ""0"") {
                        if (i == num - 1) {
                            count++;
                        }
                    } else {
                        break;
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                if (matrix[i][i] == ""0"") {
                    if (i == num - 1) {
                        count++;
                    }
                } else {
                    break;
                }
            }

            for (int i = 0; i < num; i++) {
                if (matrix[i][num - 1 - i] == ""0"") {
                    if (i == 0) {
                        count++;
                    }
                } else {
                    break;
                }
            }

            System.out.printf(""%d"", count);
            System.out.printf(""\n"");
        }        
    }
}

@88df7b9cf999ab451a01489dbdb3cacc@"
"b02611026","4","0.92","105488","@2f70b1aa889a8535d449cad19e0ad1d3@import java.io.FileReader;
import java.io.BufferedReader;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            announce = br.readLine().split("","");
            
            int count = 0;

            for (int i = 0; i < num; i++) {
                String[] inputmatrix = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = inputmatrix[j];
                }
            }
              
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix[i][j] = ""0"";
                        }
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrix[i][j] == ""0"") {
                        if (j == num - 1) {
                            count++;
                        }
                    } else {
                        break;
                    }
                }
            }

            for (int j = 0; j < num; j++) {
                for (int i = 0; i < num; i++) {
                    if (matrix[i][j] == ""0"") {
                        if (i == num - 1) {
                            count++;
                        }
                    } else {
                        break;
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                if (matrix[i][i] == ""0"") {
                    if (i == num - 1) {
                        count++;
                    }
                } else {
                    break;
                }
            }

            for (int i = 0; i < num; i++) {
                if (matrix[i][num - 1 - i] == ""0"") {
                    if (i == 0) {
                        count++;
                    }
                } else {
                    break;
                }
            }

            System.out.printf(""%d"", count);
            System.out.printf(""\n"");
        }        
    }
}

@2f70b1aa889a8535d449cad19e0ad1d3@"
"b03611015","10","0.093","106720","@72473fe687b256d7bbf5986a31bae63b@import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

/**
 *
 * @author Steven
 */
public class Bingo {

    /**
     * @param args the command line arguments
     * @throws java.io.IOException
     */
    public static void main(String[] args) throws IOException {
     // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
          
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            announce = br.readLine().split("","");
            
            for(int i=0;i<num;i++){
            matrix[i] = br.readLine().split("","");
            }
            
            for(int j=0;j<stringCount;j++){
                for(int x=0;x<num;x++){
                    for(int y=0;y<num;y++){
                        if(matrix[x][y].equals(announce[j])){
                            matrix[x][y] = ""0"";
                        }
                   }    
                }
            }
            int count=0;
            
           
            for(int i=0;i<num;i++){
                int n=0;
                for(int j=0;j<num;j++){
                    
                    if(!""0"".equals(matrix[i][j]))
                        break;
                    n++;
                }
                if(n==num)
                count++;
            }
            
           for(int i=0;i<num;i++){
                int m=0;
                for(int j=0;j<num;j++){
                    if(!""0"".equals(matrix[j][i]))
                        break;
                    m++;
                }
               if(m==num)
                count++;
            }
           int a=0;
            for(int i=0;i<num;i++){
            
                if(""0"".equals(matrix[i][i]))
                   a++;
                
                if(a==num)
                    count++;
            }
            int b=0;
            for(int i=0;i<num;i++)
            {
                
                if(""0"".equals(matrix[num-i-1][i]))
                  
                    b++;
                if(b==num)
                    count++;
            }
            
            // printf in Java (you should comment out or delete this in your final submission)
            System.out.println(count);
            
        
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@72473fe687b256d7bbf5986a31bae63b@"
"b02611026","10","0.097","106864","@42c2dd70cc43ca2be9affefc4746cdec@import java.io.FileReader;
import java.io.BufferedReader;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            announce = br.readLine().split("","");
            
            int count = 0;

            for (int i = 0; i < num; i++) {
                String[] inputmatrix = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = inputmatrix[j];
                }
            }
              
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix[i][j] = ""0"";
                        }
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrix[i][j].equals(""0"")) {
                        if (j == num - 1) {
                            count++;
                        }
                    } else {
                        break;
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (matrix[j][i].equals(""0"")) {
                        if (j == num - 1) {
                            count++;
                        }
                    } else {
                        break;
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                if (matrix[i][i].equals(""0"")) {
                    if (i == num - 1) {
                        count++;
                    }
                } else {
                    break;
                }
            }

            for (int i = 0; i < num; i++) {
                if (matrix[i][num - 1 - i].equals(""0"")) {
                    if (i == num - 1) {
                        count++;
                    }
                } else {
                    break;
                }
            }

            System.out.printf(""%d"", count);
            System.out.printf(""\n"");
        }        
    }
}

@42c2dd70cc43ca2be9affefc4746cdec@"
"b02611002","0","0.95","105488","@6a183b2c586bf91b6445c6f4d6818b98@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // record how many straight lines are in the matrix
            int lines = 0;
            
            // matrix01中用來計數的變數，累加到num時lines++
            int matrix01counter=0;
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix01 = new int[num][num];            
            String[] matrixLine = new String[num];


            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // br.readLine()讀一行，寫入announce震烈
            announce = br.readLine().split("","");
            for (int i = 0; i<stringCount; i++){
                System.out.printf(""announce[%s] : %s\n"", i, announce[i]);
            }

//            for (int i = 0; i < num; i++){
//                for (int j = 0; j < num; j++){
//
//                    matrixLine = br.readLine().split("","");
////                    matrix[i][j] = ""x"";//br.readLIne().split("","");
//                    System.out.printf(""%s"", Arrays.toString(matrixLine)); 
//                    System.out.printf(""%s"",matrix[i][j]);
//                    
////                    System.out.printf(""[%s][%s]: %s \n"", i, j, matrix[i]][j]);
//                };
//            };

            // br.readLine()讀檔，一行行寫入 matrix 矩陣
            int lineCount = 0;
            String matrixLine2;
            while ((matrixLine2 = br.readLine()) != null) {
                String[] countries = matrixLine2.split("","");
                System.arraycopy(countries, 0, matrix[lineCount], 0, 3);
                lineCount++;
            }
            
            // matrix01 原為3x3的靈矩陣，若subset與announce相同則設為1
             for (int i = 0; i < num; i++){
                for (int j = 0; j < num; j++){
                    for (int announceNo=0; announceNo<stringCount; announceNo++){
                        if (announce[announceNo].equals(matrix[i][j])){
                            matrix01[i][j]=1;
                            System.out.printf("" [%d][%d] -> %d: %s \n"",i,j, matrix01[i][j], matrix[i][j]);
                            break;
                        }
                    }
                }
            }
            
             // 橫排一排一排累加subset，加到3(num)的話lines++
            for (int i=0;i<num;i++){
                for (int j=0;j<num;j++){
                    matrix01counter += matrix01[i][j];
                    System.out.print(matrix01counter);
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }

            // check直排
            for (int j=0;j<num;j++){
                for (int i=0;i<num;i++){
                    matrix01counter += matrix01[i][j];
                    System.out.print(matrix01counter);
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }
            
            // check斜線（左上右下）
            for (int k=0;k<num;k++){
                matrix01counter += matrix01[k][k];
            }
            if (matrix01counter==3){lines++;}
            matrix01counter=0;
            
            // check斜線（左下右上）
            for (int k = 0; k < num; k++) {
                matrix01counter += matrix01[num-k-1][k];
            }
            if (matrix01counter == 3) {lines++;}
            matrix01counter = 0;
            
            System.out.printf(""\nanswer: %d"",lines);
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@6a183b2c586bf91b6445c6f4d6818b98@"
"d04631001","0","0","0","@bc64ede09b1733ba176360a34746e6a4@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(""input.txt""))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            announce = br.readLine().split("","");
            //System.out.printf(""announced: %s %s \n"", announce[0], announce[1]);

            String[] temp = new String[num];
            for (int i = 0; i < matrix[0].length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }
            //System.out.printf(""matrix:\n%s %s %s\n%s %s %s\n%s %s %s\n"", matrix[0][0], matrix[0][1], matrix[0][2], matrix[1][0], matrix[1][1], matrix[1][2], matrix[2][0], matrix[2][1], matrix[2][2]);

            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int i = 0; i < matrix[0].length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } //else if (announce[1].equals(matrix[i][j])) matrix_a[i][j]=""1"";                    
                        else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                    //System.out.print(matrix_s[i][j] + ""\t"");
                }
                //System.out.println();
            }
            int[] sum_h = new int[matrix.length]; int bingo_h = 0;
            int[] sum_v = new int[matrix.length]; int bingo_v = 0;
            int[] sum_l = new int[matrix.length]; int bingo_l = 0;
            int[] sum_r = new int[matrix.length]; int bingo_r = 0;
            
            // horizontal addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i]==matrix_s[0].length)
                            bingo_h = bingo_h + 1;
                    }
                }
            }
            // vertical addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i]==matrix_s[0].length)
                            bingo_v = bingo_v + 1;
                    }
                }
            }
            // 45 degree-cross addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j<matrix_s.length ; j++) {
                    sum_l[i] = sum_l[i] + matrix_s[i][matrix_s.length-j-1];
                    {
                        if (sum_l[i]==matrix_s[0].length)
                            bingo_l = bingo_l + 1;
                    }
                }
            }
            // -45 degree-cross addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                sum_r[i] = sum_r[i] + matrix_s[i][i];
                {
                    if (sum_r[i]==matrix_s[0].length)
                            bingo_l = bingo_l + 1;
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            //System.out.printf(""bingo h:\n%d\n"", bingo_h);
            //System.out.printf(""bingo v:\n%d\n"", bingo_v);
            //System.out.printf(""bingo l:\n%d\n"", bingo_l);
            //System.out.printf(""bingo r:\n%d\n"", bingo_r);
            //System.out.printf(""bingo:\n%d\n"", bingo);
            System.out.printf(""%d\n"", bingo);
            //System.out.printf(""matrix hit:\n%d %d %d\n%d %d %d\n%d %d %d\n"", matrix_s[0][0], matrix_s[0][1], matrix_s[0][2], matrix_s[1][0],matrix_s[1][1],matrix_s[1][2], matrix_s[2][0],matrix_s[2][1], matrix_s[2][2]);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@bc64ede09b1733ba176360a34746e6a4@"
"d04631001","0","0","0","@cd0e9ee3dea458bfdf5e35d2cf812ce3@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(""input.txt""))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            //System.out.printf(""announced: %s %s \n"",announce[0], announce[1]);

            String[] temp = new String[num];
            for (int i = 0; i < matrix[0].length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int i = 0; i < matrix[0].length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } 
                        else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                    //System.out.print(matrix_s[i][j] + ""\t"");
                }
                //System.out.println();
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int[] sum_l = new int[matrix.length];
            int bingo_l = 0;
            int[] sum_r = new int[matrix.length];
            int bingo_r = 0;
            // horizontal addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s[0].length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            // vertical addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s[0].length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            // 45 degree-cross addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l[i] = sum_l[i] + matrix_s[i][matrix_s.length - j - 1];
                    {
                        if (sum_l[i] == matrix_s[0].length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            // -45 degree-cross addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                sum_r[i] = sum_r[i] + matrix_s[i][i];
                {
                    if (sum_r[i] == matrix_s[0].length) {
                        bingo_l = bingo_l + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            //System.out.printf(""bingo h:\n%d\n"", bingo_h);
            //System.out.printf(""bingo v:\n%d\n"", bingo_v);
            //System.out.printf(""bingo l:\n%d\n"", bingo_l);
            //System.out.printf(""bingo r:\n%d\n"", bingo_r);
            //System.out.printf(""bingo:\n%d\n"", bingo);
            System.out.printf(""%d\n"", bingo);

        }
    }
}

@cd0e9ee3dea458bfdf5e35d2cf812ce3@"
"d04631001","0","0","0","@1053cca5fb0b363e12d754d49e5852eb@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(""input.txt""))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            //System.out.printf(""announced: %s %s \n"",announce[0], announce[1]);

            String[] temp = new String[num];
            for (int i = 0; i < matrix[0].length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int i = 0; i < matrix[0].length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } 
                        else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                    //System.out.print(matrix_s[i][j] + ""\t"");
                }
                //System.out.println();
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int[] sum_l = new int[matrix.length];
            int bingo_l = 0;
            int[] sum_r = new int[matrix.length];
            int bingo_r = 0;
            // horizontal addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s[0].length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            // vertical addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s[0].length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            // 45 degree-cross addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l[i] = sum_l[i] + matrix_s[i][matrix_s.length - j - 1];
                    {
                        if (sum_l[i] == matrix_s[0].length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            // -45 degree-cross addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                sum_r[i] = sum_r[i] + matrix_s[i][i];
                {
                    if (sum_r[i] == matrix_s[0].length) {
                        bingo_l = bingo_l + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            //System.out.printf(""bingo h:\n%d\n"", bingo_h);
            //System.out.printf(""bingo v:\n%d\n"", bingo_v);
            //System.out.printf(""bingo l:\n%d\n"", bingo_l);
            //System.out.printf(""bingo r:\n%d\n"", bingo_r);
            //System.out.printf(""bingo:\n%d\n"", bingo);
            System.out.printf(""%s\n"", bingo2);

        }
    }
}

@1053cca5fb0b363e12d754d49e5852eb@"
"d04631001","6","0.97","105520","@4a41fe8e8b626e207286a75ff15491b1@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            //System.out.printf(""announced: %s %s \n"",announce[0], announce[1]);

            String[] temp = new String[num];
            for (int i = 0; i < matrix[0].length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int i = 0; i < matrix[0].length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                    //System.out.print(matrix_s[i][j] + ""\t"");
                }
                //System.out.println();
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int[] sum_l = new int[matrix.length];
            int bingo_l = 0;
            int[] sum_r = new int[matrix.length];
            int bingo_r = 0;
            // horizontal addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s[0].length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            // vertical addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s[0].length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            // 45 degree-cross addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l[i] = sum_l[i] + matrix_s[i][matrix_s.length - j - 1];
                    {
                        if (sum_l[i] == matrix_s[0].length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            // -45 degree-cross addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                sum_r[i] = sum_r[i] + matrix_s[i][i];
                {
                    if (sum_r[i] == matrix_s[0].length) {
                        bingo_l = bingo_l + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            //System.out.printf(""bingo h:\n%d\n"", bingo_h);
            //System.out.printf(""bingo v:\n%d\n"", bingo_v);
            //System.out.printf(""bingo l:\n%d\n"", bingo_l);
            //System.out.printf(""bingo r:\n%d\n"", bingo_r);
            //System.out.printf(""bingo:\n%d\n"", bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}

@4a41fe8e8b626e207286a75ff15491b1@"
"d04631001","0","0","0","@b14a764115869284bc4c9ffbfc531bb0@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(""*.txt""))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            //System.out.printf(""announced: %s %s \n"",announce[0], announce[1]);

            String[] temp = new String[num];
            for (int i = 0; i < matrix[0].length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int i = 0; i < matrix[0].length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                    //System.out.print(matrix_s[i][j] + ""\t"");
                }
                //System.out.println();
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int[] sum_l = new int[matrix.length];
            int bingo_l = 0;
            int[] sum_r = new int[matrix.length];
            int bingo_r = 0;
            // horizontal addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s[0].length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            // vertical addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s[0].length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            // 45 degree-cross addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l[i] = sum_l[i] + matrix_s[i][matrix_s.length - j - 1];
                    {
                        if (sum_l[i] == matrix_s[0].length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            // -45 degree-cross addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                sum_r[i] = sum_r[i] + matrix_s[i][i];
                {
                    if (sum_r[i] == matrix_s[0].length) {
                        bingo_l = bingo_l + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            //System.out.printf(""bingo h:\n%d\n"", bingo_h);
            //System.out.printf(""bingo v:\n%d\n"", bingo_v);
            //System.out.printf(""bingo l:\n%d\n"", bingo_l);
            //System.out.printf(""bingo r:\n%d\n"", bingo_r);
            //System.out.printf(""bingo:\n%d\n"", bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}

@b14a764115869284bc4c9ffbfc531bb0@"
"d04631001","5","0.84","106256","@58614f4176f99356b21793b0c1191cac@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            String[] temp = new String[num];
            for (int i = 0; i < matrix.length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix.length][matrix.length];
            int[][] matrix_s = new int[matrix.length][matrix.length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int[] sum_l = new int[matrix.length];
            int bingo_l = 0;
            int[] sum_r = new int[matrix.length];
            int bingo_r = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l[i] = sum_l[i] + matrix_s[i][matrix_s.length - j - 1];
                    {
                        if (sum_l[i] == matrix_s.length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r[i] = sum_r[i] + matrix_s[i][i];
                {
                    if (sum_r[i] == matrix_s.length) {
                        bingo_l = bingo_l + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}

@58614f4176f99356b21793b0c1191cac@"
"r04631006","9","0.98","106432","@3f9a2d7448a816297cd181af05db828c@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            for (int m = 0; m < stringCount - 1; m++) {
                if (announce[m].equals(announce[m + 1])) {
                    stringCount=stringCount-1;
                }
            }

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

           
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@3f9a2d7448a816297cd181af05db828c@"
"b02611002","0","0.76","103616","@e7c66f12f1b2f2a150f97b71deca29b8@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // record how many straight lines are in the matrix
            int lines = 0;
            
            // matrix01中用來計數的變數，累加到num時lines++
            int matrix01counter=0;
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix01 = new int[num][num];            
            String[] matrixLine = new String[num];


            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // br.readLine()讀一行，寫入announce震烈
            announce = br.readLine().split("","");
//            for (int i = 0; i<stringCount; i++){
//                System.out.printf(""announce[%s] : %s\n"", i, announce[i]);
//            }

            // br.readLine()讀檔，一行行寫入 matrix 矩陣
            int lineCount = 0;
            String matrixLine2;
            while ((matrixLine2 = br.readLine()) != null) {
                String[] countries = matrixLine2.split("","");
                System.arraycopy(countries, 0, matrix[lineCount], 0, 3);
                lineCount++;
            }
            
            // matrix01 原為3x3的靈矩陣，若subset與announce相同則設為1
             for (int i = 0; i < num; i++){
                for (int j = 0; j < num; j++){
                    for (int announceNo=0; announceNo<stringCount; announceNo++){
                        if (announce[announceNo].equals(matrix[i][j])){
                            matrix01[i][j]=1;
//                            System.out.printf("" [%d][%d] -> %d: %s \n"",i,j, matrix01[i][j], matrix[i][j]);
                            break;
                        }
                    }
                }
            }
            
             // 橫排一排一排累加subset，加到3(num)的話lines++
            for (int i=0;i<num;i++){
                for (int j=0;j<num;j++){
                    matrix01counter += matrix01[i][j];
//                    System.out.print(matrix01counter);
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }

            // check直排
            for (int j=0;j<num;j++){
                for (int i=0;i<num;i++){
                    matrix01counter += matrix01[i][j];
//                    System.out.print(matrix01counter);
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }
            
            // check斜線（左上右下）
            for (int k=0;k<num;k++){
                matrix01counter += matrix01[k][k];
            }
            if (matrix01counter==3){lines++;}
            matrix01counter=0;
            
            // check斜線（左下右上）
            for (int k = 0; k < num; k++) {
                matrix01counter += matrix01[num-k-1][k];
            }
            if (matrix01counter == 3) {lines++;}
            matrix01counter = 0;
            
            System.out.printf(""\nanswer: %d"",lines);
            
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@e7c66f12f1b2f2a150f97b71deca29b8@"
"d04631001","0","0","0","@1936250f21a9038d45d1f4c17c00ec32@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(""input3.txt""))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");

            String[] temp = new String[num];
            for (int i = 0; i < matrix.length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix.length][matrix.length];
            int[][] matrix_s = new int[matrix.length][matrix.length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int sum_l = 0;
            int bingo_l = 0;
            int sum_r = 0;
            int bingo_r = 0;
            // horizontal addition
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            // vertical addition
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            // 45 degree-cross addition
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l = sum_l + matrix_s[matrix_s.length - j - 1][i];
                    {
                        if (sum_l == matrix_s.length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            // -45 degree-cross addition
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo_r = bingo_r + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}

@1936250f21a9038d45d1f4c17c00ec32@"
"d04631001","0","0.98","106432","@26a5608ee5212d3f0e49763251f11087@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");

            String[] temp = new String[num];
            for (int i = 0; i < matrix.length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix.length][matrix.length];
            int[][] matrix_s = new int[matrix.length][matrix.length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int sum_l = 0;
            int bingo_l = 0;
            int sum_r = 0;
            int bingo_r = 0;
            // horizontal addition
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            // vertical addition
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            // 45 degree-cross addition
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l = sum_l + matrix_s[matrix_s.length - j - 1][i];
                    {
                        if (sum_l == matrix_s.length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            // -45 degree-cross addition
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo_r = bingo_r + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}


back return to list
@26a5608ee5212d3f0e49763251f11087@"
"d04631001","2","1","105888","@79697bf484f37645dd2d330d4374329b@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            String[] temp = new String[num];
            for (int i = 0; i < matrix.length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix.length][matrix.length];
            int[][] matrix_s = new int[matrix.length][matrix.length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int sum_l = 0;
            int bingo_l = 0;
            int sum_r = 0;
            int bingo_r = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l = sum_l + matrix_s[matrix_s.length - j - 1][i];
                    {
                        if (sum_l == matrix_s.length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo_r = bingo_r + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s"", bingo2);
        }
    }
}
@79697bf484f37645dd2d330d4374329b@"
"d04631001","0","0","0","@f090f422fa7ffc309143e60a5caf8e16@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(""input3.txt""))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            //System.out.printf(""announced: %s %s %s\n"",announce[0], announce[1], announce[2]);

            String[] temp = new String[num];
            for (int i = 0; i < matrix[0].length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int i = 0; i < matrix[0].length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                    //System.out.print(matrix_s[i][j] + ""\t"");
                }
                //System.out.println();
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int sum_l = 0;
            int bingo_l = 0;
            int sum_r = 0;
            int bingo_r = 0;
            // horizontal addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s[0].length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            // vertical addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s[0].length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            // 45 degree-cross addition
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l = sum_l + matrix_s[matrix_s.length - j - 1][i];
                    {
                        if (sum_l == matrix_s.length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo_r = bingo_r + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}

@f090f422fa7ffc309143e60a5caf8e16@"
"r04631006","8","0.91","105472","@31c5145989557ecda7956a36c3665fc6@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
           
            String[] AAA= new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            AAA = br.readLine().split("","");
            int ann = stringCount;
            int who = 0;
            for (int m = 0; m < stringCount - 1; m++) {
                if (AAA[m].equals(AAA[m + 1])) {
                    ann=ann-1; 
                     who=m+1;
                }
            }
            String[] announce = new String[ann];
            
            if (who == 0) {
                announce = AAA;
            } else {
                for (int i = 0; i < ann; i++) {
                    if (i == who) {
                        i = i + 1;

                    } else {
                        announce[i] = AAA[i];
                    }
                }
            }
            
            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

           
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@31c5145989557ecda7956a36c3665fc6@"
"d04631001","2","0.81","104832","@31a3fa93a9b12d2bb95f6096e2cfe2cb@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            //System.out.printf(""announced: %s %s %s\n"",announce[0], announce[1], announce[2]);

            String[] temp = new String[num];
            for (int i = 0; i < matrix[0].length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int i = 0; i < matrix[0].length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                    //System.out.print(matrix_s[i][j] + ""\t"");
                }
                //System.out.println();
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int sum_l = 0;
            int bingo_l = 0;
            int sum_r = 0;
            int bingo_r = 0;
            // horizontal addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s[0].length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            // vertical addition
            for (int i = 0; i < matrix_s[0].length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s[0].length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            // 45 degree-cross addition
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l = sum_l + matrix_s[matrix_s.length - j - 1][i];
                    {
                        if (sum_l == matrix_s.length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo_r = bingo_r + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}

@31a3fa93a9b12d2bb95f6096e2cfe2cb@"
"r04631006","9","0.83","105168","@c7e8154f1a2bb39c2872e67cedddb2e0@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
           
            String[] AAA= new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            AAA = br.readLine().split("","");
            int ann = stringCount;
            int who = 0;
            for (int m = 0; m < stringCount - 1; m++) {
                if (AAA[m].equals(AAA[m + 1])) {
                    ann=ann-1; 
                     who=m+1;
                }
            }
            String[] announce = new String[ann];
            
            if (who == 0) {
                announce = AAA;
            } else {
                for (int i = 0; i < ann; i++) {
                    if (i == who) {
                        i = i + 1;

                    } else {
                        announce[i] = AAA[i];
                    }
                    
                }
            }
            
            
            
            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < ann; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

           
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@c7e8154f1a2bb39c2872e67cedddb2e0@"
"b02611002","4","0.64","102128","@454a44e859f3d835849074a4aa99367e@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // record how many straight lines are in the matrix
            int lines = 0;
            
            // matrix01中用來計數的變數，累加到num時lines++
            int matrix01counter=0;
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix01 = new int[num][num];            
            String[] matrixLine = new String[num];


            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // br.readLine()讀一行，寫入announce震烈
            announce = br.readLine().split("","");
//            for (int i = 0; i<stringCount; i++){
//                System.out.printf(""announce[%s] : %s\n"", i, announce[i]);
//            }

            // br.readLine()讀檔，一行行寫入 matrix 矩陣
            int lineCount = 0;
            String matrixLine2;
            while ((matrixLine2 = br.readLine()) != null) {
                String[] countries = matrixLine2.split("","");
                System.arraycopy(countries, 0, matrix[lineCount], 0, 3);
                lineCount++;
            }
            
            // matrix01 原為3x3的靈矩陣，若subset與announce相同則設為1
             for (int i = 0; i < num; i++){
                for (int j = 0; j < num; j++){
                    for (int announceNo=0; announceNo<stringCount; announceNo++){
                        if (announce[announceNo].equals(matrix[i][j])){
                            matrix01[i][j]=1;
//                            System.out.printf("" [%d][%d] -> %d: %s \n"",i,j, matrix01[i][j], matrix[i][j]);
                            break;
                        }
                    }
                }
            }
            
             // 橫排一排一排累加subset，加到3(num)的話lines++
            for (int i=0;i<num;i++){
                for (int j=0;j<num;j++){
                    matrix01counter += matrix01[i][j];
//                    System.out.print(matrix01counter);
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }

            // check直排
            for (int j=0;j<num;j++){
                for (int i=0;i<num;i++){
                    matrix01counter += matrix01[i][j];
//                    System.out.print(matrix01counter);
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }
            
            // check斜線（左上右下）
            for (int k=0;k<num;k++){
                matrix01counter += matrix01[k][k];
            }
            if (matrix01counter==3){lines++;}
            matrix01counter=0;
            
            // check斜線（左下右上）
            for (int k = 0; k < num; k++) {
                matrix01counter += matrix01[num-k-1][k];
            }
            if (matrix01counter == 3) {lines++;}
            matrix01counter = 0;
            
            System.out.print(lines);
//            return lines;
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@454a44e859f3d835849074a4aa99367e@"
"d04631001","2","0.98","105536","@f1a7b1bf616e55248a80c7a7db1da64c@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            String[] temp = new String[num];
            for (int i = 0; i < matrix.length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix.length][matrix.length];
            int[][] matrix_s = new int[matrix.length][matrix.length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int sum_l = 0;
            int bingo_l = 0;
            int sum_r = 0;
            int bingo_r = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l = sum_l + matrix_s[matrix_s.length - j - 1][i];
                    {
                        if (sum_l == matrix_s.length) {
                            bingo_l = 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo_r = 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}
@f1a7b1bf616e55248a80c7a7db1da64c@"
"d04631001","6","0.97","105488","@455089cc054d8906f2f2186ba0c01b41@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            String[] temp = new String[num];
            for (int i = 0; i < matrix.length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix.length][matrix.length];
            int[][] matrix_s = new int[matrix.length][matrix.length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int[] sum_l = new int[matrix.length];
            int bingo_l = 0;
            int[] sum_r = new int[matrix.length];
            int bingo_r = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l[i] = sum_l[i] + matrix_s[i][matrix_s.length - j - 1];
                    {
                        if (sum_l[i] == matrix_s.length) {
                            bingo_l = bingo_l + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r[i] = sum_r[i] + matrix_s[i][i];
                {
                    if (sum_r[i] == matrix_s.length) {
                        bingo_l = bingo_l + 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}
@455089cc054d8906f2f2186ba0c01b41@"
"b02611002","4","0.83","105248","@b037b80d725d5efcbc0c4bc9a4991ae9@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // record how many straight lines are in the matrix
            int lines = 0;
            
            // matrix01中用來計數的變數，累加到num時lines++
            int matrix01counter=0;
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix01 = new int[num][num];            
            String[] matrixLine = new String[num];


            
            announce = br.readLine().split("","");

            
            int lineCount = 0;
            String matrixLine2;
            while ((matrixLine2 = br.readLine()) != null) {
                String[] countries = matrixLine2.split("","");
                System.arraycopy(countries, 0, matrix[lineCount], 0, 3);
                lineCount++;
            }
            
            
             for (int i = 0; i < num; i++){
                for (int j = 0; j < num; j++){
                    for (int announceNo=0; announceNo<stringCount; announceNo++){
                        if (announce[announceNo].equals(matrix[i][j])){
                            matrix01[i][j]=1;
                            break;
                        }
                    }
                }
            }
            
             
            for (int i=0;i<num;i++){
                for (int j=0;j<num;j++){
                    matrix01counter += matrix01[i][j];
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }

            
            for (int j=0;j<num;j++){
                for (int i=0;i<num;i++){
                    matrix01counter += matrix01[i][j];
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }
            
            for (int k=0;k<num;k++){
                matrix01counter += matrix01[k][k];
            }
            if (matrix01counter==3){lines++;}
            matrix01counter=0;
            

            for (int k = 0; k < num; k++) {
                matrix01counter += matrix01[num-k-1][k];
            }
            if (matrix01counter == 3) {lines++;}
//            matrix01counter = 0;
            
            System.out.print(lines);

        }
    }
}

@b037b80d725d5efcbc0c4bc9a4991ae9@"
"d04631001","2","0.98","105504","@2dd522bdba396dcc25b201806ebd5352@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            String[] temp = new String[num];
            for (int i = 0; i < matrix.length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix.length][matrix.length];
            int[][] matrix_s = new int[matrix.length][matrix.length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int sum_l = 0;
            int bingo_l = 0;
            int sum_r = 0;
            int bingo_r = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l = sum_l + matrix_s[i][matrix_s.length - j - 1];
                    {
                        if (sum_l == matrix_s.length) {
                            bingo_l = 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo_r = 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}
@2dd522bdba396dcc25b201806ebd5352@"
"b02611002","4","0.83","105152","@80a3959b9bda9b80900ed994fe85398b@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            
            String[] data = br.readLine().split("","");
            
            
            int stringCount = Integer.parseInt(data[0]);

            
            int num = Integer.parseInt(data[1]);

            
            int lines = 0;
            
            
            int matrix01counter=0;
            
            
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix01 = new int[num][num];            
            String[] matrixLine = new String[num];


            
            announce = br.readLine().split("","");

            
            int lineCount = 0;
            String matrixLine2;
            while ((matrixLine2 = br.readLine()) != null) {
                String[] countries = matrixLine2.split("","");
                System.arraycopy(countries, 0, matrix[lineCount], 0, 3);
                lineCount++;
            }
            
            
             for (int i = 0; i < num; i++){
                for (int j = 0; j < num; j++){
                    for (int announceNo=0; announceNo<stringCount; announceNo++){
                        if (announce[announceNo].equals(matrix[i][j])){
                            matrix01[i][j]=1;
                            break;
                        }
                    }
                }
            }
            
             
            for (int i=0;i<num;i++){
                for (int j=0;j<num;j++){
                    matrix01counter += matrix01[i][j];
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }

            
            for (int j=0;j<num;j++){
                for (int i=0;i<num;i++){
                    matrix01counter += matrix01[i][j];
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }
            
            for (int k=0;k<num;k++){
                matrix01counter += matrix01[k][k];
            }
            if (matrix01counter==3){lines++;}
            matrix01counter=0;
            

            for (int k = 0; k < num; k++) {
                matrix01counter += matrix01[num-k-1][k];
            }
            if (matrix01counter == 3) {lines++;}
            
            System.out.print(lines);

        }
    }
}

@80a3959b9bda9b80900ed994fe85398b@"
"r04631006","9","0.97","105456","@7913a81a37b3e80cc28b15c169f3f31b@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
           
            String[] AAA= new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            AAA = br.readLine().split("","");
            int ann = stringCount;
            int who = 0;
            for (int m = 0; m < stringCount; m++) {
                for (int i = m + 1; i < stringCount; i++) {
                    if (AAA[m].equals(AAA[i])) {
                        ann = ann - 1;
                        who = i;
                    }
                }
            }
            String[] announce = new String[ann];
            
            if (who == 0) {
                announce = AAA;
            } else {
                for (int i = 0; i < ann; i++) {
                    if (i == who) {
                        i = i + 1;

                    } else {
                        announce[i] = AAA[i];
                    }
                    
                }
            }
//            System.out.printf(""%s "", announce[2]);
//            System.out.printf(""%d "", who);
//            
            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < ann; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

           
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@7913a81a37b3e80cc28b15c169f3f31b@"
"d04631001","2","0.95","105456","@7c3db8cc215a8b3e11bf459a0e37f6f2@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            String[] temp = new String[num];
            for (int i = 0; i < matrix.length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix.length][matrix.length];
            int[][] matrix_s = new int[matrix.length][matrix.length];
            for (int i = 0; i < matrix.length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int sum_l = 0;
            int bingo_l = 0;
            int sum_r = 0;
            int bingo_r = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_l = sum_l + matrix_s[i][matrix_s.length - j - 1];
                    {
                        if (sum_l == matrix_s.length) {
                            bingo_l = 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo_r = 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            //String bingo2 = String.valueOf(bingo);
            System.out.printf(""%d\n"", bingo);
            //System.out.printf(""%s\n"", bingo2);
        }
    }
}
@7c3db8cc215a8b3e11bf459a0e37f6f2@"
"b02611002","4","0.91","105552","@7ee92bd4340af8bd4e98c9db62b45fd0@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // record how many straight lines are in the matrix
            int lines = 0;
            
            // matrix01中用來計數的變數，累加到num時lines++
            int matrix01counter=0;
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix01 = new int[num][num];            
            String[] matrixLine = new String[num];


            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // br.readLine()讀一行，寫入announce震烈
            announce = br.readLine().split("","");
//            for (int i = 0; i<stringCount; i++){
//                System.out.printf(""announce[%s] : %s\n"", i, announce[i]);
//            }

            // br.readLine()讀檔，一行行寫入 matrix 矩陣
            int lineCount = 0;
            String matrixLine2;
            while ((matrixLine2 = br.readLine()) != null) {
                String[] countries = matrixLine2.split("","");
                System.arraycopy(countries, 0, matrix[lineCount], 0, 3);
                lineCount++;
            }
            
            // matrix01 原為3x3的靈矩陣，若subset與announce相同則設為1
             for (int i = 0; i < num; i++){
                for (int j = 0; j < num; j++){
                    for (int announceNo=0; announceNo<stringCount; announceNo++){
                        if (announce[announceNo].equals(matrix[i][j])){
                            matrix01[i][j]=1;
//                            System.out.printf("" [%d][%d] -> %d: %s \n"",i,j, matrix01[i][j], matrix[i][j]);
                            break;
                        }
                    }
                }
            }
            
             // 橫排一排一排累加subset，加到3(num)的話lines++
            for (int i=0;i<num;i++){
                for (int j=0;j<num;j++){
                    matrix01counter += matrix01[i][j];
//                    System.out.print(matrix01counter);
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }

            // check直排
            for (int j=0;j<num;j++){
                for (int i=0;i<num;i++){
                    matrix01counter += matrix01[i][j];
//                    System.out.print(matrix01counter);
                }
                if (matrix01counter==3){lines++;}
                matrix01counter=0;
            }
            
            // check斜線（左上右下）
            for (int k=0;k<num;k++){
                matrix01counter += matrix01[k][k];
            }
            if (matrix01counter==3){lines++;}
            matrix01counter=0;
            
            // check斜線（左下右上）
            for (int k = 0; k < num; k++) {
                matrix01counter += matrix01[num-k-1][k];
            }
            if (matrix01counter == 3) {lines++;}
            matrix01counter = 0;
            
            System.out.printf(""%d"",lines);
//            return lines;
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@7ee92bd4340af8bd4e98c9db62b45fd0@"
"d04631001","10","0.104","105472","@7617264a67120a3d75616a32e98de381@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            //System.out.printf(""announced: %s %s %s\n"",announce[0], announce[1], announce[2]);

            String[] temp = new String[num];
            for (int i = 0; i < matrix[0].length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }

            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int i = 0; i < matrix[0].length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                    //System.out.print(matrix_s[i][j] + ""\t"");
                }
                //System.out.println();
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int sum_l = 0;
            int bingo_l = 0;
            int sum_r = 0;
            int bingo_r = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                sum_l = sum_l + matrix_s[i][matrix_s.length - i - 1];
                {
                    if (sum_l == matrix_s.length) {
                        bingo_l = 1;
                    }
                }
            }
            for (int i = 0; i < matrix_s.length; i++) {
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo_r = 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            //System.out.printf(""bingo h:\n%d\n"", bingo_h);
            //System.out.printf(""bingo v:\n%d\n"", bingo_v);
            //System.out.printf(""bingo l:\n%d\n"", bingo_l);
            //System.out.printf(""bingo r:\n%d\n"", bingo_r);
            //System.out.printf(""bingo:\n%d\n"", bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}

@7617264a67120a3d75616a32e98de381@"
"b02611002","4","0.75","104912","@363f8a1946803b755634909429f47608@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            
            int lines = 0;
            
            int matrix01counter=0;

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix01 = new int[num][num];
            String[] matrixLine = new String[num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
            
            announce = br.readLine().split("","");
            int lineCount = 0;

            String matrixLine2;
            while ((matrixLine2 = br.readLine()) != null) {
                String[] countries = matrixLine2.split("","");
                System.arraycopy(countries, 0, matrix[lineCount], 0, 3);
                lineCount++;
            }

            // matrix01 原為3x3的靈矩陣，若subset與announce相同則設為1
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int announceNo = 0; announceNo < stringCount; announceNo++) {
                        if (announce[announceNo].equals(matrix[i][j])) {
                            matrix01[i][j] = 1;
//                            System.out.printf("" [%d][%d] -> %d: %s \n"",i,j, matrix01[i][j], matrix[i][j]);
                            break;
                        }
                    }
                }
            }

            // 橫排一排一排累加subset，加到3(num)的話lines++
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    matrix01counter += matrix01[i][j];
//                    System.out.print(matrix01counter);
                }
                if (matrix01counter == 3) {
                    lines++;
                }
                matrix01counter = 0;
            }

            // check直排
            for (int j = 0; j < num; j++) {
                for (int i = 0; i < num; i++) {
                    matrix01counter += matrix01[i][j];
//                    System.out.print(matrix01counter);
                }
                if (matrix01counter == 3) {
                    lines++;
                }
                matrix01counter = 0;
            }

            // check斜線（左上右下）
            for (int k = 0; k < num; k++) {
                matrix01counter += matrix01[k][k];
            }
            if (matrix01counter == 3) {
                lines++;
            }
            matrix01counter = 0;

            // check斜線（左下右上）
            for (int k = 0; k < num; k++) {
                matrix01counter += matrix01[num - k - 1][k];
            }
            if (matrix01counter == 3) {
                lines++;
            }
            matrix01counter = 0;
            
            /*
            for(int i=0;i<num;i++){
                matrix[i]=br.readLine().split("","");
            }
//            System.out.printf(""%s\n "",announce[0]);

            for(int i=0;i<num;i++){
                for(int j=0;j<num;j++){
                    for(int k=0;k<announce.length;k++) {
                        if(announce[k].equals(matrix[i][j])){
                            mp[i][j]=true;
                            break;
                        }
                        else mp[i][j]=false;
                    }
                }
            }

//            boolean a=mp[0][0]&mp[0][1];
//            System.out.printf(a);
            boolean diag=true,rdiag=true;
            for(int i=0;i<num;i++){
                boolean row=true,col=true;
                diag&=mp[i][i];
                rdiag&=mp[num-i-1][i];
                for(int j=0;j<num;j++) {
                    row&=mp[i][j];
                    col&=mp[j][i];
                }
                if(row==true)lines++;
                if(col==true)lines++;
            }
            if(diag==true)lines++;
            if(rdiag==true)lines++;
//
//
//            for(int i=0;i<num;i++){
//                for(int j=0;j<num;j++){
//                    System.out.printf(""%s "",matrix[i][j]);
//                }
//                System.out.printf(""\n"");
//            }
//
//            for(int i=0;i<num;i++){
//                for(int j=0;j<num;j++){
//                    System.out.printf(""%b "",mp[i][j]);
//                }
//                System.out.printf(""\n"");
//            }
*/
            System.out.printf(""%d"",lines);
        }
        catch (Exception e){
            e.printStackTrace();
        }
    }
}

@363f8a1946803b755634909429f47608@"
"b02611002","0","1.13","105504","@a9a1f2c60603bc23defa241ea65f2154@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // record how many straight lines are in the matrix
            int lines = 0;
            
            // matrix01中用來計數的變數，累加到num時lines++
            int matrix01counter=0;
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix01 = new int[num][num];            
            String[] matrixLine = new String[num];


            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // br.readLine()讀一行，寫入announce震烈
            announce = br.readLine().split("","");
            for (int i = 0; i<stringCount; i++){
                System.out.printf(""announce[%s] : %s\n"", i, announce[i]);
            }

            // br.readLine()讀檔，一行行寫入 matrix 矩陣
            int lineCount = 0;
            
            String matrixLine2;
            while ((matrixLine2 = br.readLine()) != null) {
                String[] countries = matrixLine2.split("","");
                System.arraycopy(countries, 0, matrix[lineCount], 0, num);
                lineCount++;
            }
            
            // matrix01 原為3x3的靈矩陣，若subset與announce相同則設為1
             for (int i = 0; i < num; i++){
                for (int j = 0; j < num; j++){
                    for (int announceNo=0; announceNo<stringCount; announceNo++){
                        if (announce[announceNo].equals(matrix[i][j])){
                            matrix01[i][j]=1;
                            System.out.printf("" [%d][%d] -> %d: %s \n"",i,j, matrix01[i][j], matrix[i][j]);
                            break;
                        }
                    }
                }
            }
            
             // 橫排一排一排累加subset，加到3(num)的話lines++
            for (int i=0;i<num;i++){
                for (int j=0;j<num;j++){
                    matrix01counter += matrix01[i][j];
                    System.out.print(matrix01counter);
                }
                if (matrix01counter==num){lines++;}
                matrix01counter=0;
            }

            // check直排
            for (int j=0;j<num;j++){
                for (int i=0;i<num;i++){
                    matrix01counter += matrix01[i][j];
                    System.out.print(matrix01counter);
                }
                if (matrix01counter==num){lines++;}
                matrix01counter=0;
            }
            
            // check斜線（左上右下）
            for (int k=0;k<num;k++){
                matrix01counter += matrix01[k][k];
            }
            if (matrix01counter==num){lines++;}
            matrix01counter=0;
            
            // check斜線（左下右上）
            for (int k = 0; k < num; k++) {
                matrix01counter += matrix01[num-k-1][k];
            }
            if (matrix01counter == num) {lines++;}
            matrix01counter = 0;
            
            System.out.printf(""\n%d"",lines);
//            return lines;
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
}

@a9a1f2c60603bc23defa241ea65f2154@"
"b02611002","10","0.097","105552","@56d7efbb00816c300f4b00f4e3e8d800@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // record how many straight lines are in the matrix
            int lines = 0;
            
            // matrix01中用來計數的變數，累加到num時lines++
            int matrix01counter=0;
            
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrix01 = new int[num][num];            
            String[] matrixLine = new String[num];


            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // br.readLine()讀一行，寫入announce震烈
            announce = br.readLine().split("","");
            for (int i = 0; i<stringCount; i++){
//                System.out.printf(""announce[%s] : %s\n"", i, announce[i]);
            }

            // br.readLine()讀檔，一行行寫入 matrix 矩陣
            int lineCount = 0;
            
            String matrixLine2;
            while ((matrixLine2 = br.readLine()) != null) {
                String[] countries = matrixLine2.split("","");
                System.arraycopy(countries, 0, matrix[lineCount], 0, num);
                lineCount++;
            }
            
            // matrix01 原為3x3的靈矩陣，若subset與announce相同則設為1
             for (int i = 0; i < num; i++){
                for (int j = 0; j < num; j++){
                    for (int announceNo=0; announceNo<stringCount; announceNo++){
                        if (announce[announceNo].equals(matrix[i][j])){
                            matrix01[i][j]=1;
//                            System.out.printf("" [%d][%d] -> %d: %s \n"",i,j, matrix01[i][j], matrix[i][j]);
                            break;
                        }
                    }
                }
            }
            
             // 橫排一排一排累加subset，加到3(num)的話lines++
            for (int i=0;i<num;i++){
                for (int j=0;j<num;j++){
                    matrix01counter += matrix01[i][j];
//                    System.out.print(matrix01counter);
                }
                if (matrix01counter==num){lines++;}
                matrix01counter=0;
            }

            // check直排
            for (int j=0;j<num;j++){
                for (int i=0;i<num;i++){
                    matrix01counter += matrix01[i][j];
//                    System.out.print(matrix01counter);
                }
                if (matrix01counter==num){lines++;}
                matrix01counter=0;
            }
            
            // check斜線（左上右下）
            for (int k=0;k<num;k++){
                matrix01counter += matrix01[k][k];
            }
            if (matrix01counter==num){lines++;}
            matrix01counter=0;
            
            // check斜線（左下右上）
            for (int k = 0; k < num; k++) {
                matrix01counter += matrix01[num-k-1][k];
            }
            if (matrix01counter == num) {lines++;}
            matrix01counter = 0;
            
            System.out.printf(""%d"",lines);
//            return lines;
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
        catch (Exception e) {
            e.printStackTrace();
        }
    }
}

@56d7efbb00816c300f4b00f4e3e8d800@"
"d04631001","9","0.88","105488","@4217be06fa1c387696c5bc4f89fed8c5@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            //System.out.printf(""announced: %s %s %s\n"",announce[0], announce[1], announce[2]);

            String[] temp = new String[num];
            for (int i = 0; i < matrix[0].length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }
            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int i = 0; i < matrix[0].length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int bingo_h = 0;
            int[] sum_v = new int[matrix.length];
            int bingo_v = 0;
            int sum_l = 0;
            int bingo_l = 0;
            int sum_r = 0;
            int bingo_r = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo_h = bingo_h + 1;
                        }
                    }
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo_v = bingo_v + 1;
                        }
                    }
                }
                sum_l = sum_l + matrix_s[i][matrix_s.length - i - 1];
                {
                    if (sum_l == matrix_s.length) {
                        bingo_l = 1;
                    }
                }
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo_r = 1;
                    }
                }
            }
            int bingo = 0;
            bingo = bingo_h + bingo_v + bingo_l + bingo_r;
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}

@4217be06fa1c387696c5bc4f89fed8c5@"
"d04631001","10","0.097","105472","@3fd45581a559c23067b055c2862f5a39@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            String[] temp = new String[num];
            for (int i = 0; i < matrix[0].length; i++) {
                temp = br.readLine().split("","");
                for (int j = 0; j < matrix.length; j++) {
                    matrix[i][j] = temp[j];
                }
            }
            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int i = 0; i < matrix[0].length; i++) {
                for (int j = 0; j < matrix.length; j++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[i][j].equals(announce[k])) {
                            matrix_a[i][j] = 1;
                        } else {
                            matrix_a[i][j] = 0;
                        }
                        matrix_s[i][j] = matrix_s[i][j] + matrix_a[i][j];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int[] sum_v = new int[matrix.length];
            int sum_l = 0;
            int sum_r = 0;
            int bingo = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo = bingo + 1;
                        }
                    }
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo = bingo + 1;
                        }
                    }
                }
                sum_l = sum_l + matrix_s[i][matrix_s.length - i - 1];
                {
                    if (sum_l == matrix_s.length) {
                        bingo = bingo + 1;
                    }
                }
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo = bingo + 1;
                    }
                }
            }
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}

@3fd45581a559c23067b055c2862f5a39@"
"d04631001","0","0","0","@e9b7ff242837bc21f855f71a12568f04@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(""input.txt""))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            String[] temp = new String[num];
            for (int x = 0; x < matrix[0].length; x++) {
                temp = br.readLine().split("","");
                for (int y = 0; y < matrix.length; y++) {
                    matrix[x][y] = temp[y];
                }
            }
            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int a = 0; a < matrix[0].length; a++) {
                for (int b = 0; b < matrix.length; b++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[a][b].equals(announce[k])) {
                            matrix_a[a][b] = 1;
                        } else {
                            matrix_a[a][b] = 0;
                        }
                        matrix_s[a][b] = matrix_s[a][b] + matrix_a[a][b];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int[] sum_v = new int[matrix.length];
            int sum_l = 0;
            int sum_r = 0;
            int bingo = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo = bingo + 1;
                        }
                    }
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo = bingo + 1;
                        }
                    }
                }
                sum_l = sum_l + matrix_s[i][matrix_s.length - i - 1];
                {
                    if (sum_l == matrix_s.length) {
                        bingo = bingo + 1;
                    }
                }
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo = bingo + 1;
                    }
                }
            }
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}

@e9b7ff242837bc21f855f71a12568f04@"
"d04631001","10","0.096","105488","@520d99f3f2360e060517328c9a64e663@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");
            int stringCount = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            announce = br.readLine().split("","");
            String[] temp = new String[num];
            for (int x = 0; x < matrix[0].length; x++) {
                temp = br.readLine().split("","");
                for (int y = 0; y < matrix.length; y++) {
                    matrix[x][y] = temp[y];
                }
            }
            int[][] matrix_a = new int[matrix[0].length][matrix.length];
            int[][] matrix_s = new int[matrix[0].length][matrix.length];
            for (int a = 0; a < matrix[0].length; a++) {
                for (int b = 0; b < matrix.length; b++) {
                    for (int k = 0; k < announce.length; k++) {
                        if (matrix[a][b].equals(announce[k])) {
                            matrix_a[a][b] = 1;
                        } else {
                            matrix_a[a][b] = 0;
                        }
                        matrix_s[a][b] = matrix_s[a][b] + matrix_a[a][b];
                    }
                }
            }
            int[] sum_h = new int[matrix.length];
            int[] sum_v = new int[matrix.length];
            int sum_l = 0;
            int sum_r = 0;
            int bingo = 0;
            for (int i = 0; i < matrix_s.length; i++) {
                for (int j = 0; j < matrix_s.length; j++) {
                    sum_h[i] = sum_h[i] + matrix_s[i][j];
                    {
                        if (sum_h[i] == matrix_s.length) {
                            bingo = bingo + 1;
                        }
                    }
                    sum_v[i] = sum_v[i] + matrix_s[j][i];
                    {
                        if (sum_v[i] == matrix_s.length) {
                            bingo = bingo + 1;
                        }
                    }
                }
                sum_l = sum_l + matrix_s[i][matrix_s.length - i - 1];
                {
                    if (sum_l == matrix_s.length) {
                        bingo = bingo + 1;
                    }
                }
                sum_r = sum_r + matrix_s[i][i];
                {
                    if (sum_r == matrix_s.length) {
                        bingo = bingo + 1;
                    }
                }
            }
            String bingo2 = String.valueOf(bingo);
            System.out.printf(""%s\n"", bingo2);
        }
    }
}
@520d99f3f2360e060517328c9a64e663@"
"r04631013","0","0","0","@fab6060cca3e5f6a517a8eca8b89975c@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""args[0]""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
 
            String[] called = br.readLine().split("",""); //called countries
            for (int i = 0; i < num; i++) {      //matrix countries depends on the given size
            String[] row = br.readLine().split("","");
            matrix[i] = row;
            }
            for (int i = 0; i < stringCount ; i++){
                for (int j = 0; j < num ; j++){
                    for (int k = 0; k < num ; k++){
                        if  (called[i].compareTo(matrix[j][k])==0) {
                          matrix[j][k] = ""check"";
                        } 
                    }
                }
            }
            String z = ""check"";
            int line = 0;
            for (int i = 0; i < num ; i++){
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[i][j])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            }
            
            for (int i = 0; i < num ; i++){
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[j][i])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            }
               
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[j][j])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
                
                count = 0;
                for (int j = 0; j < num ; j++){
                    int k = num - 1 - j; 
                  if (z.compareTo(matrix[j][k])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            
         System.out.printf(""%d\n"",line);
            
    

//         for (int i = 0; i < matrix.length; i++) {
//         for (int j = 0; j < matrix[0].length; j++) {
//                System.out.print(matrix[i][j] + "" "");
//            }
//                System.out.print(""\n"");
//         }

              
              
              
              
              
              
              
           //System.out.printf(""lalala %s %s %s\n"",matrix[2]);
            
           
            
            
         
            
     
        
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }


}

@fab6060cca3e5f6a517a8eca8b89975c@"
"r04631013","0","0","0","@418ff60404cee57fd600f980f23026ab@package test1;

import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
 
            String[] called = br.readLine().split("",""); //called countries
            for (int i = 0; i < num; i++) {      //matrix countries depends on the given size
            String[] row = br.readLine().split("","");
            matrix[i] = row;
            }
            for (int i = 0; i < stringCount ; i++){
                for (int j = 0; j < num ; j++){
                    for (int k = 0; k < num ; k++){
                        if  (called[i].compareTo(matrix[j][k])==0) {
                          matrix[j][k] = ""check"";
                        } 
                    }
                }
            }
            String z = ""check"";
            int line = 0;
            for (int i = 0; i < num ; i++){
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[i][j])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            }
            
            for (int i = 0; i < num ; i++){
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[j][i])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            }
               
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[j][j])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
                
                count = 0;
                for (int j = 0; j < num ; j++){
                    int k = num - 1 - j; 
                  if (z.compareTo(matrix[j][k])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            
         System.out.printf(""lalala %d\n"",line);
            
    

//         for (int i = 0; i < matrix.length; i++) {
//         for (int j = 0; j < matrix[0].length; j++) {
//                System.out.print(matrix[i][j] + "" "");
//            }
//                System.out.print(""\n"");
//         }

              
              
              
              
              
              
              
           //System.out.printf(""lalala %s %s %s\n"",matrix[2]);
            
           
            
            
         
            
     
        
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }


}

@418ff60404cee57fd600f980f23026ab@"
"r04631013","0","0","0","@86b0e43f19ac93c15fe73817d901ad12@package test1;

import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
 
            String[] called = br.readLine().split("",""); //called countries
            for (int i = 0; i < num; i++) {      //matrix countries depends on the given size
            String[] row = br.readLine().split("","");
            matrix[i] = row;
            }
            for (int i = 0; i < stringCount ; i++){
                for (int j = 0; j < num ; j++){
                    for (int k = 0; k < num ; k++){
                        if  (called[i].compareTo(matrix[j][k])==0) {
                          matrix[j][k] = ""check"";
                        } 
                    }
                }
            }
            String z = ""check"";
            int line = 0;
            for (int i = 0; i < num ; i++){
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[i][j])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            }
            
            for (int i = 0; i < num ; i++){
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[j][i])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            }
               
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[j][j])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
                
                count = 0;
                for (int j = 0; j < num ; j++){
                    int k = num - 1 - j; 
                  if (z.compareTo(matrix[j][k])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            
         System.out.printf(""%d\n"",line);
            
    

//         for (int i = 0; i < matrix.length; i++) {
//         for (int j = 0; j < matrix[0].length; j++) {
//                System.out.print(matrix[i][j] + "" "");
//            }
//                System.out.print(""\n"");
//         }

              
              
              
              
              
              
              
           //System.out.printf(""lalala %s %s %s\n"",matrix[2]);
            
           
            
            
         
            
     
        
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }


}

@86b0e43f19ac93c15fe73817d901ad12@"
"r04631013","10","0.097","106912","@83735cffb87ddd3fee8a4b518a64f865@





import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
 
            String[] called = br.readLine().split("",""); //called countries
            for (int i = 0; i < num; i++) {      //matrix countries depends on the given size
            String[] row = br.readLine().split("","");
            matrix[i] = row;
            }
            for (int i = 0; i < stringCount ; i++){
                for (int j = 0; j < num ; j++){
                    for (int k = 0; k < num ; k++){
                        if  (called[i].compareTo(matrix[j][k])==0) {
                          matrix[j][k] = ""check"";
                        } 
                    }
                }
            }
            String z = ""check"";
            int line = 0;
            for (int i = 0; i < num ; i++){
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[i][j])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            }
            
            for (int i = 0; i < num ; i++){
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[j][i])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            }
               
                int count = 0;
                for (int j = 0; j < num ; j++){
                  if (z.compareTo(matrix[j][j])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
                
                count = 0;
                for (int j = 0; j < num ; j++){
                    int k = num - 1 - j; 
                  if (z.compareTo(matrix[j][k])!=0)  {
                      break;}
                  else{
                      count = count + 1;
                  }
                }
                if (count == num){
                    line = line + 1;    
                }
            
         System.out.printf(""%d\n"",line);
            
    

//         for (int i = 0; i < matrix.length; i++) {
//         for (int j = 0; j < matrix[0].length; j++) {
//                System.out.print(matrix[i][j] + "" "");
//            }
//                System.out.print(""\n"");
//         }

              
              
              
              
              
              
              
           //System.out.printf(""lalala %s %s %s\n"",matrix[2]);
            
           
            
            
         
            
     
        
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }


}

@83735cffb87ddd3fee8a4b518a64f865@"
"r04631021","0","1.22","110960","@a14de6f9926c58ca7bdd2c681e79c895@import java.io.*;
import java.util.Scanner;
/**
 *
 * @author 林康維
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        File file = new File(args[0]);
        try{
            Scanner File_in = new Scanner(file);
            String data = File_in.nextLine();
            String[] Nums = data.split("","");
            System.out.println( Nums[0]+Nums[1] );
        //Scanner sc = new Scanner(new File(""input.txt""));
		// read a line and split by ','
            
            
            
            String data2 = File_in.nextLine();
            String[] announce = data2.split("","");
            System.out.println( announce[0]+announce[1]);
            
            int LineIndex = 0 ;
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(Nums[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(Nums[1]);
            
            int [][] jumbo = new int[num][num];
            
            while(File_in.hasNextLine()){
                String data3 = File_in.nextLine();
                String[] mat = data3.split("","");
                for(int i=0 ; i<num  ; i++){
                    for(int j = 0 ; j < stringCount  ;j++){
                    if(mat[i].equalsIgnoreCase(announce[j])){
                        jumbo[LineIndex][i] = 1 ;
                    }
                }
            }
                LineIndex +=1 ;
            }
            // initilization of a String array in Java

for(int i=0;i<num;i++){
    for(int j=0;j<num;j++){
        System.out.println(jumbo[i][j]);
    }
}

			int line = 0 ;
			

            // for(int x = 0 ; x < num ; x++){
				// for(int y = 0 ; y <num ; y++){
					// System.out.println(jumbo[x][y]) ;
				// }
			// }
			for (int k = 0 ; k < num ; k++){
				int count = 0 ;
				for (int l = 0 ; l < num ; l++){
					count += jumbo [k][l] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			for (int m = 0 ; m < num ; m++){
				int count = 0 ;
				for (int n = 0 ; n < num ; n++){
					count += jumbo [n][m] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			int count1 = 0 ;
			int count2 = 0 ;
			int p = 0 ;
			int q = num - 1  ;
			while (p < num){
				count1 += jumbo[p][p] ;
				p += 1 ;
			}
			if (count1 == num){
				line += 1 ;
			}
			while (q >= 0){
				count2 += jumbo[q][q] ;
				q -= 1 ;
			}
			if (count2 == num){
				line += 1;
			}	
        
                        		    System.out.println(line);
        }
                        
        catch(IOException e){
            System.out.println(""error!""); 
        }
    }
}
    


@a14de6f9926c58ca7bdd2c681e79c895@"
"r04631021","0","1.25","111072","@a14de6f9926c58ca7bdd2c681e79c895@import java.io.*;
import java.util.Scanner;
/**
 *
 * @author 林康維
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        File file = new File(args[0]);
        try{
            Scanner File_in = new Scanner(file);
            String data = File_in.nextLine();
            String[] Nums = data.split("","");
            System.out.println( Nums[0]+Nums[1] );
        //Scanner sc = new Scanner(new File(""input.txt""));
		// read a line and split by ','
            
            
            
            String data2 = File_in.nextLine();
            String[] announce = data2.split("","");
            System.out.println( announce[0]+announce[1]);
            
            int LineIndex = 0 ;
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(Nums[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(Nums[1]);
            
            int [][] jumbo = new int[num][num];
            
            while(File_in.hasNextLine()){
                String data3 = File_in.nextLine();
                String[] mat = data3.split("","");
                for(int i=0 ; i<num  ; i++){
                    for(int j = 0 ; j < stringCount  ;j++){
                    if(mat[i].equalsIgnoreCase(announce[j])){
                        jumbo[LineIndex][i] = 1 ;
                    }
                }
            }
                LineIndex +=1 ;
            }
            // initilization of a String array in Java

for(int i=0;i<num;i++){
    for(int j=0;j<num;j++){
        System.out.println(jumbo[i][j]);
    }
}

			int line = 0 ;
			

            // for(int x = 0 ; x < num ; x++){
				// for(int y = 0 ; y <num ; y++){
					// System.out.println(jumbo[x][y]) ;
				// }
			// }
			for (int k = 0 ; k < num ; k++){
				int count = 0 ;
				for (int l = 0 ; l < num ; l++){
					count += jumbo [k][l] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			for (int m = 0 ; m < num ; m++){
				int count = 0 ;
				for (int n = 0 ; n < num ; n++){
					count += jumbo [n][m] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			int count1 = 0 ;
			int count2 = 0 ;
			int p = 0 ;
			int q = num - 1  ;
			while (p < num){
				count1 += jumbo[p][p] ;
				p += 1 ;
			}
			if (count1 == num){
				line += 1 ;
			}
			while (q >= 0){
				count2 += jumbo[q][q] ;
				q -= 1 ;
			}
			if (count2 == num){
				line += 1;
			}	
        
                        		    System.out.println(line);
        }
                        
        catch(IOException e){
            System.out.println(""error!""); 
        }
    }
}
    


@a14de6f9926c58ca7bdd2c681e79c895@"
"r04631021","0","0","0","@6ac1f17bbfc4c44a44b1706f413a3a45@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.IOException;
import java.io.*;
import java.util.Scanner;
/**
 *
 * @author 林康維
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        File file = new File(args[0]);
        try{
            Scanner File_in = new Scanner(file);
            String data = File_in.nextLine();
            String[] Nums = data.split("","");
            //System.out.println( Nums[0]+Nums[1] );
        //Scanner sc = new Scanner(new File(""input.txt""));
		// read a line and split by ','
            
            
            
            String data2 = File_in.nextLine();
            String[] announce = data2.split("","");
            //System.out.println( announce[0]+announce[1]);
            
            int LineIndex = 0 ;
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(Nums[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(Nums[1]);
            
            int [][] jumbo = new int[num][num];
            
            while(File_in.hasNextLine()){
                String data3 = File_in.nextLine();
                String[] mat = data3.split("","");
                for(int i=0 ; i<num  ; i++){
                    for(int j = 0 ; j < stringCount  ;j++){
                    if(mat[i].equalsIgnoreCase(announce[j])){
                        jumbo[LineIndex][i] = 1 ;
                    }
                }
            }
                LineIndex +=1 ;
            }
            // initilization of a String array in Java

for(int i=0;i<num;i++){
    for(int j=0;j<num;j++){
        System.out.println(jumbo[i][j]);
    }
}

			int line = 0 ;
			

            // for(int x = 0 ; x < num ; x++){
				// for(int y = 0 ; y <num ; y++){
					// System.out.println(jumbo[x][y]) ;
				// }
			// }
			for (int k = 0 ; k < num ; k++){
				int count = 0 ;
				for (int l = 0 ; l < num ; l++){
					count += jumbo [k][l] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			for (int m = 0 ; m < num ; m++){
				int count = 0 ;
				for (int n = 0 ; n < num ; n++){
					count += jumbo [n][m] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			int count1 = 0 ;
			int count2 = 0 ;
			int p = 0 ;
			int q = num - 1  ;
			while (p < num){
				count1 += jumbo[p][p] ;
				p += 1 ;
			}
			if (count1 == num){
				line += 1 ;
			}
			while (q >= 0){
				count2 += jumbo[q][q] ;
				q -= 1 ;
			}
			if (count2 == num){
				line += 1;
			}	
        
                        		    System.out.println(line);
        }
                        
        catch(IOException e){
            System.out.println(""error!""); 
        }
    }
}
    


@6ac1f17bbfc4c44a44b1706f413a3a45@"
"r04631021","0","0","0","@1031c1441bb78a5171cde576cc14b0cc@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.IOException;
import java.io.*;
import java.util.Scanner;
/**
 *
 * @author 林康維
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        File file = new File(args[0]);
        try{
            Scanner File_in = new Scanner(file);
            String data = File_in.nextLine();
            String[] Nums = data.split("","");
            //System.out.println( Nums[0]+Nums[1] );
        //Scanner sc = new Scanner(new File(""input.txt""));
		// read a line and split by ','
            
            
            
            String data2 = File_in.nextLine();
            String[] announce = data2.split("","");
            //System.out.println( announce[0]+announce[1]);
            
            int LineIndex = 0 ;
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(Nums[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(Nums[1]);
            
            int [][] jumbo = new int[num][num];
            
            while(File_in.hasNextLine()){
                String data3 = File_in.nextLine();
                String[] mat = data3.split("","");
                for(int i=0 ; i<num  ; i++){
                    for(int j = 0 ; j < stringCount  ;j++){
                    if(mat[i].equalsIgnoreCase(announce[j])){
                        jumbo[LineIndex][i] = 1 ;
                    }
                }
            }
                LineIndex +=1 ;
            }
            // initilization of a String array in Java

for(int i=0;i<num;i++){
    for(int j=0;j<num;j++){
    //    System.out.println(jumbo[i][j]);
    }
}

			int line = 0 ;
			

            // for(int x = 0 ; x < num ; x++){
				// for(int y = 0 ; y <num ; y++){
					// System.out.println(jumbo[x][y]) ;
				// }
			// }
			for (int k = 0 ; k < num ; k++){
				int count = 0 ;
				for (int l = 0 ; l < num ; l++){
					count += jumbo [k][l] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			for (int m = 0 ; m < num ; m++){
				int count = 0 ;
				for (int n = 0 ; n < num ; n++){
					count += jumbo [n][m] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			int count1 = 0 ;
			int count2 = 0 ;
			int p = 0 ;
			int q = num - 1  ;
			while (p < num){
				count1 += jumbo[p][p] ;
				p += 1 ;
			}
			if (count1 == num){
				line += 1 ;
			}
			while (q >= 0){
				count2 += jumbo[q][q] ;
				q -= 1 ;
			}
			if (count2 == num){
				line += 1;
			}	
        
                        		    System.out.println(line);
        }
                        
        catch(IOException e){
            System.out.println(""error!""); 
        }
    }
}
    


@1031c1441bb78a5171cde576cc14b0cc@"
"r04631006","9","0.98","105536","@fb60ba32c75ed07809938b12ad02227b@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
           
            String[] AAA= new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            AAA = br.readLine().split("","");
            int ann = stringCount;
            int who = 0;
            for (int m = 0; m < stringCount; m++) {
                for (int i = m + 1; i < stringCount; i++) {
                    if (AAA[m].equals(AAA[i])) {
                        ann = ann - 1;
                        who = i;
                    }
                }
            }
            String[] announce = new String[ann];
            
            if (who == 0) {
                announce = AAA;
            } else {
                for (int i = 0; i < ann; i++) {
                    if (i == who) {
                        i = i + 1;

                    } else {
                        announce[i] = AAA[i];
                    }
                    
                }
            }

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < ann; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1]) {
                            k = k + 1;

                            if (k == num - 1) {
                                a = a + 1;
                            }
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                            if (k == num - 1) {
                                a = a + 1;
                            }

                        }

                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                        if (k == num - 1) {
                            a = a + 1;
                        }

                    }
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j + 1][i] && bin[j][i] == 1) {
                        k = k + 1;
                        if (k == num - 1) {
                            a = a + 1;
                        }

                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@fb60ba32c75ed07809938b12ad02227b@"
"r04631021","0","0","0","@e27e966698812a65f9875f03e6123e78@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
import java.io.IOException;
import java.io.*;
import java.util.Scanner;
/**
 *
 * @author 林康維
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        File file = new File(args[0]);
        try{
            Scanner File_in = new Scanner(file);
            String data = File_in.nextLine();
            String[] Nums = data.split("","");
            //System.out.println( Nums[0]+Nums[1] );
        //Scanner sc = new Scanner(new File(""input.txt""));
		// read a line and split by ','
            
            
            
            String data2 = File_in.nextLine();
            String[] announce = data2.split("","");
            //System.out.println( announce[0]+announce[1]);
            
            int LineIndex = 0 ;
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(Nums[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(Nums[1]);
            
            int [][] jumbo = new int[num][num];
            
            while(File_in.hasNextLine()){
                String data3 = File_in.nextLine();
                String[] mat = data3.split("","");
                for(int i=0 ; i<num  ; i++){
                    for(int j = 0 ; j < stringCount  ;j++){
                        //System.out.println(mat[i]);
                    if(mat[i].equalsIgnoreCase(announce[j])){
                        jumbo[LineIndex][i] = 1 ;
                    }
                }
                          }
            LineIndex +=1 ;
            }
            
            
            // initilization of a String array in Java

for(int i=0;i<num;i++){
    for(int j=0;j<num;j++){
    
    }
}

			int line = 0 ;
			

            // for(int x = 0 ; x < num ; x++){
				// for(int y = 0 ; y <num ; y++){
					// System.out.println(jumbo[x][y]) ;
				// }
			// }
			for (int k = 0 ; k < num ; k++){
				int count = 0 ;
				for (int l = 0 ; l < num ; l++){
					count += jumbo [k][l] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			for (int m = 0 ; m < num ; m++){
				int count = 0 ;
				for (int n = 0 ; n < num ; n++){
					count += jumbo [n][m] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			int count1 = 0 ;
			int count2 = 0 ;
			int p = 0 ;
			int q = num - 1  ;
			while (p < num){
				count1 += jumbo[p][p] ;
				p += 1 ;
			}
			if (count1 == num){
				line += 1 ;
			}
			while (q >= 0){
				count2 += jumbo[q][q] ;
				q -= 1 ;
			}
			if (count2 == num){
				line += 1;
			}	
        
                        		    System.out.println(line);
        }
                        
        catch(IOException e){
            System.out.println(""error!""); 
        }
    }
}
    


@e27e966698812a65f9875f03e6123e78@"
"r04631021","7","1.29","110928","@c5cb605c329917757dcfa4b5eb6baae3@import java.io.IOException;
import java.io.*;
import java.util.Scanner;
/**
 *
 * @author 林康維
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        File file = new File(args[0]);
        try{
            Scanner File_in = new Scanner(file);
            String data = File_in.nextLine();
            String[] Nums = data.split("","");
            //System.out.println( Nums[0]+Nums[1] );
        //Scanner sc = new Scanner(new File(""input.txt""));
		// read a line and split by ','
            
            
            
            String data2 = File_in.nextLine();
            String[] announce = data2.split("","");
            //System.out.println( announce[0]+announce[1]);
            
            int LineIndex = 0 ;
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(Nums[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(Nums[1]);
            
            int [][] jumbo = new int[num][num];
            
            while(File_in.hasNextLine()){
                String data3 = File_in.nextLine();
                String[] mat = data3.split("","");
                for(int i=0 ; i<num  ; i++){
                    for(int j = 0 ; j < stringCount  ;j++){
                        //System.out.println(mat[i]);
                    if(mat[i].equalsIgnoreCase(announce[j])){
                        jumbo[LineIndex][i] = 1 ;
                    }
                }
                          }
            LineIndex +=1 ;
            }
            
            
            // initilization of a String array in Java

for(int i=0;i<num;i++){
    for(int j=0;j<num;j++){
    
    }
}

			int line = 0 ;
			

            // for(int x = 0 ; x < num ; x++){
				// for(int y = 0 ; y <num ; y++){
					// System.out.println(jumbo[x][y]) ;
				// }
			// }
			for (int k = 0 ; k < num ; k++){
				int count = 0 ;
				for (int l = 0 ; l < num ; l++){
					count += jumbo [k][l] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			for (int m = 0 ; m < num ; m++){
				int count = 0 ;
				for (int n = 0 ; n < num ; n++){
					count += jumbo [n][m] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			int count1 = 0 ;
			int count2 = 0 ;
			int p = 0 ;
			int q = num - 1  ;
			while (p < num){
				count1 += jumbo[p][p] ;
				p += 1 ;
			}
			if (count1 == num){
				line += 1 ;
			}
			while (q >= 0){
				count2 += jumbo[q][q] ;
				q -= 1 ;
			}
			if (count2 == num){
				line += 1;
			}	
        
                        		    System.out.println(line);
        }
                        
        catch(IOException e){
            System.out.println(""error!""); 
        }
    }
}
    


@c5cb605c329917757dcfa4b5eb6baae3@"
"r04945025","9","0.72","105088","@3aff39a1d93b9d9b36c674ad8718a1aa@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.HashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            HashSet<String> hash = new HashSet<String>();
            String[] data = br.readLine().split("","");
            int count = 0;
            int set = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            boolean[][] bingo = new boolean[num][num];
            boolean[][] result = new boolean[2 * num + 2][num];
            boolean[] cmp = new boolean[num];

            //Point2D point = new Point2D(2.1, 3.1);
            data = br.readLine().split("","");
            for(int i = 0; i < set; i++){
                if(!hash.contains(data[i])) hash.add(data[i]);
            }

            for(int i = 0; i < num; i++){
                data = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    if(hash.contains(data[j])) bingo[i][j] = true;
                }
            }

            for(int i = 0; i < num; i++){
                result[i] = bingo[i];
                for(int j = 0; j < num; j++) {
                    result[num + j][i] = bingo[i][j];
                    if(i == j){
                        result[2 * num][i] = bingo[i][i];
                    }
                    if(i + j == num - 1){
                        result[2 * num + 1][j] = bingo[i][j];
                    }
                }
            }

            /*for(int i = 0; i < 2 * num + 2; i++){
                if(i == num || i == 2*num){
                    System.err.printf(""-----------------------------------\n"");
                }
                for(int j = 0; j < num; j++){
                    System.err.printf(""%b\t"", result[i][j]);
                }
                System.err.printf(""\n"");
            }*/

            for(int i = 0; i < num; i++){
                cmp[i] = true;
            }

            for(int i = 0; i < num * 2 + 2; i++){
                if(Arrays.equals(cmp, result[i])) count++;
            }
            System.out.printf(""%d\n"", count);
        }
    }
}

@3aff39a1d93b9d9b36c674ad8718a1aa@"
"r04631021","7","1.23","110304","@c5cb605c329917757dcfa4b5eb6baae3@import java.io.IOException;
import java.io.*;
import java.util.Scanner;
/**
 *
 * @author 林康維
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        File file = new File(args[0]);
        try{
            Scanner File_in = new Scanner(file);
            String data = File_in.nextLine();
            String[] Nums = data.split("","");
            //System.out.println( Nums[0]+Nums[1] );
        //Scanner sc = new Scanner(new File(""input.txt""));
		// read a line and split by ','
            
            
            
            String data2 = File_in.nextLine();
            String[] announce = data2.split("","");
            //System.out.println( announce[0]+announce[1]);
            
            int LineIndex = 0 ;
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(Nums[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(Nums[1]);
            
            int [][] jumbo = new int[num][num];
            
            while(File_in.hasNextLine()){
                String data3 = File_in.nextLine();
                String[] mat = data3.split("","");
                for(int i=0 ; i<num  ; i++){
                    for(int j = 0 ; j < stringCount  ;j++){
                        //System.out.println(mat[i]);
                    if(mat[i].equalsIgnoreCase(announce[j])){
                        jumbo[LineIndex][i] = 1 ;
                    }
                }
                          }
            LineIndex +=1 ;
            }
            
            
            // initilization of a String array in Java

for(int i=0;i<num;i++){
    for(int j=0;j<num;j++){
    
    }
}

			int line = 0 ;
			

            // for(int x = 0 ; x < num ; x++){
				// for(int y = 0 ; y <num ; y++){
					// System.out.println(jumbo[x][y]) ;
				// }
			// }
			for (int k = 0 ; k < num ; k++){
				int count = 0 ;
				for (int l = 0 ; l < num ; l++){
					count += jumbo [k][l] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			for (int m = 0 ; m < num ; m++){
				int count = 0 ;
				for (int n = 0 ; n < num ; n++){
					count += jumbo [n][m] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			int count1 = 0 ;
			int count2 = 0 ;
			int p = 0 ;
			int q = num - 1  ;
			while (p < num){
				count1 += jumbo[p][p] ;
				p += 1 ;
			}
			if (count1 == num){
				line += 1 ;
			}
			while (q >= 0){
				count2 += jumbo[q][q] ;
				q -= 1 ;
			}
			if (count2 == num){
				line += 1;
			}	
        
                        		    System.out.println(line);
        }
                        
        catch(IOException e){
            System.out.println(""error!""); 
        }
    }
}
    


@c5cb605c329917757dcfa4b5eb6baae3@"
"r04631021","10","0.122","111056","@c6f6074b9e57bd03c98e90981d1c25a8@import java.io.IOException;
import java.io.*;
import java.util.Scanner;
/**
 *
 * @author 林康維
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        // TODO code application logic here
        File file = new File(args[0]);
        try{
            Scanner File_in = new Scanner(file);
            String data = File_in.nextLine();
            String[] Nums = data.split("","");
            //System.out.println( Nums[0]+Nums[1] );
        //Scanner sc = new Scanner(new File(""input.txt""));
		// read a line and split by ','
            
            
            
            String data2 = File_in.nextLine();
            String[] announce = data2.split("","");
            //System.out.println( announce[0]+announce[1]);
            
            int LineIndex = 0 ;
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(Nums[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(Nums[1]);
            
            int [][] jumbo = new int[num][num];
            
            while(File_in.hasNextLine()){
                String data3 = File_in.nextLine();
                String[] mat = data3.split("","");
                for(int i=0 ; i<num  ; i++){
                    for(int j = 0 ; j < stringCount  ;j++){
                        //System.out.println(mat[i]);
                    if(mat[i].equalsIgnoreCase(announce[j])){
                        jumbo[LineIndex][i] = 1 ;
                    }
                }
                          }
            LineIndex +=1 ;
            }
            
            
            // initilization of a String array in Java

for(int i=0;i<num;i++){
    for(int j=0;j<num;j++){
    
    }
}

			int line = 0 ;
			

            // for(int x = 0 ; x < num ; x++){
				// for(int y = 0 ; y <num ; y++){
					// System.out.println(jumbo[x][y]) ;
				// }
			// }
			for (int k = 0 ; k < num ; k++){
				int count = 0 ;
				for (int l = 0 ; l < num ; l++){
					count += jumbo [k][l] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			for (int m = 0 ; m < num ; m++){
				int count = 0 ;
				for (int n = 0 ; n < num ; n++){
					count += jumbo [n][m] ;					
				}
				if (count == num){
					line += 1 ;
				}
			}
			int count1 = 0 ;
			int count2 = 0 ;
			int p = 0 ;
			int q = num -1;
                     int qq = 0 ;
			while (p < num){
				count1 += jumbo[p][p] ;
				p += 1 ;
			}
			if (count1 == num){
				line += 1 ;
			}
			while (q >= 0){                            
				
			     count2 += jumbo[qq][q] ;
                          qq += 1 ;
			     q -= 1 ;
                        }
			if (count2 == num){
				line += 1;
			}	
        
                        		    System.out.println(line);
        }
                        
        catch(IOException e){
            System.out.println(""error!""); 
        }
    }
}
    


@c6f6074b9e57bd03c98e90981d1c25a8@"
"r04631004","0","0.88","105488","@b5c4415069bd7c0b707e4803b0dbeb4a@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
          //  System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
                                 
            data = br.readLine().split("",""); //read second line
            
            int i,j,k;
            for(i=0;i<data.length;i++)  //bingo announce
                announce[i]=data[i];    
            
            int[][] bingocheck = new int[num][num];
            
            int tempcount=1;
            for(i=0;i<num;i++)   //bingo element
                for(j=0;j<num;j++)
                {
                    if(i!=tempcount)
                    {
                        data = br.readLine().split("","");  //read bingo element
                        tempcount=i;
                    }
                    matrix[i][j]=data[j];
                    //System.out.println(data.length);
                    for(k=0;k<stringCount;k++)
                        if(matrix[i][j].equals(announce[k])==true)
                        {
                            bingocheck[i][j]=1;
                            break;
                        }
                            
//                    if(j==num-1)
//                        System.out.println(bingocheck[i][j]);
//                    else
//                        System.out.print(bingocheck[i][j]+"" "");
                }
            
            int tempnum=num;
            int bingoline=2*num+2;
            int rowlinecheck=0,collinecheck=0,rightdialinecheck=0,leftdialinecheck=0;
            for(i=0;i<num;i++)   //check num of bingoline
                for(j=0;j<num;j++)
                {
                    if(bingocheck[i][j]!=1 && rowlinecheck==0)  //check rowline
                    {
                        bingoline=bingoline-1;
                        rowlinecheck=1;
                    }
                    if(bingocheck[j][i]!=1 && collinecheck==0)  //check colline
                    {
                        bingoline=bingoline-1;
                        collinecheck=1;
                    }
                    if(i==j && bingocheck[j][i]!=1 && rightdialinecheck==0)  //check right-dialine
                    {
                        bingoline=bingoline-1;
                        rightdialinecheck=1;
                    }
                    if(i+j==num-1 && (bingocheck[j][i]!=1 || bingocheck[i][j]!=1) && leftdialinecheck==0)  //check left-dialine
                    {
                        bingoline=bingoline-1;
                        leftdialinecheck=1;
                    }
                    if(j==num-1)
                    {
                        rowlinecheck=0;
                        collinecheck=0;
                    }
                }
            System.out.println(bingoline);
           
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

back return to list
@b5c4415069bd7c0b707e4803b0dbeb4a@"
"r04631004","10","0.08","104512","@27b6020d2f5bed0019d90312ae639a45@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
          //  System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
                                 
            data = br.readLine().split("",""); //read second line
            
            int i,j,k;
            for(i=0;i<data.length;i++)  //bingo announce
                announce[i]=data[i];    
            
            int[][] bingocheck = new int[num][num];
            
            int tempcount=1;
            for(i=0;i<num;i++)   //bingo element
                for(j=0;j<num;j++)
                {
                    if(i!=tempcount)
                    {
                        data = br.readLine().split("","");  //read bingo element
                        tempcount=i;
                    }
                    matrix[i][j]=data[j];
                    //System.out.println(data.length);
                    for(k=0;k<stringCount;k++)
                        if(matrix[i][j].equals(announce[k])==true)
                        {
                            bingocheck[i][j]=1;
                            break;
                        }
                            
//                    if(j==num-1)
//                        System.out.println(bingocheck[i][j]);
//                    else
//                        System.out.print(bingocheck[i][j]+"" "");
                }
            
            int tempnum=num;
            int bingoline=2*num+2;
            int rowlinecheck=0,collinecheck=0,rightdialinecheck=0,leftdialinecheck=0;
            for(i=0;i<num;i++)   //check num of bingoline
                for(j=0;j<num;j++)
                {
                    if(bingocheck[i][j]!=1 && rowlinecheck==0)  //check rowline
                    {
                        bingoline=bingoline-1;
                        rowlinecheck=1;
                    }
                    if(bingocheck[j][i]!=1 && collinecheck==0)  //check colline
                    {
                        bingoline=bingoline-1;
                        collinecheck=1;
                    }
                    if(i==j && bingocheck[j][i]!=1 && rightdialinecheck==0)  //check right-dialine
                    {
                        bingoline=bingoline-1;
                        rightdialinecheck=1;
                    }
                    if(i+j==num-1 && (bingocheck[j][i]!=1 || bingocheck[i][j]!=1) && leftdialinecheck==0)  //check left-dialine
                    {
                        bingoline=bingoline-1;
                        leftdialinecheck=1;
                    }
                    if(j==num-1)
                    {
                        rowlinecheck=0;
                        collinecheck=0;
                    }
                }
            System.out.println(bingoline);
           
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}
@27b6020d2f5bed0019d90312ae639a45@"
"b03704074","10","0.088","105280","@c745bf3f5dea71d88f798ec377a5f5ba@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package test1;

/**
 *
 * @author US
 */
import java.io.FileReader;
import java.io.BufferedReader;
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        //System.out.println(""Hello!World!"");
       try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
           
        String[] data = br.readLine().split("","");
       
        int stringCount = Integer.parseInt(data[0]);//有幾個目標國家
        int num = Integer.parseInt(data[1]);//幾乘幾
        
        String[] announce = new String[stringCount];//列出目標國家
        String[][] matrix = new String[num][num];//列出陣列
        String[] convert = new String[num];
        announce=br.readLine().split("","");
        
        
        for(int i=0;i<num;i++)
        {convert=br.readLine().split("","");
            for(int j=0;j< num;j++)
                    matrix[i][j]=convert[j];
        }
         
                int count=0;
                for (int i = 0; i < num; i++)
                {    int littlecount=0;
                    //System.out.println(""i=""+i);
                     for(int j=0;j< num;j++)
                    {//System.out.println(""j=""+j);
                        for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[i][j].equals(announce[m])) 
                                {
                            littlecount++;
                            break;
                            }
                        }
                    if(littlecount==num)
                        count++;
                    } 
                }
                
                
                for (int i = 0; i < num; i++)
                {   int littlecount=0;
                     for(int j=0;j< num;j++)
                    {
                        for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[j][i].equals(announce[m]))
                             {
                            littlecount++;
                            break;
                            }
                        } 
                    if(littlecount==num)
                        count++;
                    } 
                }
                int littlecount=0;
                for (int i=0; i < num; i++)
                { 
                    for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[i][i].equals(announce[m]) )
                            {
                            littlecount++;
                            break;
                            }
                        }
                    if(littlecount==num)
                        count++;
                }
                
                littlecount=0;
                for (int i=0; i < num; i++)
                {   
                    for (int m = 0; m < stringCount; m++)
                        {
                            if(matrix[i][num-i-1].equals(announce[m]) )
                            {
                            littlecount++;
                            break;
                            }
                            
                        }
                    if(littlecount==num)
                        count++;
                }
                System.out.println(count);
                
            
        }
    }
    }





@c745bf3f5dea71d88f798ec377a5f5ba@"
"r04631031","10","0.082","104864","@7b7aa14c77d6f35ffc8a28fe29c6df5b@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            announce = br.readLine().split("","");
            //store Bingo announcement
            
            String[] temp = new String[num];
            for(int i = 0; i < num; i++){
                temp = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    matrix[i][j] = temp[j];
//                    System.out.printf(matrix[i][j]);
                }
            }
            //build Bingo matrix
            
            boolean[][] checkmatrix = new boolean[num][num];
            for(int i = 0; i < num; i++){
                for(int j = 0; j < num; j++){
                   for(int k = 0; k < stringCount; k++){
                       if(matrix[i][j].equals(announce[k])){
                           checkmatrix[i][j] = true;
                       }
                   }
                }
            }
            //build boolean checkmatrix
            
            int Countline = 0;
            int Countelement = 0;
            
            for(int i = 0; i < num; i++){
                for(int j = 0; j < num; j++){
                    if(checkmatrix[i][j]){
                        Countelement++;
                    }
                }
                if(Countelement == num){
                    Countline++;
                }            
                Countelement = 0;
            }
            //count the row line
            
            for(int j = 0; j < num; j++){
                for(int i = 0; i < num; i++){
                    if(checkmatrix[i][j]){
                        Countelement++;
                    }
                }
                if(Countelement == num){
                    Countline++;
                }
                Countelement = 0;
            }
            //count the column line
            
            int i = 0, j = 0;
            for(int c = 0; c < num; c++){
                if(checkmatrix[i][j]){
                    Countelement++;
                }
                i++;
                j++;
            }
            if(Countelement == num){
                    Countline++;
                }
            Countelement = 0;
            //count diagonal line (from left to right)
            
            i = 0; 
            j = num - 1;
            for(int c = 0; c < num; c++){
                if(checkmatrix[i][j]){
                    Countelement++;
                }    
                i++;
                j--;
            }
            if(Countelement == num){
                    Countline++;
                }
            Countelement = 0;
            //count diagonal line (from right to left)
            System.out.printf(""%d"", Countline);
        }
    }
}

@7b7aa14c77d6f35ffc8a28fe29c6df5b@"
"r03631015","0","0.83","105440","@bfacf21157880f7d99e99f7730d9efe8@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            // read in tatrix
            announce = br.readLine().split("","");
            int i,j,k;
            for (i=0;i<num;i++){
                    matrix[i]=br.readLine().split("","");
            }
            //circle the target
            for (k=0;k<stringCount;k++){
                for (i=0;i<num;i++){
                    for (j=0;j<num;j++){
//                        System.out.printf(""(%s,%s)"",matrix[i][j],announce[k]);
                        if (matrix[i][j].equals(announce[k])){
                            matrix[i][j]=""true"";
                            System.out.printf(""(%d,%d)"",i,j);
                        }
                    }
                }
            }
            
            //count lines
            System.out.printf(""\n"");
            int times;
            int lines=0;
            for (i=0;i<num;i++){
                    times=0;
                    for (j=0;j<num;j++){
                        if(matrix[i][j] !=""true"")
                            break;
                        else
                            times++;
                        if(matrix[i][j]==""true"" && j==num-1)
                            lines ++;
                    }
            }
            for (i=0;i<num;i++){
                    times=0;
                    for (j=0;j<num;j++){
                        if(matrix[j][i] !=""true"")
                            break;
                        else
                            times++;
                        if(matrix[j][i]==""true"" && j==num-1)
                            lines ++;
                    }
            }
            times=0;
            for (i=0;i<num;i++){
                j=i;
                if(matrix[i][j] !=""true"")
                    break;
                else
                    times++;
                if(matrix[i][j]==""true"" && i==num-1)
                    lines ++;
            }
            times=0;
            for (i=0;i<num;i++){
                j=num-i-2;
                if(matrix[i][j] !=""true"")
                    break;
                else
                    times++;
                if(matrix[i][j]==""true"" && i==num-1)
                    lines ++;
            }
            
            System.out.printf(""%d"",lines);
                        
                               
                            
                    
             
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@bfacf21157880f7d99e99f7730d9efe8@"
"r03631015","7","0.64","103616","@588c9dbb7ede21b243e14c98698a0702@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            // read in tatrix
            announce = br.readLine().split("","");
            int i,j,k;
            for (i=0;i<num;i++){
                    matrix[i]=br.readLine().split("","");
            }
            //circle the target
            for (k=0;k<stringCount;k++){
                for (i=0;i<num;i++){
                    for (j=0;j<num;j++){
//                        System.out.printf(""(%s,%s)"",matrix[i][j],announce[k]);
                        if (matrix[i][j].equals(announce[k])){
                            matrix[i][j]=""true"";
//                            System.out.printf(""(%d,%d)"",i,j);
                        }
                    }
                }
            }
            
            //count lines
//            System.out.printf(""\n"");
            int times;
            int lines=0;
            for (i=0;i<num;i++){
                    times=0;
                    for (j=0;j<num;j++){
                        if(matrix[i][j] !=""true"")
                            break;
                        else
                            times++;
                        if(matrix[i][j]==""true"" && j==num-1)
                            lines ++;
                    }
            }
            for (i=0;i<num;i++){
                    times=0;
                    for (j=0;j<num;j++){
                        if(matrix[j][i] !=""true"")
                            break;
                        else
                            times++;
                        if(matrix[j][i]==""true"" && j==num-1)
                            lines ++;
                    }
            }
            times=0;
            for (i=0;i<num;i++){
                j=i;
                if(matrix[i][j] !=""true"")
                    break;
                else
                    times++;
                if(matrix[i][j]==""true"" && i==num-1)
                    lines ++;
            }
            times=0;
            for (i=0;i<num;i++){
                j=num-i-2;
                if(matrix[i][j] !=""true"")
                    break;
                else
                    times++;
                if(matrix[i][j]==""true"" && i==num-1)
                    lines ++;
            }
            
            System.out.printf(""%d"",lines);
                        
                               
                            
                    
             
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@588c9dbb7ede21b243e14c98698a0702@"
"r03631015","10","0.095","104560","@99bdc47261cc69108f362583ac18d411@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
//            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            // read in tatrix
            announce = br.readLine().split("","");
            int i,j,k;
            for (i=0;i<num;i++){
                    matrix[i]=br.readLine().split("","");
            }
            //circle the target
            for (k=0;k<stringCount;k++){
                for (i=0;i<num;i++){
                    for (j=0;j<num;j++){
//                        System.out.printf(""(%s,%s)"",matrix[i][j],announce[k]);
                        if (matrix[i][j].equals(announce[k])){
                            matrix[i][j]=""true"";
//                            System.out.printf(""(%d,%d)"",i,j);
                        }
                    }
                }
            }
            
            //count lines
//            System.out.printf(""\n"");
            int times;
            int lines=0;
            for (i=0;i<num;i++){
                    times=0;
                    for (j=0;j<num;j++){
                        if(matrix[i][j] !=""true"")
                            break;
                        else
                            times++;
                        if(matrix[i][j]==""true"" && j==num-1)
                            lines ++;
                    }
            }
            for (i=0;i<num;i++){
                    times=0;
                    for (j=0;j<num;j++){
                        if(matrix[j][i] !=""true"")
                            break;
                        else
                            times++;
                        if(matrix[j][i]==""true"" && j==num-1)
                            lines ++;
                    }
            }
            times=0;
            for (i=0;i<num;i++){
                j=i;
                if(matrix[i][j] !=""true"")
                    break;
                else
                    times++;
                if(matrix[i][j]==""true"" && i==num-1)
                    lines ++;
            }
            times=0;
            for (i=0;i<num;i++){
                j=num-i-1;
                if(matrix[i][j] !=""true"")
                    break;
                else
                    times++;
                if(matrix[i][j]==""true"" && i==num-1)
                    lines ++;
            }
            
            System.out.printf(""%d"",lines);
                        
                               
                            
                    
             
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@99bdc47261cc69108f362583ac18d411@"
"r04631006","0","0.64","103616","@3446bba5b318670e05939b008c1057ef@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

           
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
@3446bba5b318670e05939b008c1057ef@"
"r04631006","9","0.83","104736","@2a5cc64411e9041f58ff5b91ab13f97c@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

           
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}
@2a5cc64411e9041f58ff5b91ab13f97c@"
"b99611017","4","1.19","110512","@29d707aed15828f3a2e213b596e26bc8@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.*;
//import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
 import java.util.Arrays;*/
//import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    /**
     *
     * @param args
     * @throws Exception
     */
    public static void main(String[] args) throws Exception {

        //InputStream is = null;
        //InputStreamReader isr = null;
        //BufferedReader br = null;
        try {
            InputStream is = new FileInputStream(args[0]);
            InputStreamReader isr = new InputStreamReader(is, ""UTF8"");
            BufferedReader br = new BufferedReader(isr);
            Scanner sn = new Scanner(br);
            StringBuilder buf = new StringBuilder();
            while (sn.hasNext()) {
                buf.append(sn.next()).append("","");

            }
            String str = buf.toString();

            String[] token = str.split("","");

            int annoucedNum = Integer.parseInt(token[0]);
            int size = Integer.parseInt(token[1]);
           // String announced; //儲存公布國名用
            String[][] countr = new String[size][size];   //賓果板
            int k = 2 + annoucedNum;                                    //以下配置賓果板
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    countr[i][j] = token[k];
                    k++;
                }
            }
            int[][] score = new int[size][size];      //紀錄賓果配對情況
            for (int i = 0; i < size; i++) //記分板歸零
            {
                for (int j = 0; j < size; j++) {
                    score[i][j] = 0;
                }
            }
            for (int i = annoucedNum; i < 2 + annoucedNum; i++) //開始劃記計分板
            {
                for (int j = 0; j < size; j++) {
                    for (int l = 0; l < size; l++) {
                        if (countr[j][l].equals(token[i])) {
                            score[j][l]++;
                        }
                    }
                }
            }
            int lineNum = 0;
            int counter = 0;//儲存連線數量
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[i][j];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[j][i];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            int counter1 = 0;
            for (int i = 0; i < size; i++) {
                counter1 = counter1 + score[i][i];
            }
            if (counter1 == size) {
                lineNum++;
                  counter1=0;
            } else {
                  counter1=0;
            }
            int counter2 = 0;
            for (int i = 0; i < size; i++) {
                counter2 = counter2 + score[size - 1 - i][i];
            }
            if (counter2 == size) {
                lineNum++;
                 counter2=0;
            } else {
                                counter2=0;
            }
            /*
            
             System.out.println(""此文字檔為:"" + str);
             System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
             System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            is.close();
        } catch (RuntimeException e) {
            throw e;
        } /*catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }*/

    }

}

@29d707aed15828f3a2e213b596e26bc8@"
"r04631006","3","0.98","106128","@ee326436a80597e6ae60bd47a78a27c3@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }else{
                             bin[i][j] = 0;
                       }
                    }
                }
            }

           
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}
@ee326436a80597e6ae60bd47a78a27c3@"
"b99611017","10","0.121","110240","@fa10f6b74b179aebfdc859aedf88ecf3@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.*;
//import java.io.FileReader;
//import java.io.BufferedReader;
import java.util.Scanner;
/*import java.lang.String;
 import java.util.Arrays;*/
//import java.util.*;

/**
 *
 * @author 許志鵬
 */
public class Bingo {

    /**
     *
     * @param args
     * @throws Exception
     */
    public static void main(String[] args) throws Exception {

        //InputStream is = null;
        //InputStreamReader isr = null;
        //BufferedReader br = null;
        try {
            InputStream is = new FileInputStream(args[0]);
            InputStreamReader isr = new InputStreamReader(is, ""UTF8"");
            BufferedReader br = new BufferedReader(isr);
            Scanner sn = new Scanner(br);
            StringBuilder buf = new StringBuilder();
            while (sn.hasNext()) {
                buf.append(sn.next()).append("","");

            }
            String str = buf.toString();

            String[] token = str.split("","");

            int annoucedNum = Integer.parseInt(token[0]);
            int size = Integer.parseInt(token[1]);
           // String announced; //儲存公布國名用
            String[][] countr = new String[size][size];   //賓果板
            int k = 2 + annoucedNum;                                    //以下配置賓果板
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    countr[i][j] = token[k];
                    k++;
                }
            }
            int[][] score = new int[size][size];      //紀錄賓果配對情況
            for (int i = 0; i < size; i++) //記分板歸零
            {
                for (int j = 0; j < size; j++) {
                    score[i][j] = 0;
                }
            }
            for (int i = 2; i < 2 + annoucedNum; i++) //開始劃記計分板
            {
                for (int j = 0; j < size; j++) {
                    for (int l = 0; l < size; l++) {
                        if (countr[j][l].equals(token[i])) {
                            score[j][l]=1;
                        }
                    }
                }
            }
            
            int lineNum = 0;
            int counter = 0;//儲存連線數量
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[i][j];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            for (int i = 0; i < size; i++) {
                for (int j = 0; j < size; j++) {
                    counter = counter + score[j][i];
                }
                if (counter == size) {
                    lineNum++;
                    counter = 0;
                } else {
                    counter = 0;
                }
            }
            int counter1 = 0;
            for (int i = 0; i < size; i++) {
                counter1 = counter1 + score[i][i];
            }
            if (counter1 == size) {
                lineNum++;
                  counter1=0;
            } else {
                  counter1=0;
            }
            int counter2 = 0;
            for (int i = 0; i < size; i++) {
                counter2 = counter2 + score[size - 1 - i][i];
            }
            if (counter2 == size) {
                lineNum++;
                 counter2=0;
            } else {
                                counter2=0;
            }
            /*
            
             System.out.println(""此文字檔為:"" + str);
             System.out.println(""已公布:"" + row2[0] + ""以及"" + row2[1] + ""共"" + announcedNum + ""個答案"");
             System.out.println(""陣列大小:"" + matrixLen + ""X"" + matrixLen);*/
            System.out.println(lineNum);
            is.close();
        } catch (RuntimeException e) {
            throw e;
        } /*catch (Exception e) {//Catch exception if any

            System.err.println(""Error: "" + e.getMessage());

        }*/

    }

}

@fa10f6b74b179aebfdc859aedf88ecf3@"
"r04631006","3","0.81","104704","@7d6db331004e2f6a272c32a11b3cd120@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
           
            String[] AAA= new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            AAA = br.readLine().split("","");
            int ann = stringCount;
            int who = 0;
            for (int m = 0; m < stringCount; m++) {
                for (int i = m + 1; i < stringCount; i++) {
                    if (AAA[m].equals(AAA[i])) {
                        ann = ann - 1;
                        who = i;
                    }
                }
            }
            String[] announce = new String[ann];
            
            if (who == 0) {
                announce = AAA;
            } else {
                for (int i = 0; i < ann; i++) {
                    if (i == who) {
                        i = i + 1;

                    } else {
                        announce[i] = AAA[i];
                    }
                    
                }
            }

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < ann; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }else{
                            bin[i][j] = 0;
                        }
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1]) {
                            k = k + 1;

                            if (k == num - 1) {
                                a = a + 1;
                            }
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                            if (k == num - 1) {
                                a = a + 1;
                            }

                        }

                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                        if (k == num - 1) {
                            a = a + 1;
                        }

                    }
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j + 1][i] && bin[j][i] == 1) {
                        k = k + 1;
                        if (k == num - 1) {
                            a = a + 1;
                        }

                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@7d6db331004e2f6a272c32a11b3cd120@"
"b03611038","7","0.91","105232","@bbbc1529e98db8c37cfe5bf844dfaf2d@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
            try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
          //try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
        
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][]matrix2= new int[num][num];
            
           announce = br.readLine().split("","");
           int i = 0;
           while(i<num){
           matrix[i] = br.readLine().split("","");
           i++;
           }
           int z=0;
           int j;
           int count=0;
           for(int x=0;x<num;x++)
           {
               for(int y=0;y<num;y++)
               {
                   z=0;
                   while(z<stringCount)
                   {
                   j = matrix[x][y].compareTo(announce[z]);
                   if(j==0)
                   {
                       matrix2[x][y]=1;
                       break;
                   }
                   else
                   {
                       matrix2[x][y]=0;
                   }
                   z++;
                   }
               }
           }
           
           int sum=0;
           for(int x=0;x<num;x++)
           {
                for(int y=0;y<num;y++)
               {
                 sum=sum+ matrix2[x][y];
               }
                if(sum==num)
                {
                    count++;
                }
                sum=0;
           }
            for(int y=0;y<num;y++)
           {
                for(int x=0;x<num;x++)
               {
                 sum=sum+ matrix2[x][y];
               }
                if(sum==num)
                {
                    count++;
                }
                sum=0;
           }
            int sum2=0;
            for(int x=0;x<num;x++)
            {
                sum=sum+ matrix2[x][num-x-1];
                sum2=sum2+matrix2[num-x-1][x];
            }
            if(sum==num)
            {
                count++;
            }
            if(sum2==num)
            {
                count++;
            }
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
System.out.println(count);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@bbbc1529e98db8c37cfe5bf844dfaf2d@"
"r04525016","0","0.81","104704","@f21a11b66a6c78d5be7660438dd1ff75@import java.io.BufferedReader;
import java.io.FileReader;


public class bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initialization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // read the rest content of the file
            String[] temp = br.readLine().split("","");

            // store the announce strings (2nd line of the file) in variable announce
            for(int i = 0; i < stringCount; i++){
                announce[i] = temp[i];
            }

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0; i < num; i++){
                String[] temp2 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    matrix[i][j] = temp2[j];
                }
            }

            // compare the matrix and announce strings (this is the tricky part)

            int count = 0;
            int count2 = 0;
            int count3 = 0;
            int count4 = 0;
            int straightLines = 0;

            for(String Announce:announce){
                for(int i = 0; i < num; i++){
                    for(int j = 0; j < num; j++){

                        if(matrix[i][j].equals(Announce)) count++;
                        if(matrix[j][i].equals(Announce)) count2++;

                        if(matrix[0][0].equals(Announce)){
                            if(matrix[j+1][j+1].equals(Announce)) count3++;
                        }
                        if(matrix[num-1][0].equals(Announce)){
                            if(matrix[j][num-1-j].equals(Announce)) count4++;
                        }
                    }
                    if(count == num) straightLines++;
                    if(count2 == num) straightLines++;

                    count = 0;
                    count2 = 0;

                }
                if(count3 == num)straightLines++;
                if(count4 == num)straightLines++;
            }

            if(count3 == num) straightLines++;
            if(count4 == num) straightLines++;

            //output how many 'straight line' are there in the matrix
            System.out.println(straightLines);

        }
    }
}
@f21a11b66a6c78d5be7660438dd1ff75@"
"r04525016","0","0.45","105184","@958ac79ddbef1a743190ee91b127a971@import java.io.BufferedReader;
import java.io.FileReader;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initialization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // read the rest content of the file
            String[] temp = br.readLine().split("","");

            // store the announce strings (2nd line of the file) in variable announce
            for(int i = 0; i < stringCount; i++){
                announce[i] = temp[i];
            }

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0; i < num; i++){
                String[] temp2 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    matrix[i][j] = temp2[j];
                }
            }

            // compare the matrix and announce strings (this is the tricky part)

            int count = 0;
            int count2 = 0;
            int count3 = 0;
            int count4 = 0;
            int straightLines = 0;

            for(String Announce:announce){
                for(int i = 0; i < num; i++){
                    for(int j = 0; j < num; j++){

                        if(matrix[i][j].equals(Announce)) count++;
                        if(matrix[j][i].equals(Announce)) count2++;

                        if(matrix[0][0].equals(Announce)){
                            if(matrix[j+1][j+1].equals(Announce)) count3++;
                        }
                        if(matrix[num-1][0].equals(Announce)){
                            if(matrix[j][num-1-j].equals(Announce)) count4++;
                        }
                    }
                    if(count == num) straightLines++;
                    if(count2 == num) straightLines++;

                    count = 0;
                    count2 = 0;

                }
                if(count3 == num)straightLines++;
                if(count4 == num)straightLines++;
            }

            if(count3 == num) straightLines++;
            if(count4 == num) straightLines++;

            //output how many 'straight line' are there in the matrix
            System.out.println(straightLines);

        }
    }
}
@958ac79ddbef1a743190ee91b127a971@"
"r03522826","10","0.092","105200","@383f0d0fc0298ba4c324341a877be341@import java.io.FileReader;
import java.io.BufferedReader;
//import java.io.FileNotFoundException;
//import java.io.IOException;
/**
 *
 * @author LAB104
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        int MAX = 50;
        //String str1;
        String [] data = new String[MAX];
        FileReader fr = new FileReader(args[0]);
        BufferedReader bfr = new BufferedReader(fr);
        
        data = bfr.readLine().split("","");
        
        int stringCount = Integer.parseInt(data[0]);
        int num = Integer.parseInt(data[1]);
        
        try
        {
            if((stringCount<2)||(num < 2))
                throw new ArithmeticException();
            
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int [][] Check = new int[num][num];
            String[] str2 = new String[num];
        
            announce = bfr.readLine().split("","");
        
            for(int i = 0; i < num; i++)
            {
                str2 = bfr.readLine().split("","");
                matrix[i]= str2;
            }
            
            for (int i =0; i < num; i++)
            {
                for (int j = 0; j < num; j++)
                {
                    for (int k =0; k < stringCount; k++)
                    {
                        if(matrix[i][j].equals(announce[k]))
                          Check[i][j] += 1;
                    }
                }
            }
            int counter = 0;
            int [] r1 = new int [num];
            int [] c1 = new int [num];
            int [] d1 = new int [2];
            for(int i =0; i < num; i++)
            {
                for (int j = 0; j < num; j++)
                {
                    r1[i] += Check[i][j];
                    c1[i] += Check[j][i];
                    if(i==j)
                    {
                        d1[0]+=Check[i][j];
                        d1[1]+=Check[i][num-1-j];
                    }
                }
            }
            
            for (int i = 0; i < num; i++)
            {
                if(r1[i]==num)
                    counter++;
                if(c1[i]==num)
                    counter++;
                if(i < 2)
                {
                   if(d1[i]==num)
                       counter++;
                }
            }
           
            /**System.out.println(r1[0]);
              *System.out.println(r1[1]);
              *System.out.println(r1[2]);
              *
              *System.out.println(c1[0]);
              *System.out.println(c1[1]);
              *System.out.println(c1[2]);
              *
              *
              *System.out.println(d1[0]);
              *System.out.println(d1[1]); **/
         
            
            System.out.println(counter);
        }
        catch(ArithmeticException e)
        {
            System.out.println(e+"" throwed!"");
        }
       
    }
    
}
@383f0d0fc0298ba4c324341a877be341@"
"r03522831","10","0.091","105232","@383f0d0fc0298ba4c324341a877be341@import java.io.FileReader;
import java.io.BufferedReader;
//import java.io.FileNotFoundException;
//import java.io.IOException;
/**
 *
 * @author LAB104
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        int MAX = 50;
        //String str1;
        String [] data = new String[MAX];
        FileReader fr = new FileReader(args[0]);
        BufferedReader bfr = new BufferedReader(fr);
        
        data = bfr.readLine().split("","");
        
        int stringCount = Integer.parseInt(data[0]);
        int num = Integer.parseInt(data[1]);
        
        try
        {
            if((stringCount<2)||(num < 2))
                throw new ArithmeticException();
            
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int [][] Check = new int[num][num];
            String[] str2 = new String[num];
        
            announce = bfr.readLine().split("","");
        
            for(int i = 0; i < num; i++)
            {
                str2 = bfr.readLine().split("","");
                matrix[i]= str2;
            }
            
            for (int i =0; i < num; i++)
            {
                for (int j = 0; j < num; j++)
                {
                    for (int k =0; k < stringCount; k++)
                    {
                        if(matrix[i][j].equals(announce[k]))
                          Check[i][j] += 1;
                    }
                }
            }
            int counter = 0;
            int [] r1 = new int [num];
            int [] c1 = new int [num];
            int [] d1 = new int [2];
            for(int i =0; i < num; i++)
            {
                for (int j = 0; j < num; j++)
                {
                    r1[i] += Check[i][j];
                    c1[i] += Check[j][i];
                    if(i==j)
                    {
                        d1[0]+=Check[i][j];
                        d1[1]+=Check[i][num-1-j];
                    }
                }
            }
            
            for (int i = 0; i < num; i++)
            {
                if(r1[i]==num)
                    counter++;
                if(c1[i]==num)
                    counter++;
                if(i < 2)
                {
                   if(d1[i]==num)
                       counter++;
                }
            }
           
            /**System.out.println(r1[0]);
              *System.out.println(r1[1]);
              *System.out.println(r1[2]);
              *
              *System.out.println(c1[0]);
              *System.out.println(c1[1]);
              *System.out.println(c1[2]);
              *
              *
              *System.out.println(d1[0]);
              *System.out.println(d1[1]); **/
         
            
            System.out.println(counter);
        }
        catch(ArithmeticException e)
        {
            System.out.println(e+"" throwed!"");
        }
       
    }
    
}
@383f0d0fc0298ba4c324341a877be341@"
"r04525016","3","0.45","105216","@e58f2e043c5acfba6214933316c72cda@import java.io.BufferedReader;
import java.io.FileReader;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initialization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // read the rest content of the file
            String[] temp = br.readLine().split("","");

            // store the announce strings (2nd line of the file) in variable announce
            for(int i = 0; i < stringCount; i++){
                announce[i] = temp[i];
            }

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0; i < num; i++){
                String[] temp2 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    matrix[i][j] = temp2[j];
                }
            }

            // compare the matrix and announce strings (this is the tricky part)

            int count = 0;
            int count2 = 0;
            int count3 = 0;
            int count4 = 0;
            int straightLines = 0;


                for(int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        for (String Announce : announce) {
                            if (matrix[i][j].equals(Announce)) count++;
                            if (matrix[j][i].equals(Announce)) count2++;

                            if (matrix[0][0].equals(Announce)) {
                                if (matrix[j + 1][j + 1].equals(Announce)) count3++;
                            }
                            if (matrix[num - 1][0].equals(Announce)) {
                                if (matrix[j][num - 1 - j].equals(Announce)) count4++;
                            }


                        }
                    }
                    if (count == num) straightLines++;
                    if (count2 == num) straightLines++;
                    count = 0;
                    count2 = 0;

                }

            if(count3 == num) straightLines++;
            if(count4 == num) straightLines++;

            //output how many 'straight line' are there in the matrix
            System.out.println(straightLines);

        }
    }
}
@e58f2e043c5acfba6214933316c72cda@"
"r04631023","0","0.74","103920","@ad6eacacb5746f7b4bdee04df3f33f3f@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            
            
            String[] hit = br.readLine().split("","") ;
            for (int i = 0; i < num; i++)
            {
                String[] row = br.readLine().split("","") ;
                matrix[i] = row ;
            }
            
            int rightslash = 0 ;
            int leftslash = 0 ;
            int horizental = 0 ;
            int vertical = 0 ;
            int end = num - 1 ;
            int count = 0 ;
            int[][] bingo = new int[num][num] ;
            int[] HorLoc = new int[num] ;
            int[] VerLoc = new int[num] ;
            
            int a = 0 ;
            int b = 0 ;
            for(int i = 0; i < num; i++)
            {
                for(int j = 0; j < num; j++)
                {
                    for(int k = 0; k < stringCount; k++)
                    {
                        int check = hit[k].compareTo(matrix[i][j]) ;
                        if(i == 0 && j == 0 && check==0 )
                        {
                            rightslash++ ;
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == 0 && check==0)
                        {
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                            //System.out.printf(""%d\n"", bingo[i][j]) ;
                        }
                        else if(j == 0 && check==0) 
                        {
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == end && check==0)
                        {
                            leftslash++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(check==0)
                        {
                            bingo[i][j] = 1 ;
                        }
                    }
                }
            }
            
            if(rightslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num; i++ )
                {
                    Cal = Cal + bingo[i][i] ;
                }
                if(Cal == num)
                {
                    count++ ;
                }
            }
            if(horizental > 0)
            {
                for(int i = 0 ; i < horizental ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal = Cal + bingo[HorLoc[i]][j] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(vertical > 0)
            {
                for(int i = 0 ; i < vertical ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal = Cal + bingo[j][VerLoc[i]] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(leftslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num ; i++)
                {
                    Cal = Cal + bingo[end-i][i] ;
                }
                if(Cal == num)
                    {
                        count++ ;
                    }
            }
            

            int check = hit[0].compareTo(matrix[0][2]) ;
            if(a == 0 && check==0)
            {
          
            }
            
            
            System.out.printf(""%d\n"", count) ;
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@ad6eacacb5746f7b4bdee04df3f33f3f@"
"r04631023","8","0.86","105456","@d04e5d554d1dc939071307be195a6364@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            
            String[] hit = br.readLine().split("","") ;
            for (int i = 0; i < num; i++)
            {
                String[] row = br.readLine().split("","") ;
                matrix[i] = row ;
            }
            
            int rightslash = 0 ;
            int leftslash = 0 ;
            int horizental = 0 ;
            int vertical = 0 ;
            int end = num - 1 ;
            int count = 0 ;
            int[][] bingo = new int[num][num] ;
            int[] HorLoc = new int[num] ;
            int[] VerLoc = new int[num] ;
            
            int a = 0 ;
            int b = 0 ;
            for(int i = 0; i < num; i++)
            {
                for(int j = 0; j < num; j++)
                {
                    for(int k = 0; k < stringCount; k++)
                    {
                        int check = hit[k].compareTo(matrix[i][j]) ;
                        if(i == 0 && j == 0 && check==0 )
                        {
                            rightslash++ ;
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == 0 && check==0)
                        {
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                            //System.out.printf(""%d\n"", bingo[i][j]) ;
                        }
                        else if(j == 0 && check==0) 
                        {
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == end && check==0)
                        {
                            leftslash++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(check==0)
                        {
                            bingo[i][j] = 1 ;
                        }
                    }
                }
            }
            
            if(rightslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num; i++ )
                {
                    Cal = Cal + bingo[i][i] ;
                }
                if(Cal == num)
                {
                    count++ ;
                }
            }
            if(horizental > 0)
            {
                for(int i = 0 ; i < horizental ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal = Cal + bingo[HorLoc[i]][j] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(vertical > 0)
            {
                for(int i = 0 ; i < vertical ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal = Cal + bingo[j][VerLoc[i]] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(leftslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num ; i++)
                {
                    Cal = Cal + bingo[end-i][i] ;
                }
                if(Cal == num)
                    {
                        count++ ;
                    }
            }
            

            int check = hit[0].compareTo(matrix[0][2]) ;
            if(a == 0 && check==0)
            {
          
            }     
            System.out.printf(""%d\n"", count) ;
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@d04e5d554d1dc939071307be195a6364@"
"r04631023","9","0.93","105440","@2c147e59d23d08d6f10f9e5aca24f6cb@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            
            String[] hit = br.readLine().split("","") ;
            for (int i = 0; i < num; i++)
            {
                String[] row = br.readLine().split("","") ;
                matrix[i] = row ;
            }
            
            int rightslash = 0 ;
            int leftslash = 0 ;
            int horizental = 0 ;
            int vertical = 0 ;
            int end = num - 1 ;
            int count = 0 ;
            int[][] bingo = new int[num][num] ;
            int[] HorLoc = new int[num] ;
            int[] VerLoc = new int[num] ;
            
            int a = 0 ;
            int b = 0 ;
            for(int i = 0; i < num; i++)
            {
                for(int j = 0; j < num; j++)
                {
                    for(int k = 0; k < stringCount; k++)
                    {
                        int check = hit[k].compareTo(matrix[i][j]) ;
                        if(i == 0 && j == 0 && check==0 )
                        {
                            rightslash++ ;
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == 0 && check==0)
                        {
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                            //System.out.printf(""%d\n"", bingo[i][j]) ;
                        }
                        else if(j == 0 && check==0) 
                        {
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == end && check==0)
                        {
                            leftslash++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(check==0)
                        {
                            bingo[i][j] = 1 ;
                        }
                    }
                }
            }
            
            if(rightslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num; i++ )
                {
                    Cal = Cal + bingo[i][i] ;
                }
                if(Cal == num)
                {
                    count++ ;
                }
            }
            if(horizental > 0)
            {
                for(int i = 0 ; i < horizental ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal = Cal + bingo[HorLoc[i]][j] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(vertical > 0)
            {
                for(int i = 0 ; i < vertical ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal = Cal + bingo[j][VerLoc[i]] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(leftslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num ; i++)
                {
                    Cal = Cal + bingo[end-i][i] ;
                }
                if(Cal == num)
                    {
                        count++ ;
                    }
            }
            System.out.printf(""%d\n"", count) ;
        }
    }
}
@2c147e59d23d08d6f10f9e5aca24f6cb@"
"r04525016","3","0.73","104384","@421898f96a5528be33a5c8c406cd2f6b@import java.io.BufferedReader;
import java.io.FileReader;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initialization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // read the rest content of the file
            String[] temp = br.readLine().split("","");

            // store the announce strings (2nd line of the file) in variable announce
            for(int i = 0; i < stringCount; i++){
                announce[i] = temp[i];
            }

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0; i < num; i++){
                String[] temp2 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    matrix[i][j] = temp2[j];
                }
            }

            // compare the matrix and announce strings (this is the tricky part)

            int count = 0;
            int count2 = 0;
            int count3 = 0;
            int count4 = 0;
            int straightLines = 0;


                for(int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        for (String Announce : announce) {
                            if (matrix[i][j].equals(Announce)) count++;
                            if (matrix[j][i].equals(Announce)) count2++;

                            if (matrix[0][0].equals(Announce)) {
                                if (matrix[j][j].equals(Announce)) count3++;
                            }
                            if (matrix[0][num-1].equals(Announce)) {
                                if (matrix[j][num - 1 - j].equals(Announce)) count4++;
                            }


                        }
                    }
                    if (count == num) straightLines++;
                    if (count2 == num) straightLines++;
                    count = 0;
                    count2 = 0;

                }

            if(count3 == num) straightLines++;
            if(count4 == num) straightLines++;

            //output how many 'straight line' are there in the matrix
            System.out.println(straightLines);

        }
    }
}
@421898f96a5528be33a5c8c406cd2f6b@"
"r04525016","1","0.93","105216","@e9e7a8a98f6ca04deb2a03b798ac5c40@import java.io.BufferedReader;
import java.io.FileReader;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initialization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // read the rest content of the file
            String[] temp = br.readLine().split("","");

            // store the announce strings (2nd line of the file) in variable announce
            for(int i = 0; i < stringCount; i++){
                announce[i] = temp[i];
            }

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0; i < num; i++){
                String[] temp2 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    matrix[i][j] = temp2[j];
                }
            }

            // compare the matrix and announce strings (this is the tricky part)

            int count = 0;
            int count2 = 0;
            int count3 = 0;
            int count4 = 0;
            int straightLines = 0;


                for(int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        for (String Announce : announce) {
                            if (matrix[i][j].equals(Announce)) count++;
                            if (matrix[j][i].equals(Announce)) count2++;
                        }
                    }
                    if (count == num) straightLines++;
                    if (count2 == num) straightLines++;
                    count = 0;
                    count2 = 0;
                }

            for(int j = 0; j < num; j++) {
                for (String Announce : announce) {
                    if (matrix[0][0].equals(Announce)) {
                        if (matrix[j][j].equals(Announce)) count3++;
                        System.out.println(matrix[j][j]);
                    }
                    if (matrix[0][num-1].equals(Announce)) {
                        if (matrix[j][num-1-j].equals(Announce)) count4++;
                        System.out.println(matrix[j][num-1-j]);
                    }
                }
            }
            if(count3 == num) straightLines++;
            if(count4 == num) straightLines++;

            //output how many 'straight line' are there in the matrix
            System.out.println(straightLines);

        }
    }
}
@e9e7a8a98f6ca04deb2a03b798ac5c40@"
"r04945022","0","0","0","@5592bd0d399659450c98f01869a37cc4@package bingo;

import java.io.FileReader;
import java.lang.Integer;
import java.io.BufferedReader;
import java.util.Arrays;
import java.lang.Exception;


/**
 * @author Daniel r04945022
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        
          try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
//            int lines = br.readLine().split(""/n"").length;
            String[] data = br.readLine().split(""/n"");
            String[] announces =br.readLine().split("","");
            String[] firstline = data[0].split("","");
            int announced_numbers = Integer.parseInt(firstline[0]); 
            int size;            
              size = Integer.parseInt(firstline[1]);
            String[][] matrix;
            matrix = new String [size][size] ;    //create 2D array
            String str;
            int i = 0;
            while ((str=br.readLine())!=null){
            matrix [i] = str.split("","");
            i++;
            }
                   //turn the called into 0
            for(int z=0; z<announced_numbers; z++){
            for(int x=0; x<size; x++){
                for(int y=0; y<size; y++){
                        if(matrix[x][y].equals(announces[z])){
                            matrix[x][y]= ""0"";
                        }
                      
                    }
                }
             }

   
            int numoflines=0;
            int k = 0;          //check lines
            for(int row=0; row<size;row++) {
                if(matrix[row][k].equals(matrix[row][k+1]) && matrix[row][k].equals(matrix[row][k+2])){
                    numoflines++;
                }   
            }

             for(int column = 0; column<size;column++) {
                if(matrix[k][column].equals(matrix[k+1][column]) && matrix[k][column].equals(matrix[k+2][column])){
                    numoflines++;
                }   
            }
            if((matrix[0][0].equals(matrix[1][1]))){
                if(matrix[1][1].equals(matrix[2][2])){
                    if(matrix[2][2]==""0""){
                        numoflines++;
                    }
                }
            }
            
            
            
           System.out.println(""there are""+numoflines+""straightlines"");
        }
        // TODO code application logic here
    }
    
}
    


@5592bd0d399659450c98f01869a37cc4@"
"r04525016","7","0.93","105216","@072a956f0223207acf5f76f906d09cee@import java.io.BufferedReader;
import java.io.FileReader;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initialization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // read the rest content of the file
            String[] temp = br.readLine().split("","");

            // store the announce strings (2nd line of the file) in variable announce
            for(int i = 0; i < stringCount; i++){
                announce[i] = temp[i];
            }

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0; i < num; i++){
                String[] temp2 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    matrix[i][j] = temp2[j];
                }
            }

            // compare the matrix and announce strings (this is the tricky part)

            int count = 0;
            int count2 = 0;
            int count3 = 0;
            int count4 = 0;
            int straightLines = 0;


                for(int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        for (String Announce : announce) {
                            if (matrix[i][j].equals(Announce)) count++;
                            if (matrix[j][i].equals(Announce)) count2++;
                        }
                    }
                    if (count == num) straightLines++;
                    if (count2 == num) straightLines++;
                    count = 0;
                    count2 = 0;
                }

            for(int j = 0; j < num; j++) {
                for (String Announce : announce) {
                    if (matrix[0][0].equals(Announce)) {
                        if (matrix[j][j].equals(Announce)) count3++;

                    }
                    if (matrix[0][num-1].equals(Announce)) {
                        if (matrix[j][num-1-j].equals(Announce)) count4++;
                       
                    }
                }
            }
            if(count3 == num) straightLines++;
            if(count4 == num) straightLines++;

            //output how many 'straight line' are there in the matrix
            System.out.println(straightLines);

        }
    }
}
@072a956f0223207acf5f76f906d09cee@"
"r04945022","0","0","0","@3fd7f0822ed12fcea9303cc24b3fc60c@import java.io.FileReader;
import java.lang.Integer;
import java.io.BufferedReader;
import java.util.Arrays;
import java.lang.Exception;


/**
 * @author Daniel r04945022
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception{
        
          try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
//            int lines = br.readLine().split(""/n"").length;
            String[] data = br.readLine().split(""/n"");
            String[] announces =br.readLine().split("","");
            String[] firstline = data[0].split("","");
            int announced_numbers = Integer.parseInt(firstline[0]); 
            int size;            
              size = Integer.parseInt(firstline[1]);
            String[][] matrix;
            matrix = new String [size][size] ;    //create 2D array
            String str;
            int i = 0;
            while ((str=br.readLine())!=null){
            matrix [i] = str.split("","");
            i++;
            }
                   //turn the called into 0
            for(int z=0; z<announced_numbers; z++){
            for(int x=0; x<size; x++){
                for(int y=0; y<size; y++){
                        if(matrix[x][y].equals(announces[z])){
                            matrix[x][y]= ""0"";
                        }
                      
                    }
                }
             }

   
            int numoflines=0;
            int k = 0;          //check lines
            for(int row=0; row<size;row++) {
                if(matrix[row][k].equals(matrix[row][k+1]) && matrix[row][k].equals(matrix[row][k+2])){
                    numoflines++;
                }   
            }

             for(int column = 0; column<size;column++) {
                if(matrix[k][column].equals(matrix[k+1][column]) && matrix[k][column].equals(matrix[k+2][column])){
                    numoflines++;
                }   
            }
            if((matrix[0][0].equals(matrix[1][1]))){
                if(matrix[1][1].equals(matrix[2][2])){
                    if(matrix[2][2]==""0""){
                        numoflines++;
                    }
                }
            }
            
            
            
           System.out.println(""there are ""+numoflines+"" of straightlines"");
        }
        // TODO code application logic here
    }
    
}
    


@3fd7f0822ed12fcea9303cc24b3fc60c@"
"r04631006","3","0.96","105488","@c66c2054576dd26a7b4ddf0ecc3bf17c@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            announce = br.readLine().split("","");

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }else
                            bin[i][j] = 0;
                    
                    }
                }
            }

           
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@c66c2054576dd26a7b4ddf0ecc3bf17c@"
"r04631023","9","0.8","104848","@1a399d96eb4717398710d3f7c7167a05@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            
            String[] hit = br.readLine().split("","") ;
            for (int i = 0; i < num; i++)
            {
                String[] row = br.readLine().split("","") ;
                matrix[i] = row ;
            }
            
            int rightslash = 0 ;
            int leftslash = 0 ;
            int horizental = 0 ;
            int vertical = 0 ;
            int end = num - 1 ;
            int count = 0 ;
            int[][] bingo = new int[num][num] ;
            int[] HorLoc = new int[num] ;
            int[] VerLoc = new int[num] ;
            
            for(int i = 0; i < num; i++)
            {
                for(int j = 0; j < num; j++)
                {
                    for(int k = 0; k < stringCount; k++)
                    {
                        int check = hit[k].compareTo(matrix[i][j]) ;
                        if(i == 0 && j == 0 && check==0 )
                        {
                            rightslash++ ;
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == 0 && check==0)
                        {
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                            //System.out.printf(""%d\n"", bingo[i][j]) ;
                        }
                        else if(j == 0 && check==0) 
                        {
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == end && check==0)
                        {
                            leftslash++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(check==0)
                        {
                            bingo[i][j] = 1 ;
                        }
                    }
                }
            }
            
            if(rightslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num; i++ )
                {
                    Cal += bingo[i][i] ;
                }
                if(Cal == num)
                {
                    count++ ;
                }
            }
            if(horizental > 0)
            {
                for(int i = 0 ; i < horizental ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal += bingo[HorLoc[i]][j] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(vertical > 0)
            {
                for(int i = 0 ; i < vertical ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal += bingo[j][VerLoc[i]] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(leftslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num ; i++)
                {
                    Cal += bingo[end-i][i] ;
                }
                if(Cal == num)
                    {
                        count++ ;
                    }
            }
            System.out.printf(""%d\n"", count) ;
        }
    }
}
@1a399d96eb4717398710d3f7c7167a05@"
"b03611038","10","0.091","105200","@2b1801ad67ab90a05c43ec92d1e4b728@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
            try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
          //try(BufferedReader br = new BufferedReader(new FileReader(""input.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
        
        
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][]matrix2= new int[num][num];
            
           announce = br.readLine().split("","");
           int i = 0;
           while(i<num){
           matrix[i] = br.readLine().split("","");
           i++;
           }
           int z=0;
           int j;
           int count=0;
           for(int x=0;x<num;x++)
           {
               for(int y=0;y<num;y++)
               {
                   z=0;
                   while(z<stringCount)
                   {
                   j = matrix[x][y].compareTo(announce[z]);
                   if(j==0)
                   {
                       matrix2[x][y]=1;
                       break;
                   }
                   else
                   {
                       matrix2[x][y]=0;
                   }
                   z++;
                   }
               }
           }
           
           int sum=0;
           for(int x=0;x<num;x++)
           {
                for(int y=0;y<num;y++)
               {
                 sum=sum+ matrix2[x][y];
               }
                if(sum==num)
                {
                    count++;
                }
                sum=0;
           }
            for(int y=0;y<num;y++)
           {
                for(int x=0;x<num;x++)
               {
                 sum=sum+ matrix2[x][y];
               }
                if(sum==num)
                {
                    count++;
                }
                sum=0;
           }
            int sum2=0;
            for(int x=0;x<num;x++)
            {
                sum=sum+ matrix2[x][num-x-1];
                sum2=sum2+matrix2[x][x];
            }
            if(sum==num)
            {
                count++;
            }
            if(sum2==num)
            {
                count++;
            }
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
System.out.println(count);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@2b1801ad67ab90a05c43ec92d1e4b728@"
"r04631006","9","0.95","106976","@96b425ad6d07b08bce88a8d0dc9c647f@import java.io.FileReader;
import java.io.BufferedReader;
//import java.util.Arrays;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
//           String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)

            String[] announce = br.readLine().split("","");

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

           
            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1] ) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                        
                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }  
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j+1][i] && bin[j][i] == 1) {
                        k = k + 1;          
                    }
                    if (k == num - 1) {
                        a = a + 1; 
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@96b425ad6d07b08bce88a8d0dc9c647f@"
"r04525016","10","0.078","102096","@1f9885fc63cff9fb645a881e83cf900c@import java.io.BufferedReader;
import java.io.FileReader;


public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)
            int num = Integer.parseInt(data[1]);

            // initialization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            // System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            // read the rest content of the file
            String[] temp = br.readLine().split("","");

            // store the announce strings (2nd line of the file) in variable announce
            for(int i = 0; i < stringCount; i++){
                announce[i] = temp[i];
            }

            // store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 0; i < num; i++){
                String[] temp2 = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    matrix[i][j] = temp2[j];
                }
            }

            // compare the matrix and announce strings (this is the tricky part)

            int count = 0;
            int count2 = 0;
            int count3 = 0;
            int count4 = 0;
            int straightLines = 0;


                for(int i = 0; i < num; i++) {
                    for (int j = 0; j < num; j++) {
                        for (String Announce : announce) {
                            if (matrix[i][j].equals(Announce)) count++;
                            if (matrix[j][i].equals(Announce)) count2++;
                        }
                    }
                    if (count == num) straightLines++;
                    if (count2 == num) straightLines++;
                    count = 0;
                    count2 = 0;
                }

            for(int j = 0; j < num; j++) {
                for (String Announce : announce) {
                    //if (matrix[0][0].equals(Announce)) {
                        if (matrix[j][j].equals(Announce)) count3++;

                    //}
                    //if (matrix[0][num-1].equals(Announce)) {
                        if (matrix[j][num-1-j].equals(Announce)) count4++;

                    //}
                }
            }


            if(count3 == num) straightLines++;
            if(count4 == num) straightLines++;

            //output how many 'straight line' are there in the matrix
            System.out.println(straightLines);

        }
    }
}
@1f9885fc63cff9fb645a881e83cf900c@"
"r04631025","10","0.096","105488","@abb2eda8ff3bce36c50f4c82bf0f1f03@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

import java.io.FileReader;
import java.io.BufferedReader;

/**
 *
 * @author Tim
 */
public class Bingo {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) throws Exception {
        // TODO code application logic here
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] matrixCheck = new int[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
          //  System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            announce = br.readLine().split("","");
            for(int i=0;i<num;i++){
                for(int j=0;j<num;j++){
                    matrixCheck[i][j]=0;
                }
            }

            for (int i = 0; i < num; i++) {
                matrix[i] = br.readLine().split("","");
            }
            
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) 
                        if (matrix[i][j].equals(announce[k])) {
                            matrixCheck[i][j] = 1;
                        } 

                }
            }

            int sum;
            int straightline=0;
            //count the row
            for (int i = 0; i < num; i++) {
                sum = 0;
                for (int j = 0; j < num; j++) {
                    sum = sum+matrixCheck[i][j];
                }
                if(sum==num){
                    straightline++;
                }
            }

            //count the column
            for (int j = 0; j < num; j++) {
                sum = 0;
                for (int i = 0; i < num; i++) {
                    sum =sum+matrixCheck[i][j];
                }
                if(sum==num){
                    straightline++;
                }
            }
            //count the diagonal
            int dia=0;
            for(int i=0;i<num;i++){
                dia+=matrixCheck[i][i];
            }
            if(dia==num){
                straightline++;
            }
            
            int dia2=0;
            for(int i=0;i<num;i++){                
                dia2+=matrixCheck[i][num-i-1];
            }
            if(dia2==num){
                straightline++;
            }
            
            System.out.printf(""%d"", straightline);

                /*  now you can write your own solution to hw0
                 *  you can follow the instruction described below:
                 * 
                 *  1. read the rest content of the file
                 *  2. store the announce strings (2nd line of the file) in variable announce
                 *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
                 *  4. compare the matrix and announce strings (this is the tricky part)
                 *  5. output how many 'straight line' are there in the matrix
                 * 
                 *  [note]
                 *  you can use every data structure in standard Java packages (Java 8 supported)
                 *  the packages in stdlib.jar and algs4.jar are also available for you to use
                 *
                 *  [hint]
                 *  1. you should check whether Java pass the variable by references or by values.
                 *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
                 *     useful for solving problems. 
                 */
            }

        }
    
}

@abb2eda8ff3bce36c50f4c82bf0f1f03@"
"r04631023","0","0","0","@f84352d28de0968e4a36308ba3041b02@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(""args[0]""))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            
            announce = br.readLine().split("","") ;
            for (int i = 0; i < num; i++)
            {
                String[] row = br.readLine().split("","") ;
                matrix[i] = row ;
            }
            
            int rightslash = 0 ;
            int leftslash = 0 ;
            int horizental = 0 ;
            int vertical = 0 ;
            int end = num - 1 ;
            int count = 0 ;
            int[][] bingo = new int[num][num] ;
            int[] HorLoc = new int[num] ;
            int[] VerLoc = new int[num] ;
            
            for(int i = 0; i < num; i++)
            {
                for(int j = 0; j < num; j++)
                {
                    for(int k = 0; k < stringCount; k++)
                    {
                        int check = announce[k].compareTo(matrix[i][j]) ;
                        if(i == 0 && j == 0 && check==0 )
                        {
                            rightslash++ ;
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == 0 && check==0)
                        {
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                            //System.out.printf(""%d\n"", bingo[i][j]) ;
                        }
                        else if(j == 0 && check==0) 
                        {
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == end && check==0)
                        {
                            leftslash++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(check==0)
                        {
                            bingo[i][j] = 1 ;
                        }
                    }
                }
            }
            
            if(rightslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num; i++ )
                {
                    Cal += bingo[i][i] ;
                }
                if(Cal == num)
                {
                    count++ ;
                }
            }
            if(horizental > 0)
            {
                for(int i = 0 ; i < horizental ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal += bingo[HorLoc[i]][j] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(vertical > 0)
            {
                for(int i = 0 ; i < vertical ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal += bingo[j][VerLoc[i]] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(leftslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num ; i++)
                {
                    Cal += bingo[end-i][i] ;
                }
                if(Cal == num)
                    {
                        count++ ;
                    }
            }
            System.out.printf(""%d\n"", count) ;
        }
    }
}
@f84352d28de0968e4a36308ba3041b02@"
"r04631023","9","0.97","105600","@072bb1f37cd69ff6c59901dd0fc16abf@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            
            announce = br.readLine().split("","") ;
            for (int i = 0; i < num; i++)
            {
                String[] row = br.readLine().split("","") ;
                matrix[i] = row ;
            }
            
            int rightslash = 0 ;
            int leftslash = 0 ;
            int horizental = 0 ;
            int vertical = 0 ;
            int end = num - 1 ;
            int count = 0 ;
            int[][] bingo = new int[num][num] ;
            int[] HorLoc = new int[num] ;
            int[] VerLoc = new int[num] ;
            
            for(int i = 0; i < num; i++)
            {
                for(int j = 0; j < num; j++)
                {
                    for(int k = 0; k < stringCount; k++)
                    {
                        int check = announce[k].compareTo(matrix[i][j]) ;
                        if(i == 0 && j == 0 && check==0 )
                        {
                            rightslash++ ;
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == 0 && check==0)
                        {
                            VerLoc[vertical] = j ;
                            vertical++ ;
                            bingo[i][j] = 1 ;
                            //System.out.printf(""%d\n"", bingo[i][j]) ;
                        }
                        else if(j == 0 && check==0) 
                        {
                            HorLoc[horizental] = i ;
                            horizental++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(i == end && check==0)
                        {
                            leftslash++ ;
                            bingo[i][j] = 1 ;
                        }
                        else if(check==0)
                        {
                            bingo[i][j] = 1 ;
                        }
                    }
                }
            }
            
            if(rightslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num; i++ )
                {
                    Cal += bingo[i][i] ;
                }
                if(Cal == num)
                {
                    count++ ;
                }
            }
            if(horizental > 0)
            {
                for(int i = 0 ; i < horizental ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal += bingo[HorLoc[i]][j] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(vertical > 0)
            {
                for(int i = 0 ; i < vertical ; i++ )
                {
                    int Cal = 0 ;
                    for(int j = 0 ; j < num ; j++)
                    {
                        Cal += bingo[j][VerLoc[i]] ;
                    }
                    if(Cal == num)
                    {
                        count++ ;
                    }
                }
            }
            if(leftslash > 0)
            {
                int Cal = 0 ;
                for(int i = 0 ; i < num ; i++)
                {
                    Cal += bingo[end-i][i] ;
                }
                if(Cal == num)
                    {
                        count++ ;
                    }
            }
            System.out.printf(""%d\n"", count) ;
        }
    }
}
@072bb1f37cd69ff6c59901dd0fc16abf@"
"r04631023","9","0.81","103856","@7ed08601d8be910eb3618cfd315cd632@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++) {
                String[] row = br.readLine().split("","");
                matrix[i] = row;
            }

            int rightslash = 0;
            int leftslash = 0;
            int horizental = 0;
            int vertical = 0;
            int end = num - 1;
            int count = 0;
            int[][] bingo = new int[num][num];
            int[] HorLoc = new int[num];
            int[] VerLoc = new int[num];

            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        int check = announce[k].compareTo(matrix[i][j]);
                        if (bingo[i][j] == 0) {
                            if (i == 0 && j == 0 && check == 0) {
                                rightslash++;
                                HorLoc[horizental] = i;
                                horizental++;
                                VerLoc[vertical] = j;
                                vertical++;
                                bingo[i][j] = 1;
                            } else if (i == 0 && check == 0) {

                                VerLoc[vertical] = j;
                                vertical++;
                                bingo[i][j] = 1;
                            } else if (j == 0 && check == 0) {
                                HorLoc[horizental] = i;
                                horizental++;
                                bingo[i][j] = 1;
                            } else if (i == end && check == 0) {
                                leftslash++;
                                bingo[i][j] = 1;
                            } else if (check == 0) {
                                bingo[i][j] = 1;
                            }
                        }
                    }
                }
            }

            if (rightslash > 0) {
                int Cal = 0;
                for (int i = 0; i < num; i++) {
                    Cal += bingo[i][i];
                }
                if (Cal == num) {
                    count++;
                }
            }
            if (horizental > 0) {
                for (int i = 0; i < horizental; i++) {
                    int Cal = 0;
                    for (int j = 0; j < num; j++) {
                        Cal += bingo[HorLoc[i]][j];
                    }
                    if (Cal == num) {
                        count++;
                    }
                }
            }
            if (vertical > 0) {
                for (int i = 0; i < vertical; i++) {
                    int Cal = 0;
                    for (int j = 0; j < num; j++) {
                        Cal += bingo[j][VerLoc[i]];
                    }
                    if (Cal == num) {
                        count++;
                    }
                }
            }
            if (leftslash > 0) {
                int Cal = 0;
                for (int i = 0; i < num; i++) {
                    Cal += bingo[end - i][i];
                }
                if (Cal == num) {
                    count++;
                }
            }

            System.out.printf(""%d\n"", count);
        }
    }
}
@7ed08601d8be910eb3618cfd315cd632@"
"r04631033","10","0.094","105200","@eda5d42cc738addc949fe6a3bf3a12c3@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
//import java.util.ArrayList;
import java.util.Vector;
public class Bingo {
public static void main(String[] args) throws Exception {

            // read file from args[0] in Java 7 style
try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
    String[] data = br.readLine().split("","");
    String[] data2 = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
    int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
    int num = Integer.parseInt(data[1]);
    String[] announce = new String[stringCount];
    String[][] matrix = new String[num][num];         
 for(int i=0;i<stringCount;i++){
         announce[i] = data2[i];
                 }     
Vector<String []> str_vec = new Vector<String []>();
    int j = 0;
    int i = 0;
    String line;
    while ((line = br.readLine()) != null) { //每次讀一行 
           str_vec.add(line.split("",""));
             }            
for(i = 0; i < num; i++) {
matrix[i] = str_vec.elementAt(i);
}
for( i=0;i<num;i++){
    for(j=0;j<num;j++){
        int k;
        for(k=0;k<stringCount;k++){
            String d = announce[k];
            if (matrix[i][j].equals(d))break;
        }//System.out.print(matrix[i][j]);
        if(k==stringCount)matrix[i][j]=""0"";
        else matrix[i][j]=""1"";
    }
}
//System.out.print(Arrays.deepToString(matrix));
String x =  Integer.toString(1);
String y =  Integer.toString(0);
int ab = 0; 
 for(i=0;i<num;i++){
     int count = 0;
     int count1 = 0;
     for(j=0;j<num;j++){
         if (matrix[i][j].equals(x)){
             count++;         
         }
         if (matrix[j][i].equals(x)){
             count1++;
         }
    }
     if(count == num){
         ab += 1;
         }
     if(count1 == num){
         ab += 1;
         }
 }
int count2 = 0;
for(i=0;i<num;i++){
    if (matrix[i][i].equals(x)){
       count2++;         
          }
    if(count2 == num){
         ab += 1;
          } 
}
int count3 = 0;
for(i=0;i<num;i++){
    if (matrix[i][num-1-i].equals(x)){
       count3++;         
          }
    if(count3 == num){
         ab += 1;
          } 
}
System.out.print(ab);
}
}
}
@eda5d42cc738addc949fe6a3bf3a12c3@"
"r04631023","10","0.082","104752","@7eb08f01e456a1e4f266a68d8c63d415@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            announce = br.readLine().split("","");
            for (int i = 0; i < num; i++) {
                String[] row = br.readLine().split("","");
                matrix[i] = row;
            }

            int rightslash = 0;
            int leftslash = 0;
            int horizental = 0;
            int vertical = 0;
            int end = num - 1;
            int count = 0;
            int[][] bingo = new int[num][num];
            int[] HorLoc = new int[num];
            int[] VerLoc = new int[num];

            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 0; k < stringCount; k++) {
                        int check = announce[k].compareTo(matrix[i][j]);
                        if (check == 0) {
                            bingo[i][j] = 1;
                        }
                    }
                }
            }

            int CalD = 0;
            int CalBD = 0;
            for (int i = 0; i < num; i++) {
                CalD += bingo[i][i];
                CalBD += bingo[end - i][i];
            }
            if (CalD == num) {
                count++;
            }
            if (CalBD == num) {
                count++;
            }

            //horizental line
            int CalH = 0;
            int CalV = 0;
            for (int i = 0; i < num; i++) {
                CalH = 0;
                CalV = 0;
                for (int j = 0; j < num; j++) {
                    CalH += bingo[i][j];
                    CalV += bingo[j][i];

                }
                if (CalH == num) {
                    count++;
                }
                if (CalV == num) {
                    count++;
                }
            }
            System.out.printf(""%d\n"", count);
        }
    }
}

@7eb08f01e456a1e4f266a68d8c63d415@"
"r04631006","9","0.99","105504","@75346a5fa90b5cadc3425473f0ee115a@
import java.io.FileReader;
import java.io.BufferedReader;


public class Bingo {

    public static void main(String[] args) throws Exception {


        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String[] data = br.readLine().split("","");


            int stringCount = Integer.parseInt(data[0]);
      
            int num = Integer.parseInt(data[1]);


            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];


            String[] announce = br.readLine().split("","");

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }

                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j + 1][i] && bin[j][i] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }
    }
}

@75346a5fa90b5cadc3425473f0ee115a@"
"r04631006","9","0.8","103888","@73cb75e61c8a26fbe95f49641363ea59@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            String[] data = br.readLine().split("","");

            int stringCount = Integer.parseInt(data[0]);

            int num = Integer.parseInt(data[1]);

            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            int[][] bin = new int[num][num];

            announce = br.readLine().split("","");

            int k = 0;
            int a = 0;
            for (int i = 0; i < num; i++) {
                String[] coun = br.readLine().split("","");
                for (int j = 0; j < num; j++) {
                    matrix[i][j] = coun[j];
                    for (int m = 0; m < stringCount; m++) {
                        if (matrix[i][j].equals(announce[m])) {
                            bin[i][j] = 1;
                        }
                    }
                }
            }

            for (int i = 0; i < num; i++) {
                if (i == 0 && bin[0][0] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][j] == bin[j + 1][j + 1]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }
                    }
                    k = 0;
                } else if (i == 0 && bin[0][num - 1] == 1) {
                    for (int j = 0; j < (num - 1); j++) {
                        if (bin[j][num - 1 - j] == bin[j + 1][num - 2 - j]) {
                            k = k + 1;
                        }
                        if (k == num - 1) {
                            a = a + 1;
                        }

                    }
                    k = 0;
                }
                for (int j = 0; j < (num - 1); j++) {
                    if (bin[i][j] == bin[i][j + 1] && bin[i][j] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }
                }
                k = 0;

                for (int j = 0; j < (num - 1); j++) {
                    if (bin[j][i] == bin[j + 1][i] && bin[j][i] == 1) {
                        k = k + 1;
                    }
                    if (k == num - 1) {
                        a = a + 1;
                    }
                }
                k = 0;
            }
            System.out.printf(""%d "", a);
        }
    }
}

@73cb75e61c8a26fbe95f49641363ea59@"
"b01705003","0","0.81","104208","@82579940d6e62c92192bb1648f6a357f@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];

            // printf in Java (you should comment out or delete this in your final submission)
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
            
            
             *  2. store the announce strings (2nd line of the file) in variable announce
            
            
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
            
            
             *  4. compare the matrix and announce strings (this is the tricky part)
            
            
             *  5. output how many 'straight line' are there in the matrix
            
            
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }
}

@82579940d6e62c92192bb1648f6a357f@"
"r04921065","0","0","0","@37b6d4b620fb57382566875ffbb65198@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package bingo;
 
import java.io.BufferedReader;
import java.io.FileReader;
 
/**
 *
 * @author steven
 */
public class Bingo {
 
    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
     public static void main(String[] args) throws Exception {
        // TODO code application logic here
        int straightLine=0;
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(""test.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
           
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
 
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
 
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] bool=new boolean[num][num];
 
            // printf in Java (you should comment out or delete this in your final submission)
            announce = br.readLine().split("","");
 
            String[] line= new String[num];
            int counter=0;
               
            for (int i=0; i<num;i++){
                line=br.readLine().split("","");
                matrix[counter]=line;
                counter++;
               
            }
            //System.out.println(matrix[0][2].equals(announce[0]));
            for (int y=0;y<num;y++){
                for (int x=0;x<num;x++){
                    for (int i=0;i<stringCount;i++){
                        //System.out.println(announce[0]);
                        //System.out.println(matrix[0][2]);
                        //System.out.println(announce[i]);
                        if (!bool[y][x]){
                            bool[y][x] = matrix[y][x].equals(announce[i]);
                        }
                    }
                    //System.out.println(bool[y][x]);
                }
            }
           
           
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[y][x]==false){
                        break;
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            }
 
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[x][y]==false){
                        break;
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            }
           
            for (int i=0;i<num;i++){
                if (bool[i][i]==false){
                    break;
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            for (int i=0;i<num;i++){
                if (bool[i][num-i-1]==false){
                    break;
                }
                if (i==num-1){
                    straightLine++;
                }
            }
           
 
        }
        System.out.println(straightLine);
     }
}
@37b6d4b620fb57382566875ffbb65198@"
"r04921065","10","0.092","105232","@e0325500184cdf49fa7ecea5324e2ab8@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
//package bingo;
 
import java.io.BufferedReader;
import java.io.FileReader;
 
/**
 *
 * @author steven
 */
public class Bingo {
 
    /**
     * @param args the command line arguments
     * @throws java.lang.Exception
     */
     public static void main(String[] args) throws Exception {
        // TODO code application logic here
        int straightLine=0;
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
        //try(BufferedReader br = new BufferedReader(new FileReader(""test.txt""))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
           
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
 
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
 
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            boolean[][] bool=new boolean[num][num];
 
            // printf in Java (you should comment out or delete this in your final submission)
            announce = br.readLine().split("","");
 
            String[] line= new String[num];
            int counter=0;
               
            for (int i=0; i<num;i++){
                line=br.readLine().split("","");
                matrix[counter]=line;
                counter++;
               
            }
            //System.out.println(matrix[0][2].equals(announce[0]));
            for (int y=0;y<num;y++){
                for (int x=0;x<num;x++){
                    for (int i=0;i<stringCount;i++){
                        //System.out.println(announce[0]);
                        //System.out.println(matrix[0][2]);
                        //System.out.println(announce[i]);
                        if (!bool[y][x]){
                            bool[y][x] = matrix[y][x].equals(announce[i]);
                        }
                    }
                    //System.out.println(bool[y][x]);
                }
            }
           
           
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[y][x]==false){
                        break;
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            }
 
            for (int y =0;y<num;y++){
                for (int x = 0; x< num ;x++){
                    if (bool[x][y]==false){
                        break;
                    }
                    if (x==num-1){
                        straightLine++;
                    }
                }
            }
           
            for (int i=0;i<num;i++){
                if (bool[i][i]==false){
                    break;
                }
                if (i==num-1){
                    straightLine++;
                }
            }
            for (int i=0;i<num;i++){
                if (bool[i][num-i-1]==false){
                    break;
                }
                if (i==num-1){
                    straightLine++;
                }
            }
           
 
        }
        System.out.println(straightLine);
     }
}
@e0325500184cdf49fa7ecea5324e2ab8@"
"r03849034","0","0","0","@586aafa4a7275e9b2317aec43171be77@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        //*  1. read the rest content of the file
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
           
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            //*  2. store the announce strings (2nd line of the file) in variable announce
            announce[1] = data[2];
            announce[2] = data[3];
            
            //*  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
            for(int i = 4; i < num*num; i++){
                for(int j = 1; j < 4; j++){
                    matrix[i-3][j] = data[i+(j-1)];
                }
            }
            
            
            boolean[][] card = new boolean [num] [num];
            for(int row = 0; row < num; row++){
                for(int col = 0; col < num; col++){
                    card[row][col] = false;
                    for(int line = 0; line < stringCount; line++){
                        if(matrix[row][col].equals(announce[line])){
                            card[row][col] = true;
                        }
                    }
                    
                }
            }
            
            //*  4. compare the matrix and announce strings (this is the tricky part)
            // Number of straight lines
            int count = 0;
            
            //* Check rows
            for(int row = 0; row < num; row++){
                int c = 0;
                for(int col = 0; col < num; col++){
                    if(card[row][col] = true){
                    c++;
                    }
                }
                if(c == num){
                    count++;
                }
            }
            
            //* Check columns
            for(int col = 0; col < num; col++){
                int c = 0;
                for(int row = 0; row < num; row++){
                    if(card[row][col] = true){
                    c++;
                    }
                }
                if(c == num){
                    count++;
                }
            }
            
            //* Check diagonals
            for(int row = 0; row < num; row++){
                int c = 0;
                if(card[row][row] = true){
                c++;
                }
                if(c == num){
                    count++;
                }
            }
            
            //*  5. output how many 'straight line' are there in the matrix
            // printf in Java (you should comment out or delete this in your final submission)

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
*/
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            System.out.println(count);
        }
    }
}

@586aafa4a7275e9b2317aec43171be77@"
"b01705003","0","0","0","@5a537fa9bf3e9bd9fe315cbcef373743@import java.io.FileReader;
import java.io.BufferedReader;
import java.io.Array;
public class Bingo {
    public static void main(String[] args) throws Exception {
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);
            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            // printf in Java (you should comment out or delete this in your final submission)
            //System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
             String[] data = br.readLine().split("","");
             for(int t=0;t<stringCount;t++){
             	announce[t]=data[t] ;
			 }
             for(int k=1;k<=num;k++){
             	String[] data = br.readLine().split("","");
             	for(int p=1;p<=num;p++){
             		matrix[k][p]=data[p];
				 }
			 }
			 
             for(int e=0;e<stringCount;e++){
             	for(int f=1;f<=num;f++){
             		for(int g=1;g<=num;g++){
             			while(announce[e]!=null){
             				if(matrix[f][g]==announce[e]){
             					matrix[f][g]=""NZ"";
							 }
						 }
					 }
				 }
			 }
			 int Count = 0 ;
			 int row = 0 ;
			 int Column = 0 ;
             for(int z=1;z<=num;z++){
             	for(int q=1;q<=num;q++){
             		if(matrix[z][q] == ""NZ"")
             		{
             			row++ ;
					 }
				 }
				 if(row==num){
				 	Count++ ;
				 	row = 0 ;
				 }
			 }
             
             for(int q=1;q<=num;q++){
             	for(int z=1;z<=num;z++){
             		if(matrix[z][q] == ""NZ"")
             		{
             			Column++ ;
					 }
				 }
				 if(Column==num){
				 	Count++ ;
				 	Column = 0 ;
				 }
			 }
             int oblique1 = 0 ;
             int oblique2 = 0 ;
             for(int t=1;t<=num;t++){
             	if(matrix[t][t]==""NZ""){
             		oblique1++;
				 }
			 }
			 if(oblique1==num){
			 	Count++;
			 }
			 for(int u=1;u<=num;u++){
			 	for(int o=num;o>=1;o--){
			 		if(matrix[u][o]==""NZ""){
             		oblique2++;
					 }
					 if(oblique2==num){
					 	Count++;
					 }
				}
			 }
			 System.out.printf(""%d"", Count);
             
    }
}
















@5a537fa9bf3e9bd9fe315cbcef373743@"
"r03849034","0","0.96","105472","@e2dda06d7f5dfd442153203f4ae592e8@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        //*  1. read the rest content of the file
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
           
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            //*  2. store the announce strings (2nd line of the file) in variable announce
            announce = br.readLine().split("","");


            
            //*  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
            for (int i = 0; i < num; i++){
            matrix[i] = br.readLine().split("","");
            }
            
            
            boolean[][] card = new boolean [num] [num];
            for(int row = 0; row < num; row++){
                for(int col = 0; col < num; col++){
                    card[row][col] = false;
                    for(int line = 0; line < stringCount; line++){
                        if(matrix[row][col].equals(announce[line])){
                            card[row][col] = true;
                        }
                    }
                    
                }
            }
            
            //*  4. compare the matrix and announce strings (this is the tricky part)
            // Number of straight lines
            int count = 0;
            
            //* Check rows
            for(int row = 0; row < num; row++){
                int c = 0;
                for(int col = 0; col < num; col++){
                    if(card[row][col] = true){
                    c++;
                    }
                }
                if(c == num){
                    count++;
                }
            }
            
            //* Check columns
            for(int col = 0; col < num; col++){
                int c = 0;
                for(int row = 0; row < num; row++){
                    if(card[row][col] = true){
                    c++;
                    }
                }
                if(c == num){
                    count++;
                }
            }
            
            //* Check diagonals
            for(int row = 0; row < num; row++){
                int c = 0;
                if(card[row][row] = true){
                c++;
                }
                if(c == num){
                    count++;
                }
            }
            
            //*  5. output how many 'straight line' are there in the matrix
            // printf in Java (you should comment out or delete this in your final submission)

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
*/
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            System.out.println(count);
        }
    }
}
@e2dda06d7f5dfd442153203f4ae592e8@"
"r03849034","0","0.79","104000","@c360ff276431fb05cf7d2cea8af993fd@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        //*  1. read the rest content of the file
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
           
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            //*  2. store the announce strings (2nd line of the file) in variable announce
            announce = br.readLine().split("","");


            
            //*  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
            for (int i = 0; i < num; i++){
            matrix[i] = br.readLine().split("","");
            }
            
            
            boolean[][] card = new boolean [num] [num];
            for(int row = 0; row < num; row++){
                for(int col = 0; col < num; col++){
                    card[row][col] = false;
                    for(int line = 0; line < stringCount; line++){
                        if(matrix[row][col].equals(announce[line])){
                            card[row][col] = true;
                        }
                    }
                    
                }
            }
            
            //*  4. compare the matrix and announce strings (this is the tricky part)
            // Number of straight lines
            int count = 0;
            
            //* Check rows
            for(int row = 0; row < num; row++){
                int c = 0;
                for(int col = 0; col < num; col++){
                    if(card[row][col] = true){
                    c++;
                    }
                }
                if(c == num){
                    count++;
                }
            }
            
            //* Check columns
            for(int col = 0; col < num; col++){
                int c = 0;
                for(int row = 0; row < num; row++){
                    if(card[row][col] = true){
                    c++;
                    }
                }
                if(c == num){
                    count++;
                }
            }
            
            //* Check diagonals
            for(int row = 0; row < num; row++){
                int c = 0;
                if(card[row][row] = true){
                c++;
                }
                if(c == num){
                    count++;
                }
            }
            
            //*  5. output how many 'straight line' are there in the matrix
            // printf in Java (you should comment out or delete this in your final submission)

            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
*/

            System.out.println(count);
        }
    }
}
@c360ff276431fb05cf7d2cea8af993fd@"
"b01705003","4","0.91","106560","@1fa17f0159423a509cb833cf293b2b45@public class Bingo {
    public static void main(String[] args) {
        System.out.println(""1"");
    }
}
@1fa17f0159423a509cb833cf293b2b45@"
"b01705003","1","0.89","103232","@d83938454d1200797fa4b4b7ff2d0fc4@public class Bingo {
    public static void main(String[] args) {
        System.out.println(""2"");
    }
}
@d83938454d1200797fa4b4b7ff2d0fc4@"
"b01705003","1","0.89","105152","@cae58037af4089b609428eab51d035c4@public class Bingo {
    public static void main(String[] args) {
        System.out.println(""3"");
    }
}
@cae58037af4089b609428eab51d035c4@"
"r04631035","0","0.82","104224","@d52108d48ddbb50c087f8065a0ed3f7d@import java.io.FileReader;
import java.io.BufferedReader;
import java.io.*;
import java.util.Scanner;
import java.util.*; 
import java.lang.String;
import java.util.Arrays;

public class Bingo {

    public static void main(String[] args) throws Exception {

            //讀取Input字串
            int i = 0;
            int j = 0;
            String[] strs = new String[100];
            Scanner sc = null;
            try {
              sc = new Scanner(new File(""C:\\Users\\Pan\\Desktop\\Data_structure\\project\\Test2\\src\\input.txt""));
            } catch (FileNotFoundException e) {
              e.printStackTrace();
              System.exit(0);
            }
            while (sc.hasNext()) {
              strs[i] = sc.next();  
              i++;
            }
            sc.close();
            
            String[] data1 = strs[0].split("","");
            String[] row1 = strs[1].split("","");
                                   
            int stringCount = Integer.parseInt(data1[0]);    //讓Bingo連成線的物件    
            int num = Integer.parseInt(data1[1]);  //幾成幾的矩陣
            
            //處理連線物件
           String[] Count =  new String[20];
           for(i = 1; i <= stringCount; i++){
              Count = strs[1].split("","");
           }
           //處理Bingo表格
           String[][] row = new String[20][20];
           for(i = 1; i <= num; i++){
                   row[i] = (strs[i+1].split("",""));          
           }
           
           //strs[2].split("","");
           
           
             //System.out.println(Count[0]);
             System.out.println(Count[0]);
             System.out.println(row[2]);
            
            //System.out.println(data1[0]);
            //System.out.println(row1[1]);
            System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            
            
            
            
            /*  now you can write your own solution to hw0
             *  you can follow the instruction described below:
             * 
             *  1. read the rest content of the file
             *  2. store the announce strings (2nd line of the file) in variable announce
             *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
             *  4. compare the matrix and announce strings (this is the tricky part)
             *  5. output how many 'straight line' are there in the matrix
             * 
             *  [note]
             *  you can use every data structure in standard Java packages (Java 8 supported)
             *  the packages in stdlib.jar and algs4.jar are also available for you to use
             *
             *  [hint]
             *  1. you should check whether Java pass the variable by references or by values.
             *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
             *     useful for solving problems. 
             */
        }
    }

@d52108d48ddbb50c087f8065a0ed3f7d@"
"b01705003","0","0.77","103440","@fdddab3e8272158b949bf6ae43d8bb20@public class Bingo {
    public static void main(String[] args) {
        System.out.println(""4"");
    }
}
@fdddab3e8272158b949bf6ae43d8bb20@"
"b01705003","4","0.74","103168","@1fa17f0159423a509cb833cf293b2b45@public class Bingo {
    public static void main(String[] args) {
        System.out.println(""1"");
    }
}
@1fa17f0159423a509cb833cf293b2b45@"
"r03849034","0","0.92","105200","@efcc49a0c99242a9ccc3c98a3ef51a80@import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {

        //*  1. read the rest content of the file
        // read file from args[0] in Java 7 style
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            
            // read a line and split by ','
            String[] data = br.readLine().split("","");
            
           
            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]);
            
            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] announce = new String[stringCount];
            String[][] matrix = new String[num][num];
            
            //*  2. store the announce strings (2nd line of the file) in variable announce
            announce = br.readLine().split("","");


            
            //*  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
            for (int i = 0; i < num; i++){
            matrix[i] = br.readLine().split("","");
            }
            
            
            boolean[][] card = new boolean [num] [num];
            for(int row = 0; row < num; row++){
                for(int col = 0; col < num; col++){
                    card[row][col] = false;
                    for(int line = 0; line < stringCount; line++){
                        if(matrix[row][col].equals(announce[line]))
                        card[row][col] = true;
                    }
                    
                }
            }
            
            //*  4. compare the matrix and announce strings (this is the tricky part)
            // Number of straight lines
            int count = 0;
            
            //* Check rows
            for(int row = 0; row < num; row++){
                int c = 0;
                for(int col = 0; col < num; col++){
                    if(card[row][col] = true){
                    c++;
                    }
                }
                if(c == num){
                    count++;
                }
            }
            
            //* Check columns
            for(int col = 0; col < num; col++){
                int c = 0;
                for(int row = 0; row < num; row++){
                    if(card[row][col] = true){
                    c++;
                    }
                }
                if(c == num){
                    count++;
                }
            }
            
            //* Check diagonals
            for(int row = 0; row < num; row++){
                int c = 0;
                if(card[row][row] = true){
                c++;
                }
                if(c == num){
                    count++;
                }
            }
            

            System.out.println(count);
        }
    }
}

@efcc49a0c99242a9ccc3c98a3ef51a80@"
"b01705003","1","0.91","105152","@6b6aef2b6c94057063493e142567a9ee@public class Bingo {
    public static void main(String[] args) {
        System.out.println(""12"");
    }
}
@6b6aef2b6c94057063493e142567a9ee@"
"b01705003","3","0.73","104384","@af89c63d53a2287581adfde8bbcaaed3@public class Bingo {
    public static void main(String[] args) {
        System.out.println(""0"");
    }
}
@af89c63d53a2287581adfde8bbcaaed3@"
"b01705003","0","0.92","105200","@e6065658eb4cd1e791daa3a6f1553321@public class Bingo {
    public static void main(String[] args) {
	int i = 0;
	i = (int)(Math.random()*10);
        System.out.println(""%d"", i);
    }
}
@e6065658eb4cd1e791daa3a6f1553321@"
"b01705003","0","0.92","105200","@e6065658eb4cd1e791daa3a6f1553321@public class Bingo {
    public static void main(String[] args) {
	int i = 0;
	i = (int)(Math.random()*10);
        System.out.println(""%d"", i);
    }
}
@e6065658eb4cd1e791daa3a6f1553321@"
"r04945025","10","0.081","104768","@3aff39a1d93b9d9b36c674ad8718a1aa@import java.io.FileReader;
import java.io.BufferedReader;
import java.util.Arrays;
import java.util.HashSet;

public class Bingo {

    public static void main(String[] args) throws Exception {
        try(BufferedReader br = new BufferedReader(new FileReader(args[0]))){
            HashSet<String> hash = new HashSet<String>();
            String[] data = br.readLine().split("","");
            int count = 0;
            int set = Integer.parseInt(data[0]);
            int num = Integer.parseInt(data[1]);
            boolean[][] bingo = new boolean[num][num];
            boolean[][] result = new boolean[2 * num + 2][num];
            boolean[] cmp = new boolean[num];

            //Point2D point = new Point2D(2.1, 3.1);
            data = br.readLine().split("","");
            for(int i = 0; i < set; i++){
                if(!hash.contains(data[i])) hash.add(data[i]);
            }

            for(int i = 0; i < num; i++){
                data = br.readLine().split("","");
                for(int j = 0; j < num; j++){
                    if(hash.contains(data[j])) bingo[i][j] = true;
                }
            }

            for(int i = 0; i < num; i++){
                result[i] = bingo[i];
                for(int j = 0; j < num; j++) {
                    result[num + j][i] = bingo[i][j];
                    if(i == j){
                        result[2 * num][i] = bingo[i][i];
                    }
                    if(i + j == num - 1){
                        result[2 * num + 1][j] = bingo[i][j];
                    }
                }
            }

            /*for(int i = 0; i < 2 * num + 2; i++){
                if(i == num || i == 2*num){
                    System.err.printf(""-----------------------------------\n"");
                }
                for(int j = 0; j < num; j++){
                    System.err.printf(""%b\t"", result[i][j]);
                }
                System.err.printf(""\n"");
            }*/

            for(int i = 0; i < num; i++){
                cmp[i] = true;
            }

            for(int i = 0; i < num * 2 + 2; i++){
                if(Arrays.equals(cmp, result[i])) count++;
            }
            System.out.printf(""%d\n"", count);
        }
    }
}

@3aff39a1d93b9d9b36c674ad8718a1aa@"
"r02b48003","6","1.22","111024","@49c34ad73cdfb28b3ae6590632558162@/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
*/

import java.io.File;
import java.io.FileNotFoundException;
import java.util.Scanner;
import java.util.Arrays;


/**
 *
 * @author clint
 */
public class Bingo {
    private int lenList;
    private int dimBoard;
    private String[] bingoBoard;
    
    public Bingo(int m, int n){
        lenList  =  m; // m: the length of countryList
        dimBoard =  n; // n: the dimension of board = n*n
        bingoBoard = new String[n*n];
    } // end constructor
    
    public String[] getBoard() {
        return bingoBoard;
    } // end getBoard
        
    public String getBoardItem(int row, int col) {
        return bingoBoard[row * dimBoard + col];
    } // end getItem
        
    public void setBoardItem(int row, int col, String val) {
        bingoBoard[row * dimBoard + col] = val;
    } // end setBoard
    
    public void crossOut(String val){
        for (int idx = 0; idx < dimBoard * dimBoard; idx++){
            if (bingoBoard[idx].equals(val)){
                bingoBoard[idx] = ""0"";
            }
        }
    }
    
    public int checkWin() {
        int flag = 0;
        
        // check row
        for (int row = 0; row < dimBoard; row++){
            flag = 0;
            for (int col = 0; col < dimBoard; col++) {
                if (bingoBoard[row * dimBoard + col].equals(""0"")){
                    flag += 1;
                } // end if
            } // end inner loop
            
            // check isWin
            if (flag == dimBoard){
                return 1;
            } // end if
        } // end outer loop
        
        
        
        // check col
        for (int col = 0; col < dimBoard; col++){
            flag = 0;
            for (int row = 0; row < dimBoard; row++) {
                if (bingoBoard[row * dimBoard + col].equals(""0"")){
                    flag += 1;
                } // end if
            } // end inner loop
            
            // check isWin
            if (flag == dimBoard){
                return 1;
            } // end if
        } // end outer loop
        
        
        
        // check 
        flag = 0;
        for (int row = 0; row < dimBoard; row++) {
            if (bingoBoard[row * dimBoard + row].equals(""0"")){
                    flag += 1;
            } // end if
        } // end loop
        
        // check isWin
        if (flag == dimBoard){
            return 1;
        } // end if
        
        
        return 0;
    }
    
    public static void main(String[] args) {
        // Write your name and age to the file
        int m = 0;
        int n = 0;
        Bingo bingo = new Bingo(m, n);
        String   temptLine = """";
        String[] temptList = {""""};
        String[] temptBoard = {""""};
        String[] countryList = {""""};
               
        try {
            //File file = new File(""input.txt"");
            File file = new File(args[0]);
            Scanner input = new Scanner(file);
            
            // read in the first line to get m and n
            temptLine = input.nextLine();
            temptList = temptLine.split("","");
            m = Integer.valueOf(temptList[0]);
            n = Integer.valueOf(temptList[1]);
            
            // initialized the countryList and board
            bingo = new Bingo(m, n);
            countryList = new String[m];
            temptBoard = new String[n*n];

            // read in the second line to get country list
            temptLine = input.nextLine();
            temptList = temptLine.split("","");
            System.arraycopy(temptList, 0, countryList, 0, m);

            // read in the third line to get bingo board
            for (int row = 0; row < n; row++) {
                // read in a row
                temptLine = input.nextLine();
                temptList = temptLine.split("","");
                System.arraycopy(temptList, 0, temptBoard, row * n, n);
                
                for (int col = 0; col < n; col++) {
                    bingo.setBoardItem(row, col, temptList[col]);    
                } // end inner loop
            } // end outer loop
            
            for (int idx = 0; idx < m; idx++) {
                bingo.crossOut(countryList[idx]);
            }
            
        }catch (FileNotFoundException ex) {
            System.out.println(ex);
        }    
              
//        System.out.println(""Length: m and n"");
//        System.out.print(""    m: "");
//        System.out.print(m);
//        System.out.print(""    n: "");
//        System.out.print(n);
//        System.out.println(""\n"");
//        
//        System.out.println(""List of Countries"");
//        System.out.println(Arrays.toString(countryList));
//        System.out.println("""");
//        
//        System.out.println(""Bingo Board"");
//        System.out.println(Arrays.toString(temptBoard));
//        System.out.println(Arrays.toString(bingo.getBoard()));
//        System.out.println("""");
//        
//        System.out.println(""Check Win"");
        System.out.println(bingo.checkWin());
            
        
        
        
            
        
        
    } // end main
}

@49c34ad73cdfb28b3ae6590632558162@"
"b01801041","4","0.93","104496","@7ee69f3a99cc71f4a595a80a67922077@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
        //use args to recieve input data
        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]); //parseInt: read as Decimal Integer

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] refCountries = new String[stringCount];
            String[][] inputCountries = new String[num][num];    //2D arrays
//            String[] inputCountries = new String[num * num];    //1D array

            refCountries = br.readLine().split("","");

//            //1D array
//            for (int i = 0; i < num * num; i++) {
//                String[] temp = new String[num * num];
//                temp[i] = br.readLine().split("","")
//            }
//            System.out.println(refCountries[0]);
            //try to understand 2D arrays
            for (int i = 0; i < num; i++) {
                inputCountries[i] = br.readLine().split("","");
            }

            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (inputCountries[i][j].equals(refCountries[1])) {
                        inputCountries[i][j] = refCountries[0];
                    }
                }
            }

            int point = 0;
            int line = 0;

            //left-right
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (inputCountries[i][j].equals(refCountries[0])) {
                        point += 1;//換行如何重新計算？
                        if (point == num) {
                            line += 1;
                        }
                    }
                }
            }

            //up-down
            for (int j = 0; j < num; j++) {
                for (int i = 0; i < num; i++) {
                    if (inputCountries[i][j].equals(refCountries[0])) {
                        point += 1;
                        if (point == num) {
                            line += 1;
                        }
                    }
                }
            }

            //leftup-rightdown
            for (int i = 0; i < num; i++) {
                if (inputCountries[i][i].equals(refCountries[0])) {
                    point += 1;
                    if (point == num) {
                        line += 1;
                    }
                }
            }

            //leftdown-rightup
            for (int i = 0; i < num; i++) {
                if (inputCountries[num - 1 - i][i].equals(refCountries[0])) {
                    point += 1;
                    if (point == num) {
                        line += 1;
                    }
                }
            }
            System.out.println(line);
            /*try (BufferedReader br2 = new BufferedReader(new FileReader(args[1]))) {
             String[] data2 = br2.readLine().split("","");
                
             }*/
            // printf in Java (you should comment out or delete this in your final submission)
//        System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            //%d=integer, refer to the ""num"" behind. %f=floating-point number. %s=string.
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         *  6. alter the input file (changing countries) to assure the stability of your program
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@7ee69f3a99cc71f4a595a80a67922077@"
"b01801041","4","0.92","105232","@58c4b5908b6980133c74c3dbc05ba155@
import java.io.FileReader;
import java.io.BufferedReader;

public class Bingo {

    public static void main(String[] args) throws Exception {
        //use args to recieve input data
        // read file from args[0] in Java 7 style
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {

            // read a line and split by ','
            String[] data = br.readLine().split("","");

            // store the first integer in variable stringCount (number of announced strings)
            int stringCount = Integer.parseInt(data[0]); //parseInt: read as Decimal Integer

            // store the second integer in variable num (dimension of matrix: num * num)            
            int num = Integer.parseInt(data[1]);

            // initilization of a String array in Java
            String[] refCountries = new String[stringCount];
            String[][] inputCountries = new String[num][num];    //2D arrays
//            String[] inputCountries = new String[num * num];    //1D array

            refCountries = br.readLine().split("","");

//            //1D array
//            for (int i = 0; i < num * num; i++) {
//                String[] temp = new String[num * num];
//                temp[i] = br.readLine().split("","")
//            }
//            System.out.println(refCountries[0]);
            //try to understand 2D arrays
            for (int i = 0; i < num; i++) {
                inputCountries[i] = br.readLine().split("","");
            }

            //change all the other refCountries to Japan
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    for (int k = 1; k < stringCount; k++) {
                        if (inputCountries[i][j].equals(refCountries[k])) {
                            inputCountries[i][j] = refCountries[0];
                        }
                    }
                }
            }

            int point = 0;
            int line = 0;

            //left-right
            for (int i = 0; i < num; i++) {
                for (int j = 0; j < num; j++) {
                    if (inputCountries[i][j].equals(refCountries[0])) {
                        point += 1;//換行如何重新計算？
                        if (point == num) {
                            line += 1;
                        }
                    }
                }
            }

            //up-down
            for (int j = 0; j < num; j++) {
                for (int i = 0; i < num; i++) {
                    if (inputCountries[i][j].equals(refCountries[0])) {
                        point += 1;
                        if (point == num) {
                            line += 1;
                        }
                    }
                }
            }

            //leftup-rightdown
            for (int i = 0; i < num; i++) {
                if (inputCountries[i][i].equals(refCountries[0])) {
                    point += 1;
                    if (point == num) {
                        line += 1;
                    }
                }
            }

            //leftdown-rightup
            for (int i = 0; i < num; i++) {
                if (inputCountries[num - 1 - i][i].equals(refCountries[0])) {
                    point += 1;
                    if (point == num) {
                        line += 1;
                    }
                }
            }
            System.out.println(line);
            /*try (BufferedReader br2 = new BufferedReader(new FileReader(args[1]))) {
             String[] data2 = br2.readLine().split("","");
                
             }*/
            // printf in Java (you should comment out or delete this in your final submission)
//        System.out.printf(""number of announced strings: %d\ndimension of matrix: %d x %d\n"", stringCount, num, num);
            //%d=integer, refer to the ""num"" behind. %f=floating-point number. %s=string.
        }

        /*  now you can write your own solution to hw0
         *  you can follow the instruction described below:
         * 
         *  1. read the rest content of the file
         *  2. store the announce strings (2nd line of the file) in variable announce
         *  3. store the matrix (from the 3rd line to the end of the file) in variable matrix
         *  4. compare the matrix and announce strings (this is the tricky part)
         *  5. output how many 'straight line' are there in the matrix
         *  6. alter the input file (changing countries) to assure the stability of your program
         * 
         *  [note]
         *  you can use every data structure in standard Java packages (Java 8 supported)
         *  the packages in stdlib.jar and algs4.jar are also available for you to use
         *
         *  [hint]
         *  1. you should check whether Java pass the variable by references or by values.
         *  2. some data structure such as HashSet, HashMap, Arrays, ArrayList, Vector are very
         *     useful for solving problems. 
         */
    }
}

@58c4b5908b6980133c74c3dbc05ba155@"
"r04631027","0","1.09","156000","@9a785bf9548cf324c2327efabb33c006@

import java.io.BufferedReader;
import java.io.FileReader;
import java.io.IOException;

/**
 *
 * @author YuChing
 */
public class Percolation {

    /**
     * @param args the command line arguments
     */
    public static void main(String[] args) {
        try {
            FileReader fr = new FileReader(args[0]);
            BufferedReader br = new BufferedReader(fr);
            String line;
            line = br.readLine();
            int dimention = Integer.parseInt(line);
            short[][] metrix;
            metrix = new short[dimention][dimention];
            short[][] ver;
            ver = new short[dimention - 1][dimention];
            int[][] hor;
            hor = new int[dimention][dimention - 1];
            int[] union;
            union = new int[dimention - 1];
            int[] oh;
            oh = new int[dimention - 1];
            int[] connect;
            connect = new int[dimention - 1];
            int finalc ;
            boolean ok = true;

            while (ok) {
                finalc = 0;
                line = br.readLine();
                if (line == null) {
                    break;
                }
                String[] buffer = line.split("","");
                int x = Integer.parseInt(buffer[0]);
                int y = Integer.parseInt(buffer[1]);
                metrix[x - 1][y - 1] = 1;
                //垂直向上
                if (x != 1 && metrix[x - 2][y - 1] > 0) {
                    ver[x - 2][y - 1] = 1;
                    if (union[x - 2] == 0) {
                        union[x - 2] = 1;
                    }
                    if (oh[x - 2] == 0) {
                        oh[x - 2] = y - 1;
                    }
                }
                //垂直向下
                if (x != dimention && metrix[x][y - 1] > 0) {
                    ver[x - 1][y - 1] = 1;
                    if (union[x - 1] == 0) {
                        union[x - 1] = 1;
                    }
                    if (oh[x - 1] == 0) {
                        oh[x - 1] = y - 1;
                    }
                }
                //left
                if (y != 1 && metrix[x - 1][y - 2] > 0) {
                    hor[x - 1][y - 2] = 1;
                }
                //right
                if (y != dimention && metrix[x - 1][y] > 0) {
                    hor[x - 1][y - 1] = 1;
                }

                for (int i = 0; i < (union.length) - 1; i++) {
                    if (union[i] == union[i + 1]) {
                        int cross = oh[i] - oh[i + 1];

                        if (cross > 0) {
                            int count = 0;
                            for (int j = cross; j > 0; j--) {
                                if (hor[i + 1][oh[i] - j] == 1) {
                                    count++;
                                }
                            }
                            if (count == cross) {
                                connect[i] = 1;
                                if (i + 1 == (union.length) - 1) {
                                    connect[i + 1] = 1;
                                }
                            }
                        }
                        if (cross < 0) {
                            int count = 0;
                            for (int j = 0; j < -cross; j++) {
                                if (hor[i + 1][oh[i] + j] == 1) {
                                    count++;
                                }
                            }
                            if (count == (-cross)) {
                                connect[i] = 1;
                                if (i + 1 == (union.length) - 1) {
                                    connect[i + 1] = 1;
                                }
                            }
                        }
                    }
                }
                for (int i = 0; i < connect.length; i++) {
                    finalc += connect[i];
                }
                if (finalc == dimention - 1) {
                    ok = false;
                }
            }
            if (line != null) {
                System.out.println(line);
            } else {
                System.out.println(""-1"");
            }

        } catch (IOException e) {
            System.out.println(e);
        }
    }

}

@9a785bf9548cf324c2327efabb33c006@"
"b03611011","0","0.145","155376","@0a4ddfa8b9b88591c93a0eebba0c79b7@
import java.io.FileReader;
import java.io.BufferedReader;

public class Percolation {

    private static int id[], count[];
    private static int num, tf = 0, tep;
    private static int number;
    private static final int v = 2;

    public static void union(int p) {
        int quotient;
        int pid = id[p];
        tf = 0;
        tep = (p - 1) / num;
        quotient = p % num;
        switch (tep) {
            case 0:
                id[p] = 1;
                if (id[p + num] > 0) {
                    id[p + num] = 1;
                    tf = 1;
                }
                break;
            default:
                switch (quotient) {
                    case 1:
                        if (id[p - num] == 1) {
                            id[p] = 1;
                            tf = 1;
                        }
                        if (id[p + 1] == 1) {
                            id[p] = 1;
                            tf = 1;
                        }
                        if (tep >= num - 1) {
                            break;
                        } else {
                            if (id[p + num] == 1) {
                                id[p] = 1;
                                tf = 1;
                            }
                        }
                        break;
                    case 0:
                        if (id[p - num] == 1) {
                            id[p] = 1;
                            tf = 1;
                        }
                        if (id[p - 1] == 1) {
                            id[p] = 1;
                            tf = 1;
                        }
                        if (tep >= num - 1) {
                            break;
                        } else {
                            if (id[p + num] == 1) {
                                id[p] = 1;
                                tf = 1;
                            }
                        }
                        break;
                    default:
                        if (id[p - num] == 1) {
                            id[p] = 1;
                            tf = 1;
                        }
                        if (id[p + 1] == 1) {
                            id[p] = 1;
                            tf = 1;
                        }
                        if (id[p - 1] == 1) {
                            id[p] = 1;
                            tf = 1;
                        }
                        if (tep >= num - 1) {
                            break;
                        } else {
                            if (id[p + num] == 1) {
                                id[p] = 1;
                                tf = 1;
                            }
                        }
                        break;
                }
        }
//左右同步
        if (tf == 1 && quotient < num - 1) {
            switch (tep) {
                case 1:
                    for (int i = 1; i <= num - quotient && id[p + i] != 0; i++) {
                        if (id[p + i] == 2) {
                            id[p + i] = 1;
                        }
                    }
                    for (int i = 1;
                            i <= num - 1 && id[p + num ] != 0;
                            i++) {
                        if (id[p + num ] == 2) {
                            id[p + num ] = 1;
                        }
                    }
                    break;
                case 0:
                    for (int i = 1; i <= quotient - 1 && id[p - i] != 0; i++) {
                        if (id[p - 1] == 2) {
                            id[p - 1] = 1;
                        }
                    }
                    for (int i = 1;
                            i <= num - 1 && id[p + num * i] != 0; i++) {
                        if (id[p + num * i] == 2) {
                            id[p + num * i] = 1;
                        }
                    }
                    break;
                default:
                    if (id[p + 1] == 2) {
                        id[p + 1] = 1;
                    }
                    if (id[p - 1] == 2) {
                        id[p - 1] = 1;
                    }
                    break;
            }
        }
        //check connective
        if(tf==1){
        for (int i = 1; i < num; i++) {
            for (int j = 2; j < num; j++) {
                int g = num * (i) + j;
                if (id[j * num + 1] == 1) {
                    if (id[j * num + 2] == 2) {
                        id[j * num + 2] = 1;
                    }
                }
                if (id[g] == 1) {
                    if (id[g + 1] == 2) {
                        id[g + 1] = 1;
                    }
                    if (id[g - 1] == 2) {
                        id[g - 1] = 1;
                    }
                    if (id[g + num] == 2) {
                        id[g + num] = 1;
                    }
                    if (id[g - num] == 2) {
                        id[g - num] = 1;
                        i--;
                        j--;
                    }
                }
            }
            
            if (id[i * num] == 1) {
                if (id[i * num + num] == 2) {
                    id[i * num + num] =1;
                }
            }
        }
        }
        for (int i = 0; i < num; i++) {
            if (id[num * (num - 1) + 1 + i] == 1) {
                tf = -1;
                return;
            }
        }
    }

    public static void point(int x, int y) {
        number = 0;
        number = (x - 1) * num + y;
    }

    public static void main(String[] args) throws Exception {
        String data;
        try (BufferedReader br = new BufferedReader(new FileReader(args[0]))) {
            String[] sum = br.readLine().split("","");
            num = Integer.parseInt(sum[0]);
            int cube[] = new int[num * num + 2];
            id = cube.clone();
            for (int i = 0; i < cube.length; i++) {
                cube[i] = i;
                id[i] = 0;
            }
            id[0] = 1;
            String[] data1;
            int j = 1;
            count = new int[2];
            number = 0;
            while ((data = br.readLine()) != null) {
                data1 = data.split("","");
                for (int i = 0; i < 2; i++) {
                    count[i] = Integer.parseInt(data1[i]);
                    //define the point
                }
                point(count[0], count[1]);
                id[number] = 2;
                union(number);
                if (tf == -1) {
                    System.out.println(count[0] + "","" + count[1]);
                    break;
                }
            }
            if (data == null) {
                System.out.println(-1);
            }
        }
    }
}

@0a4ddfa8b9b88591c93a0eebba0c79b7@"
"b01705003","0","0.88","105136","@354f7a64159ab4841d7113475c8e83b1@
public class Bingo{

    public static void main(String[] args) {
        System.out.println(""7"");
    }

}
@354f7a64159ab4841d7113475c8e83b1@"
